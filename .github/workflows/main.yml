name: "Ruby on Rails CI/CD"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.0
          bundler-cache: true
      
      - name: Install Node.js and yarn
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
      
      - name: Install dependencies
        run: |
          bundle install
          yarn install
      
      - name: Set up database
        run: |
          bin/rails db:create
          bin/rails db:migrate
      
      - name: Run tests
        run: bin/rails test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.0
          bundler-cache: true
      
      - name: Install Node.js and yarn
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
      
      - name: Install dependencies
        run: |
          bundle install
          yarn install

      - name: Build assets with esbuild
        run: bin/rails assets:precompile

      - name: Deploy to server
        run: |
          # Aquí iría el comando para desplegar en tu servidor de producción
          echo "Despliegue realizado a producción"
