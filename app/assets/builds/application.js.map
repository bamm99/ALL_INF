{
  "version": 3,
  "sources": ["../../../node_modules/@rails/actioncable/src/adapters.js", "../../../node_modules/@rails/actioncable/src/logger.js", "../../../node_modules/@rails/actioncable/src/connection_monitor.js", "../../../node_modules/@rails/actioncable/src/internal.js", "../../../node_modules/@rails/actioncable/src/connection.js", "../../../node_modules/@rails/actioncable/src/subscription.js", "../../../node_modules/@rails/actioncable/src/subscription_guarantor.js", "../../../node_modules/@rails/actioncable/src/subscriptions.js", "../../../node_modules/@rails/actioncable/src/consumer.js", "../../../node_modules/@rails/actioncable/src/index.js", "../../../node_modules/xterm/lib/webpack:/xterm/webpack/universalModuleDefinition", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/AccessibilityManager.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/Clipboard.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/ColorContrastCache.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/Lifecycle.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/Linkifier2.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/LocalizableStrings.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/OscLinkProvider.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/RenderDebouncer.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/ScreenDprMonitor.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/Terminal.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/TimeBasedDebouncer.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/Viewport.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/decorations/BufferDecorationRenderer.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/decorations/ColorZoneStore.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/decorations/OverviewRulerRenderer.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/input/CompositionHelper.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/input/Mouse.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/input/MoveToCell.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/DomRenderer.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/DomRendererRowFactory.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/WidthCache.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/shared/Constants.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/shared/RendererUtils.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/selection/SelectionModel.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/services/CharSizeService.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/services/CharacterJoinerService.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/services/CoreBrowserService.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/services/MouseService.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/services/RenderService.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/services/SelectionService.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/services/Services.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/services/ThemeService.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/CircularList.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/Clone.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/Color.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/CoreTerminal.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/EventEmitter.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/InputHandler.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/Lifecycle.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/MultiKeyMap.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/Platform.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/SortedList.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/TaskQueue.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/WindowsMode.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/AttributeData.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Buffer.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferLine.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferRange.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferReflow.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferSet.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/CellData.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Constants.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Marker.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/data/Charsets.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/data/EscapeSequences.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/input/Keyboard.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/input/TextDecoder.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/input/UnicodeV6.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/input/WriteBuffer.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/input/XParseColor.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/parser/Constants.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/parser/DcsParser.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/parser/EscapeSequenceParser.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/parser/OscParser.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/parser/Params.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/public/AddonManager.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferApiView.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferLineApiView.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferNamespaceApi.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/public/ParserApi.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/public/UnicodeApi.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/services/BufferService.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/services/CharsetService.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/services/CoreMouseService.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/services/CoreService.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/services/DecorationService.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/services/InstantiationService.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/services/LogService.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/services/OptionsService.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/services/OscLinkService.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/services/ServiceRegistry.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/services/Services.ts", "../../../node_modules/xterm/lib/webpack:/xterm/src/common/services/UnicodeService.ts", "../../../node_modules/xterm/lib/webpack:/xterm/webpack/bootstrap", "../../../node_modules/xterm/lib/webpack:/xterm/src/browser/public/Terminal.ts", "../../../node_modules/@rails/activestorage/app/assets/javascripts/activestorage.js", "../../../node_modules/@hotwired/turbo/dist/turbo.es2017-esm.js", "../../../node_modules/@hotwired/turbo-rails/app/javascript/turbo/cable.js", "../../../node_modules/@hotwired/turbo-rails/app/javascript/turbo/snakeize.js", "../../../node_modules/@hotwired/turbo-rails/app/javascript/turbo/cable_stream_source_element.js", "../../../node_modules/@hotwired/turbo-rails/app/javascript/turbo/fetch_requests.js", "../../../node_modules/@hotwired/turbo-rails/app/javascript/turbo/index.js", "../../../node_modules/@hotwired/stimulus/dist/stimulus.js", "../../javascript/controllers/application.js", "../../javascript/controllers/hello_controller.js", "../../javascript/controllers/index.js", "../../javascript/application.js", "../../../node_modules/@rails/ujs/app/assets/javascripts/rails-ujs.esm.js"],
  "sourcesContent": ["export default {\n  logger: typeof console !== \"undefined\" ? console : undefined,\n  WebSocket: typeof WebSocket !== \"undefined\" ? WebSocket : undefined,\n}\n", "import adapters from \"./adapters\"\n\n// The logger is disabled by default. You can enable it with:\n//\n//   ActionCable.logger.enabled = true\n//\n//   Example:\n//\n//   import * as ActionCable from '@rails/actioncable'\n//\n//   ActionCable.logger.enabled = true\n//   ActionCable.logger.log('Connection Established.')\n//\n\nexport default {\n  log(...messages) {\n    if (this.enabled) {\n      messages.push(Date.now())\n      adapters.logger.log(\"[ActionCable]\", ...messages)\n    }\n  },\n}\n", "import logger from \"./logger\"\n\n// Responsible for ensuring the cable connection is in good health by validating the heartbeat pings sent from the server, and attempting\n// revival reconnections if things go astray. Internal class, not intended for direct user manipulation.\n\nconst now = () => new Date().getTime()\n\nconst secondsSince = time => (now() - time) / 1000\n\nclass ConnectionMonitor {\n  constructor(connection) {\n    this.visibilityDidChange = this.visibilityDidChange.bind(this)\n    this.connection = connection\n    this.reconnectAttempts = 0\n  }\n\n  start() {\n    if (!this.isRunning()) {\n      this.startedAt = now()\n      delete this.stoppedAt\n      this.startPolling()\n      addEventListener(\"visibilitychange\", this.visibilityDidChange)\n      logger.log(`ConnectionMonitor started. stale threshold = ${this.constructor.staleThreshold} s`)\n    }\n  }\n\n  stop() {\n    if (this.isRunning()) {\n      this.stoppedAt = now()\n      this.stopPolling()\n      removeEventListener(\"visibilitychange\", this.visibilityDidChange)\n      logger.log(\"ConnectionMonitor stopped\")\n    }\n  }\n\n  isRunning() {\n    return this.startedAt && !this.stoppedAt\n  }\n\n  recordPing() {\n    this.pingedAt = now()\n  }\n\n  recordConnect() {\n    this.reconnectAttempts = 0\n    this.recordPing()\n    delete this.disconnectedAt\n    logger.log(\"ConnectionMonitor recorded connect\")\n  }\n\n  recordDisconnect() {\n    this.disconnectedAt = now()\n    logger.log(\"ConnectionMonitor recorded disconnect\")\n  }\n\n  // Private\n\n  startPolling() {\n    this.stopPolling()\n    this.poll()\n  }\n\n  stopPolling() {\n    clearTimeout(this.pollTimeout)\n  }\n\n  poll() {\n    this.pollTimeout = setTimeout(() => {\n      this.reconnectIfStale()\n      this.poll()\n    }\n    , this.getPollInterval())\n  }\n\n  getPollInterval() {\n    const { staleThreshold, reconnectionBackoffRate } = this.constructor\n    const backoff = Math.pow(1 + reconnectionBackoffRate, Math.min(this.reconnectAttempts, 10))\n    const jitterMax = this.reconnectAttempts === 0 ? 1.0 : reconnectionBackoffRate\n    const jitter = jitterMax * Math.random()\n    return staleThreshold * 1000 * backoff * (1 + jitter)\n  }\n\n  reconnectIfStale() {\n    if (this.connectionIsStale()) {\n      logger.log(`ConnectionMonitor detected stale connection. reconnectAttempts = ${this.reconnectAttempts}, time stale = ${secondsSince(this.refreshedAt)} s, stale threshold = ${this.constructor.staleThreshold} s`)\n      this.reconnectAttempts++\n      if (this.disconnectedRecently()) {\n        logger.log(`ConnectionMonitor skipping reopening recent disconnect. time disconnected = ${secondsSince(this.disconnectedAt)} s`)\n      } else {\n        logger.log(\"ConnectionMonitor reopening\")\n        this.connection.reopen()\n      }\n    }\n  }\n\n  get refreshedAt() {\n    return this.pingedAt ? this.pingedAt : this.startedAt\n  }\n\n  connectionIsStale() {\n    return secondsSince(this.refreshedAt) > this.constructor.staleThreshold\n  }\n\n  disconnectedRecently() {\n    return this.disconnectedAt && (secondsSince(this.disconnectedAt) < this.constructor.staleThreshold)\n  }\n\n  visibilityDidChange() {\n    if (document.visibilityState === \"visible\") {\n      setTimeout(() => {\n        if (this.connectionIsStale() || !this.connection.isOpen()) {\n          logger.log(`ConnectionMonitor reopening stale connection on visibilitychange. visibilityState = ${document.visibilityState}`)\n          this.connection.reopen()\n        }\n      }\n      , 200)\n    }\n  }\n\n}\n\nConnectionMonitor.staleThreshold = 6 // Server::Connections::BEAT_INTERVAL * 2 (missed two pings)\nConnectionMonitor.reconnectionBackoffRate = 0.15\n\nexport default ConnectionMonitor\n", "export default {\n  \"message_types\": {\n    \"welcome\": \"welcome\",\n    \"disconnect\": \"disconnect\",\n    \"ping\": \"ping\",\n    \"confirmation\": \"confirm_subscription\",\n    \"rejection\": \"reject_subscription\"\n  },\n  \"disconnect_reasons\": {\n    \"unauthorized\": \"unauthorized\",\n    \"invalid_request\": \"invalid_request\",\n    \"server_restart\": \"server_restart\",\n    \"remote\": \"remote\"\n  },\n  \"default_mount_path\": \"/cable\",\n  \"protocols\": [\n    \"actioncable-v1-json\",\n    \"actioncable-unsupported\"\n  ]\n}\n", "import adapters from \"./adapters\"\nimport ConnectionMonitor from \"./connection_monitor\"\nimport INTERNAL from \"./internal\"\nimport logger from \"./logger\"\n\n// Encapsulate the cable connection held by the consumer. This is an internal class not intended for direct user manipulation.\n\nconst {message_types, protocols} = INTERNAL\nconst supportedProtocols = protocols.slice(0, protocols.length - 1)\n\nconst indexOf = [].indexOf\n\nclass Connection {\n  constructor(consumer) {\n    this.open = this.open.bind(this)\n    this.consumer = consumer\n    this.subscriptions = this.consumer.subscriptions\n    this.monitor = new ConnectionMonitor(this)\n    this.disconnected = true\n  }\n\n  send(data) {\n    if (this.isOpen()) {\n      this.webSocket.send(JSON.stringify(data))\n      return true\n    } else {\n      return false\n    }\n  }\n\n  open() {\n    if (this.isActive()) {\n      logger.log(`Attempted to open WebSocket, but existing socket is ${this.getState()}`)\n      return false\n    } else {\n      const socketProtocols = [...protocols, ...this.consumer.subprotocols || []]\n      logger.log(`Opening WebSocket, current state is ${this.getState()}, subprotocols: ${socketProtocols}`)\n      if (this.webSocket) { this.uninstallEventHandlers() }\n      this.webSocket = new adapters.WebSocket(this.consumer.url, socketProtocols)\n      this.installEventHandlers()\n      this.monitor.start()\n      return true\n    }\n  }\n\n  close({allowReconnect} = {allowReconnect: true}) {\n    if (!allowReconnect) { this.monitor.stop() }\n    // Avoid closing websockets in a \"connecting\" state due to Safari 15.1+ bug. See: https://github.com/rails/rails/issues/43835#issuecomment-1002288478\n    if (this.isOpen()) {\n      return this.webSocket.close()\n    }\n  }\n\n  reopen() {\n    logger.log(`Reopening WebSocket, current state is ${this.getState()}`)\n    if (this.isActive()) {\n      try {\n        return this.close()\n      } catch (error) {\n        logger.log(\"Failed to reopen WebSocket\", error)\n      }\n      finally {\n        logger.log(`Reopening WebSocket in ${this.constructor.reopenDelay}ms`)\n        setTimeout(this.open, this.constructor.reopenDelay)\n      }\n    } else {\n      return this.open()\n    }\n  }\n\n  getProtocol() {\n    if (this.webSocket) {\n      return this.webSocket.protocol\n    }\n  }\n\n  isOpen() {\n    return this.isState(\"open\")\n  }\n\n  isActive() {\n    return this.isState(\"open\", \"connecting\")\n  }\n\n  triedToReconnect() {\n    return this.monitor.reconnectAttempts > 0\n  }\n\n  // Private\n\n  isProtocolSupported() {\n    return indexOf.call(supportedProtocols, this.getProtocol()) >= 0\n  }\n\n  isState(...states) {\n    return indexOf.call(states, this.getState()) >= 0\n  }\n\n  getState() {\n    if (this.webSocket) {\n      for (let state in adapters.WebSocket) {\n        if (adapters.WebSocket[state] === this.webSocket.readyState) {\n          return state.toLowerCase()\n        }\n      }\n    }\n    return null\n  }\n\n  installEventHandlers() {\n    for (let eventName in this.events) {\n      const handler = this.events[eventName].bind(this)\n      this.webSocket[`on${eventName}`] = handler\n    }\n  }\n\n  uninstallEventHandlers() {\n    for (let eventName in this.events) {\n      this.webSocket[`on${eventName}`] = function() {}\n    }\n  }\n\n}\n\nConnection.reopenDelay = 500\n\nConnection.prototype.events = {\n  message(event) {\n    if (!this.isProtocolSupported()) { return }\n    const {identifier, message, reason, reconnect, type} = JSON.parse(event.data)\n    switch (type) {\n      case message_types.welcome:\n        if (this.triedToReconnect()) {\n          this.reconnectAttempted = true\n        }\n        this.monitor.recordConnect()\n        return this.subscriptions.reload()\n      case message_types.disconnect:\n        logger.log(`Disconnecting. Reason: ${reason}`)\n        return this.close({allowReconnect: reconnect})\n      case message_types.ping:\n        return this.monitor.recordPing()\n      case message_types.confirmation:\n        this.subscriptions.confirmSubscription(identifier)\n        if (this.reconnectAttempted) {\n          this.reconnectAttempted = false\n          return this.subscriptions.notify(identifier, \"connected\", {reconnected: true})\n        } else {\n          return this.subscriptions.notify(identifier, \"connected\", {reconnected: false})\n        }\n      case message_types.rejection:\n        return this.subscriptions.reject(identifier)\n      default:\n        return this.subscriptions.notify(identifier, \"received\", message)\n    }\n  },\n\n  open() {\n    logger.log(`WebSocket onopen event, using '${this.getProtocol()}' subprotocol`)\n    this.disconnected = false\n    if (!this.isProtocolSupported()) {\n      logger.log(\"Protocol is unsupported. Stopping monitor and disconnecting.\")\n      return this.close({allowReconnect: false})\n    }\n  },\n\n  close(event) {\n    logger.log(\"WebSocket onclose event\")\n    if (this.disconnected) { return }\n    this.disconnected = true\n    this.monitor.recordDisconnect()\n    return this.subscriptions.notifyAll(\"disconnected\", {willAttemptReconnect: this.monitor.isRunning()})\n  },\n\n  error() {\n    logger.log(\"WebSocket onerror event\")\n  }\n}\n\nexport default Connection\n", "// A new subscription is created through the ActionCable.Subscriptions instance available on the consumer.\n// It provides a number of callbacks and a method for calling remote procedure calls on the corresponding\n// Channel instance on the server side.\n//\n// An example demonstrates the basic functionality:\n//\n//   App.appearance = App.cable.subscriptions.create(\"AppearanceChannel\", {\n//     connected() {\n//       // Called once the subscription has been successfully completed\n//     },\n//\n//     disconnected({ willAttemptReconnect: boolean }) {\n//       // Called when the client has disconnected with the server.\n//       // The object will have an `willAttemptReconnect` property which\n//       // says whether the client has the intention of attempting\n//       // to reconnect.\n//     },\n//\n//     appear() {\n//       this.perform('appear', {appearing_on: this.appearingOn()})\n//     },\n//\n//     away() {\n//       this.perform('away')\n//     },\n//\n//     appearingOn() {\n//       $('main').data('appearing-on')\n//     }\n//   })\n//\n// The methods #appear and #away forward their intent to the remote AppearanceChannel instance on the server\n// by calling the `perform` method with the first parameter being the action (which maps to AppearanceChannel#appear/away).\n// The second parameter is a hash that'll get JSON encoded and made available on the server in the data parameter.\n//\n// This is how the server component would look:\n//\n//   class AppearanceChannel < ApplicationActionCable::Channel\n//     def subscribed\n//       current_user.appear\n//     end\n//\n//     def unsubscribed\n//       current_user.disappear\n//     end\n//\n//     def appear(data)\n//       current_user.appear on: data['appearing_on']\n//     end\n//\n//     def away\n//       current_user.away\n//     end\n//   end\n//\n// The \"AppearanceChannel\" name is automatically mapped between the client-side subscription creation and the server-side Ruby class name.\n// The AppearanceChannel#appear/away public methods are exposed automatically to client-side invocation through the perform method.\n\nconst extend = function(object, properties) {\n  if (properties != null) {\n    for (let key in properties) {\n      const value = properties[key]\n      object[key] = value\n    }\n  }\n  return object\n}\n\nexport default class Subscription {\n  constructor(consumer, params = {}, mixin) {\n    this.consumer = consumer\n    this.identifier = JSON.stringify(params)\n    extend(this, mixin)\n  }\n\n  // Perform a channel action with the optional data passed as an attribute\n  perform(action, data = {}) {\n    data.action = action\n    return this.send(data)\n  }\n\n  send(data) {\n    return this.consumer.send({command: \"message\", identifier: this.identifier, data: JSON.stringify(data)})\n  }\n\n  unsubscribe() {\n    return this.consumer.subscriptions.remove(this)\n  }\n}\n", "import logger from \"./logger\"\n\n// Responsible for ensuring channel subscribe command is confirmed, retrying until confirmation is received.\n// Internal class, not intended for direct user manipulation.\n\nclass SubscriptionGuarantor {\n  constructor(subscriptions) {\n    this.subscriptions = subscriptions\n    this.pendingSubscriptions = []\n  }\n\n  guarantee(subscription) {\n    if(this.pendingSubscriptions.indexOf(subscription) == -1){ \n      logger.log(`SubscriptionGuarantor guaranteeing ${subscription.identifier}`)\n      this.pendingSubscriptions.push(subscription) \n    }\n    else {\n      logger.log(`SubscriptionGuarantor already guaranteeing ${subscription.identifier}`)\n    }\n    this.startGuaranteeing()\n  }\n\n  forget(subscription) {\n    logger.log(`SubscriptionGuarantor forgetting ${subscription.identifier}`)\n    this.pendingSubscriptions = (this.pendingSubscriptions.filter((s) => s !== subscription))\n  }\n\n  startGuaranteeing() {\n    this.stopGuaranteeing()\n    this.retrySubscribing()\n  }\n  \n  stopGuaranteeing() {\n    clearTimeout(this.retryTimeout)\n  }\n\n  retrySubscribing() {\n    this.retryTimeout = setTimeout(() => {\n      if (this.subscriptions && typeof(this.subscriptions.subscribe) === \"function\") {\n        this.pendingSubscriptions.map((subscription) => {\n          logger.log(`SubscriptionGuarantor resubscribing ${subscription.identifier}`)\n          this.subscriptions.subscribe(subscription)\n        })\n      }\n    }\n    , 500)\n  }\n}\n\nexport default SubscriptionGuarantor", "import Subscription from \"./subscription\"\nimport SubscriptionGuarantor from \"./subscription_guarantor\"\nimport logger from \"./logger\"\n\n// Collection class for creating (and internally managing) channel subscriptions.\n// The only method intended to be triggered by the user is ActionCable.Subscriptions#create,\n// and it should be called through the consumer like so:\n//\n//   App = {}\n//   App.cable = ActionCable.createConsumer(\"ws://example.com/accounts/1\")\n//   App.appearance = App.cable.subscriptions.create(\"AppearanceChannel\")\n//\n// For more details on how you'd configure an actual channel subscription, see ActionCable.Subscription.\n\nexport default class Subscriptions {\n  constructor(consumer) {\n    this.consumer = consumer\n    this.guarantor = new SubscriptionGuarantor(this)\n    this.subscriptions = []\n  }\n\n  create(channelName, mixin) {\n    const channel = channelName\n    const params = typeof channel === \"object\" ? channel : {channel}\n    const subscription = new Subscription(this.consumer, params, mixin)\n    return this.add(subscription)\n  }\n\n  // Private\n\n  add(subscription) {\n    this.subscriptions.push(subscription)\n    this.consumer.ensureActiveConnection()\n    this.notify(subscription, \"initialized\")\n    this.subscribe(subscription)\n    return subscription\n  }\n\n  remove(subscription) {\n    this.forget(subscription)\n    if (!this.findAll(subscription.identifier).length) {\n      this.sendCommand(subscription, \"unsubscribe\")\n    }\n    return subscription\n  }\n\n  reject(identifier) {\n    return this.findAll(identifier).map((subscription) => {\n      this.forget(subscription)\n      this.notify(subscription, \"rejected\")\n      return subscription\n    })\n  }\n\n  forget(subscription) {\n    this.guarantor.forget(subscription)\n    this.subscriptions = (this.subscriptions.filter((s) => s !== subscription))\n    return subscription\n  }\n\n  findAll(identifier) {\n    return this.subscriptions.filter((s) => s.identifier === identifier)\n  }\n\n  reload() {\n    return this.subscriptions.map((subscription) =>\n      this.subscribe(subscription))\n  }\n\n  notifyAll(callbackName, ...args) {\n    return this.subscriptions.map((subscription) =>\n      this.notify(subscription, callbackName, ...args))\n  }\n\n  notify(subscription, callbackName, ...args) {\n    let subscriptions\n    if (typeof subscription === \"string\") {\n      subscriptions = this.findAll(subscription)\n    } else {\n      subscriptions = [subscription]\n    }\n\n    return subscriptions.map((subscription) =>\n      (typeof subscription[callbackName] === \"function\" ? subscription[callbackName](...args) : undefined))\n  }\n\n  subscribe(subscription) {\n    if (this.sendCommand(subscription, \"subscribe\")) {\n      this.guarantor.guarantee(subscription)\n    }\n  }\n\n  confirmSubscription(identifier) {\n    logger.log(`Subscription confirmed ${identifier}`)\n    this.findAll(identifier).map((subscription) =>\n      this.guarantor.forget(subscription))\n  }\n\n  sendCommand(subscription, command) {\n    const {identifier} = subscription\n    return this.consumer.send({command, identifier})\n  }\n}\n", "import Connection from \"./connection\"\nimport Subscriptions from \"./subscriptions\"\n\n// The ActionCable.Consumer establishes the connection to a server-side Ruby Connection object. Once established,\n// the ActionCable.ConnectionMonitor will ensure that its properly maintained through heartbeats and checking for stale updates.\n// The Consumer instance is also the gateway to establishing subscriptions to desired channels through the #createSubscription\n// method.\n//\n// The following example shows how this can be set up:\n//\n//   App = {}\n//   App.cable = ActionCable.createConsumer(\"ws://example.com/accounts/1\")\n//   App.appearance = App.cable.subscriptions.create(\"AppearanceChannel\")\n//\n// For more details on how you'd configure an actual channel subscription, see ActionCable.Subscription.\n//\n// When a consumer is created, it automatically connects with the server.\n//\n// To disconnect from the server, call\n//\n//   App.cable.disconnect()\n//\n// and to restart the connection:\n//\n//   App.cable.connect()\n//\n// Any channel subscriptions which existed prior to disconnecting will\n// automatically resubscribe.\n\nexport default class Consumer {\n  constructor(url) {\n    this._url = url\n    this.subscriptions = new Subscriptions(this)\n    this.connection = new Connection(this)\n    this.subprotocols = []\n  }\n\n  get url() {\n    return createWebSocketURL(this._url)\n  }\n\n  send(data) {\n    return this.connection.send(data)\n  }\n\n  connect() {\n    return this.connection.open()\n  }\n\n  disconnect() {\n    return this.connection.close({allowReconnect: false})\n  }\n\n  ensureActiveConnection() {\n    if (!this.connection.isActive()) {\n      return this.connection.open()\n    }\n  }\n\n  addSubProtocol(subprotocol) {\n    this.subprotocols = [...this.subprotocols, subprotocol]\n  }\n}\n\nexport function createWebSocketURL(url) {\n  if (typeof url === \"function\") {\n    url = url()\n  }\n\n  if (url && !/^wss?:/i.test(url)) {\n    const a = document.createElement(\"a\")\n    a.href = url\n    // Fix populating Location properties in IE. Otherwise, protocol will be blank.\n    a.href = a.href\n    a.protocol = a.protocol.replace(\"http\", \"ws\")\n    return a.href\n  } else {\n    return url\n  }\n}\n", "import Connection from \"./connection\"\nimport ConnectionMonitor from \"./connection_monitor\"\nimport Consumer, { createWebSocketURL } from \"./consumer\"\nimport INTERNAL from \"./internal\"\nimport Subscription from \"./subscription\"\nimport Subscriptions from \"./subscriptions\"\nimport SubscriptionGuarantor from \"./subscription_guarantor\"\nimport adapters from \"./adapters\"\nimport logger from \"./logger\"\n\nexport {\n  Connection,\n  ConnectionMonitor,\n  Consumer,\n  INTERNAL,\n  Subscription,\n  Subscriptions,\n  SubscriptionGuarantor,\n  adapters,\n  createWebSocketURL,\n  logger,\n}\n\nexport function createConsumer(url = getConfig(\"url\") || INTERNAL.default_mount_path) {\n  return new Consumer(url)\n}\n\nexport function getConfig(name) {\n  const element = document.head.querySelector(`meta[name='action-cable-${name}']`)\n  if (element) {\n    return element.getAttribute(\"content\")\n  }\n}\n", "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityContainer: HTMLElement;\n\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n  private _liveRegionDebouncer: IRenderDebouncer;\n\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityContainer = document.createElement('div');\n    this._accessibilityContainer.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityContainer.appendChild(this._rowContainer);\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityContainer.appendChild(this._liveRegion);\n    this._liveRegionDebouncer = this.register(new TimeBasedDebouncer(this._renderRows.bind(this)));\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityContainer);\n\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor(window);\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n\n    this._refreshRows();\n    this.register(toDisposable(() => {\n      this._accessibilityContainer.remove();\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityContainer.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      this._liveRegion.remove();\n    }\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._liveRegionDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    this._accessibilityContainer.style.width = `${this._renderService.dimensions.css.canvas.width}px`;\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService, optionsService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode && optionsService.rawOptions.ignoreBracketedPasteMode !== true);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBufferCellPosition, ILink, ILinkDecorations, ILinkProvider, ILinkWithState, ILinkifier2, ILinkifierEvent } from 'browser/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, disposeArray, getDisposeArrayDisposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { IBufferService } from 'common/services/Services';\nimport { IMouseService, IRenderService } from './services/Services';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _wasResized: boolean = false;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n    }));\n    // Listen to resize to catch the case where it's resized and the cursor is out of the viewport.\n    this.register(this._bufferService.onResize(() => {\n      this._clearCurrentLink();\n      this._wasResized = true;\n    }));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine\n    //       should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y || this._wasResized) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      this._wasResized = false;\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Listen to viewport changes to re-render the link under the cursor (only when the line the\n      // link is on changes)\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // Sanity check, this shouldn't happen in practice as this listener would be disposed\n          if (!this._currentLink) {\n            return;\n          }\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          const end = this._bufferService.buffer.ydisp + 1 + e.end;\n          // Only clear the link if the viewport change happened on this line\n          if (this._currentLink.link.range.start.y >= start && this._currentLink.link.range.end.y <= end) {\n            this._clearCurrentLink(start, end);\n            if (this._lastMouseEvent && this._element) {\n              // re-eval previously active link after changes\n              const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService!);\n              if (position) {\n                this._askForLink(position, false);\n              }\n            }\n          }\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink, ILinkProvider } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same\n    //       id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _parentWindow: Window,\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._parentWindow.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  constructor(private _parentWindow: Window) {\n    super();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this.register(toDisposable(() => {\n      this.clearListener();\n    }));\n  }\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(this._parentWindow.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { copyHandler, handlePasteEvent, moveTextAreaUnderMouseCursor, paste, rightClickHandler } from 'browser/Clipboard';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { CharacterJoinerHandler, CustomKeyEventHandler, IBrowser, IBufferRange, ICompositionHelper, ILinkifier2, ITerminal, IViewport } from 'browser/Types';\nimport { Viewport } from 'browser/Viewport';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { MouseService } from 'browser/services/MouseService';\nimport { RenderService } from 'browser/services/RenderService';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport { ICharSizeService, ICharacterJoinerService, ICoreBrowserService, IMouseService, IRenderService, ISelectionService, IThemeService } from 'browser/services/Services';\nimport { ThemeService } from 'browser/services/ThemeService';\nimport { color, rgba } from 'common/Color';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { ColorRequestType, CoreMouseAction, CoreMouseButton, CoreMouseEventType, IColorEvent, ITerminalOptions, KeyboardResultType, ScrollSource, SpecialColorIndex } from 'common/Types';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { IBuffer } from 'common/buffer/Types';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { IDecoration, IDecorationOptions, IDisposable, ILinkProvider, IMarker } from 'xterm';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { AccessibilityManager } from './AccessibilityManager';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: MutableDisposable<AccessibilityManager> = this.register(new MutableDisposable());\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case SpecialColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case SpecialColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case SpecialColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const channels = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = rgba.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = rgba.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager.value && this._renderService) {\n        this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n      }\n    } else {\n      this._accessibilityManager.clear();\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService, this.optionsService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea, this._document.defaultView ?? window);\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport, this._viewportElement, this._viewportScrollArea);\n    this.viewport.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent, ScrollSource.VIEWPORT)),\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this.element!, this.screenElement!, this._viewportElement!, this.linkifier2);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        el.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        el.addEventListener('mouseup', eventListeners.mouseup);\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    if (source === ScrollSource.VIEWPORT) {\n      super.scrollLines(disp, suppressScrollEvent, source);\n      this.refresh(0, this.rows - 1);\n    } else {\n      this.viewport?.scrollLines(disp);\n    }\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService, this.optionsService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public registerMarker(cursorYOffset: number): IMarker {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    // IMPORTANT: Fire scroll event before viewport is reset. This ensures embedders get the clear\n    // scroll event and that the viewport's state will be valid for immediate writes.\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n    this.viewport?.reset();\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n    this.viewport?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<{ amount: number, suppressScrollEvent: boolean }>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that\n    // case, therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea());\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  public reset(): void {\n    this._currentRowHeight = 0;\n    this._currentDeviceCellHeight = 0;\n    this._lastRecordedBufferLength = 0;\n    this._lastRecordedViewportHeight = 0;\n    this._lastRecordedBufferHeight = 0;\n    this._lastTouchY = 0;\n    this._lastScrollTop = 0;\n    // Sync on next animation frame to ensure the new terminal state is used\n    this._coreBrowserService.window.requestAnimationFrame(() => this.syncScrollArea());\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderService.dimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._onRequestScrollLines.fire({ amount: 0, suppressScrollEvent: true });\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._onRequestScrollLines.fire({ amount: diff, suppressScrollEvent: true });\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  public scrollLines(disp: number): void {\n    if (disp === 0) {\n      return;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._onRequestScrollLines.fire({ amount: disp, suppressScrollEvent: false });\n    } else {\n      const amount = disp * this._currentRowHeight;\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        this._smoothScrollState.target = this._smoothScrollState.origin + amount;\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n\n  public getBufferElements(startLine: number, endLine?: number): { bufferElements: HTMLElement[], cursorElement?: HTMLElement } {\n    let currentLine: string = '';\n    let cursorElement: HTMLElement | undefined;\n    const bufferElements: HTMLElement[] = [];\n    const end = endLine ?? this._bufferService.buffer.lines.length;\n    const lines = this._bufferService.buffer.lines;\n    for (let i = startLine; i < end; i++) {\n      const line = lines.get(i);\n      if (!line) {\n        continue;\n      }\n      const isWrapped = lines.get(i + 1)?.isWrapped;\n      currentLine += line.translateToString(!isWrapped);\n      if (!isWrapped || i === lines.length - 1) {\n        const div = document.createElement('div');\n        div.textContent = currentLine;\n        bufferElements.push(div);\n        if (currentLine.length > 0) {\n          cursorElement = div;\n        }\n        currentLine = '';\n      }\n    }\n    return { bufferElements, cursorElement };\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.classList.toggle('xterm-decoration-top-layer', decoration?.options?.layer === 'top');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n        decoration.onDispose(() => {\n          this._decorationElements.delete(decoration);\n          element!.remove();\n        });\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowseService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(this._coreBrowseService.window, 'resize', () => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowseService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowseService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowseService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowseService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowseService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DomRendererRowFactory, RowCss } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _widthCache: WidthCache;\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(this._themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(this._themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      this._rowContainer.remove();\n      this._selectionContainer.remove();\n      this._widthCache.dispose();\n      this._themeStyleElement.remove();\n      this._dimensionsStyleElement.remove();\n    }));\n\n    this._widthCache = new WidthCache(document);\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +   // TODO: find workaround for inline-block (creates ~20% render penalty)\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      ` font-kerning: none;` +\n      ` white-space: pre` +\n      `}`;\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .xterm-dim {` +\n      ` color: ${color.multiplyOpacity(colors.foreground, 0.5).css};` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${RowCss.BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  border-bottom-style: hidden;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: inherit;` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}:not(.${RowCss.CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css};` +\n      ` color: ${colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_OUTLINE_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` border-bottom: 1px ${colors.cursor.css};` +\n      ` border-bottom-style: solid;` +\n      ` height: calc(100% - 1px);` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(c, 0.5).css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(color.opaque(colors.background), 0.5).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  /**\n   * default letter spacing\n   * Due to rounding issues in dimensions dpr calc glyph might render\n   * slightly too wide or too narrow. The method corrects the stacking offsets\n   * by applying a default letter-spacing for all chars.\n   * The value gets passed to the row factory to avoid setting this value again\n   * (render speedup is roughly 10%).\n   */\n  private _setDefaultSpacing(): void {\n    // measure same char as in CharSizeService to get the base deviation\n    const spacing = this.dimensions.css.cell.width - this._widthCache.get('W', false, false);\n    this._rowContainer.style.letterSpacing = `${spacing}px`;\n    this._rowFactory.defaultSpacing = spacing;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n    this.renderRows(this._bufferService.buffer.y, this._bufferService.buffer.y);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    this._selectionContainer.replaceChildren();\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${colStart * this.dimensions.css.cell.width}px`;\n    element.style.width = `${this.dimensions.css.cell.width * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    // Refresh CSS\n    this._injectCss(this._themeService.colors);\n    // update spacing cache\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and\n       * `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    for (let y = start; y <= end; y++) {\n      const row = y + buffer.ydisp;\n      const rowElement = this._rowElements[y];\n      const lineData = buffer.lines.get(row);\n      if (!rowElement || !lineData) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          lineData,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          -1,\n          -1\n        )\n      );\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    /**\n     * NOTE: The linkifier may send out of viewport y-values if:\n     * - negative y-value: the link started at a higher line\n     * - y-value >= maxY: the link ends at a line below viewport\n     *\n     * For negative y-values we can simply adjust x = 0,\n     * as higher up link start means, that everything from\n     * (0,0) is a link under top-down-left-right char progression\n     *\n     * Additionally there might be a small chance of out-of-sync x|y-values\n     * from a race condition of render updates vs. link event handler execution:\n     * - (sync) resize: chances terminal buffer in sync, schedules render update async\n     * - (async) link handler race condition: new buffer metrics, but still on old render state\n     * - (async) render update: brings term metrics and render state back in sync\n     */\n    // clip coords into viewport\n    if (y < 0) x = 0;\n    if (y2 < 0) x2 = 0;\n    const maxY = this._bufferService.rows - 1;\n    y = Math.max(Math.min(y, maxY), 0);\n    y2 = Math.max(Math.min(y2, maxY), 0);\n\n    cols = Math.min(cols, this._bufferService.cols);\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    // refresh rows within link range\n    for (let i = y; i <= y2; ++i) {\n      const row = i + buffer.ydisp;\n      const rowElement = this._rowElements[i];\n      const bufferline = buffer.lines.get(row);\n      if (!rowElement || !bufferline) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          bufferline,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          enabled ? (i === y ? x : 0) : -1,\n          enabled ? ((i === y2 ? x2 : cols) - 1) : -1\n        )\n      );\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018, 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { IColorContrastCache } from 'browser/Types';\n\n\nexport const enum RowCss {\n  BOLD_CLASS = 'xterm-bold',\n  DIM_CLASS = 'xterm-dim',\n  ITALIC_CLASS = 'xterm-italic',\n  UNDERLINE_CLASS = 'xterm-underline',\n  OVERLINE_CLASS = 'xterm-overline',\n  STRIKETHROUGH_CLASS = 'xterm-strikethrough',\n  CURSOR_CLASS = 'xterm-cursor',\n  CURSOR_BLINK_CLASS = 'xterm-cursor-blink',\n  CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block',\n  CURSOR_STYLE_OUTLINE_CLASS = 'xterm-cursor-outline',\n  CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar',\n  CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline'\n}\n\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  public defaultSpacing = 0;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(\n    lineData: IBufferLine,\n    row: number,\n    isCursorRow: boolean,\n    cursorStyle: string | undefined,\n    cursorInactiveStyle: string | undefined,\n    cursorX: number,\n    cursorBlink: boolean,\n    cellWidth: number,\n    widthCache: WidthCache,\n    linkStart: number,\n    linkEnd: number\n  ): HTMLSpanElement[] {\n\n    const elements: HTMLSpanElement[] = [];\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    const colors = this._themeService.colors;\n\n    let lineLength = lineData.getNoBgTrimmedLength();\n    if (isCursorRow && lineLength < cursorX + 1) {\n      lineLength = cursorX + 1;\n    }\n\n    let charElement: HTMLSpanElement | undefined;\n    let cellAmount = 0;\n    let text = '';\n    let oldBg = 0;\n    let oldFg = 0;\n    let oldExt = 0;\n    let oldLinkHover: number | boolean = false;\n    let oldSpacing = 0;\n    let oldIsInSelection: boolean = false;\n    let spacing = 0;\n    const classes: string[] = [];\n\n    const hasHover = linkStart !== -1 && linkEnd !== -1;\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const isInSelection = this._isCellInSelection(x, row);\n      const isCursorCell = isCursorRow && x === cursorX;\n      const isLinkHover = hasHover && x >= linkStart && x <= linkEnd;\n\n      let isDecorated = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        isDecorated = true;\n      });\n\n      // get chars to render for this cell\n      let chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n      if (chars === ' ' && (cell.isUnderline() || cell.isOverline())) {\n        chars = '\\xa0';\n      }\n\n      // lookup char render width and calc spacing\n      spacing = width * cellWidth - widthCache.get(chars, cell.isBold(), cell.isItalic());\n\n      if (!charElement) {\n        charElement = this._document.createElement('span');\n      } else {\n        /**\n         * chars can only be merged on existing span if:\n         * - existing span only contains mergeable chars (cellAmount != 0)\n         * - bg did not change (or both are in selection)\n         * - fg did not change (or both are in selection and selection fg is set)\n         * - ext did not change\n         * - underline from hover state did not change\n         * - cell content renders to same letter-spacing\n         * - cell is not cursor\n         */\n        if (\n          cellAmount\n          && (\n            (isInSelection && oldIsInSelection)\n            || (!isInSelection && !oldIsInSelection && cell.bg === oldBg)\n          )\n          && (\n            (isInSelection && oldIsInSelection && colors.selectionForeground)\n            || cell.fg === oldFg\n          )\n          && cell.extended.ext === oldExt\n          && isLinkHover === oldLinkHover\n          && spacing === oldSpacing\n          && !isCursorCell\n          && !isJoined\n          && !isDecorated\n        ) {\n          // no span alterations, thus only account chars skipping all code below\n          text += chars;\n          cellAmount++;\n          continue;\n        } else {\n          /**\n           * cannot merge:\n           * - apply left-over text to old span\n           * - create new span, reset state holders cellAmount & text\n           */\n          if (cellAmount) {\n            charElement.textContent = text;\n          }\n          charElement = this._document.createElement('span');\n          cellAmount = 0;\n          text = '';\n        }\n      }\n      // preserve conditions for next merger eval round\n      oldBg = cell.bg;\n      oldFg = cell.fg;\n      oldExt = cell.extended.ext;\n      oldLinkHover = isLinkHover;\n      oldSpacing = spacing;\n      oldIsInSelection = isInSelection;\n\n      if (isJoined) {\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorCell) {\n        classes.push(RowCss.CURSOR_CLASS);\n        if (this._coreBrowserService.isFocused) {\n          if (cursorBlink) {\n            classes.push(RowCss.CURSOR_BLINK_CLASS);\n          }\n          classes.push(\n            cursorStyle === 'bar'\n              ? RowCss.CURSOR_STYLE_BAR_CLASS\n              : cursorStyle === 'underline'\n                ? RowCss.CURSOR_STYLE_UNDERLINE_CLASS\n                : RowCss.CURSOR_STYLE_BLOCK_CLASS\n          );\n        } else {\n          if (cursorInactiveStyle) {\n            switch (cursorInactiveStyle) {\n              case 'outline':\n                classes.push(RowCss.CURSOR_STYLE_OUTLINE_CLASS);\n                break;\n              case 'block':\n                classes.push(RowCss.CURSOR_STYLE_BLOCK_CLASS);\n                break;\n              case 'bar':\n                classes.push(RowCss.CURSOR_STYLE_BAR_CLASS);\n                break;\n              case 'underline':\n                classes.push(RowCss.CURSOR_STYLE_UNDERLINE_CLASS);\n                break;\n              default:\n                break;\n            }\n          }\n        }\n      }\n\n      if (cell.isBold()) {\n        classes.push(RowCss.BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        classes.push(RowCss.ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        classes.push(RowCss.DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        text = WHITESPACE_CELL_CHAR;\n      } else {\n        text = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        classes.push(`${RowCss.UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isOverline()) {\n        classes.push(RowCss.OVERLINE_CLASS);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        classes.push(RowCss.STRIKETHROUGH_CLASS);\n      }\n\n      // apply link hover underline late, effectively overrides any previous text-decoration\n      // settings\n      if (isLinkHover) {\n        charElement.style.textDecoration = 'underline';\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection\n      if (!isTop && isInSelection) {\n        // If in the selection, force the element to be above the selection to improve contrast and\n        // support opaque selections. The applies background is not actually needed here as\n        // selection is drawn in a seperate container, the main purpose of this to ensuring minimum\n        // contrast ratio\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        bg = bgOverride.rgba >> 8 & 0xFFFFFF;\n        bgColorMode = Attributes.CM_RGB;\n        // Since an opaque selection is being rendered, the selection pretends to be a decoration to\n        // ensure text is drawn above the selection.\n        isTop = true;\n        // Apply selection foreground if applicable\n        if (colors.selectionForeground) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        classes.push('xterm-decoration-top');\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          classes.push(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            classes.push(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            classes.push(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              classes.push(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // apply CSS classes\n      // slightly faster than using classList by omitting\n      // checks for doubled entries (code above should not have doublets)\n      if (classes.length) {\n        charElement.className = classes.join(' ');\n        classes.length = 0;\n      }\n\n      // exclude conditions for cell merging - never merge these\n      if (!isCursorCell && !isJoined && !isDecorated) {\n        cellAmount++;\n      } else {\n        charElement.textContent = text;\n      }\n      // apply letter-spacing rule\n      if (spacing !== this.defaultSpacing) {\n        charElement.style.letterSpacing = `${spacing}px`;\n      }\n\n      elements.push(charElement);\n      x = lastCharX;\n    }\n\n    // postfix text of last merged span\n    if (charElement && cellAmount) {\n      charElement.textContent = text;\n    }\n\n    return elements;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    const cache = this._getContrastCache(cell);\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = cache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      // Dim cells only require half the contrast, otherwise they wouldn't be distinguishable from\n      // non-dim cells\n      const ratio = this._optionsService.rawOptions.minimumContrastRatio / (cell.isDim() ? 2 : 1);\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, ratio);\n      cache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _getContrastCache(cell: ICellData): IColorContrastCache {\n    if (cell.isDim()) {\n      return this._themeService.colors.halfContrastCache;\n    }\n    return this._themeService.colors.contrastCache;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n", "/**\n * Copyright (c) 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { FontWeight } from 'common/services/Services';\n\n\nexport const enum WidthCacheSettings {\n  /** sentinel for unset values in flat cache */\n  FLAT_UNSET = -9999,\n  /** size of flat cache, size-1 equals highest codepoint handled by flat */\n  FLAT_SIZE = 256,\n  /** char repeat for measuring */\n  REPEAT = 32\n}\n\n\nconst enum FontVariant {\n  REGULAR = 0,\n  BOLD = 1,\n  ITALIC = 2,\n  BOLD_ITALIC = 3\n}\n\n\nexport class WidthCache implements IDisposable {\n  // flat cache for regular variant up to CacheSettings.FLAT_SIZE\n  // NOTE: ~4x faster access than holey (serving >>80% of terminal content)\n  //       It has a small memory footprint (only 1MB for full BMP caching),\n  //       still the sweet spot is not reached before touching 32k different codepoints,\n  //       thus we store the remaining <<20% of terminal data in a holey structure.\n  protected _flat = new Float32Array(WidthCacheSettings.FLAT_SIZE);\n\n  // holey cache for bold, italic and bold&italic for any string\n  // FIXME: can grow really big over time (~8.5 MB for full BMP caching),\n  //        so a shared API across terminals is needed\n  protected _holey: Map<string, number> | undefined;\n\n  private _font = '';\n  private _fontSize = 0;\n  private _weight: FontWeight = 'normal';\n  private _weightBold: FontWeight = 'bold';\n  private _container: HTMLDivElement;\n  private _measureElements: HTMLSpanElement[] = [];\n\n  constructor(_document: Document) {\n    this._container = _document.createElement('div');\n    this._container.style.position = 'absolute';\n    this._container.style.top = '-50000px';\n    this._container.style.width = '50000px';\n    // SP should stack in spans\n    this._container.style.whiteSpace = 'pre';\n    // avoid undercuts in non-monospace fonts from kerning\n    this._container.style.fontKerning = 'none';\n\n    const regular = _document.createElement('span');\n\n    const bold = _document.createElement('span');\n    bold.style.fontWeight = 'bold';\n\n    const italic = _document.createElement('span');\n    italic.style.fontStyle = 'italic';\n\n    const boldItalic = _document.createElement('span');\n    boldItalic.style.fontWeight = 'bold';\n    boldItalic.style.fontStyle = 'italic';\n\n    // NOTE: must be in order of FontVariant\n    this._measureElements = [regular, bold, italic, boldItalic];\n    this._container.appendChild(regular);\n    this._container.appendChild(bold);\n    this._container.appendChild(italic);\n    this._container.appendChild(boldItalic);\n\n    _document.body.appendChild(this._container);\n\n    this.clear();\n  }\n\n  public dispose(): void {\n    this._container.remove();           // remove elements from DOM\n    this._measureElements.length = 0;   // release element refs\n    this._holey = undefined;            // free cache memory via GC\n  }\n\n  /**\n   * Clear the width cache.\n   */\n  public clear(): void {\n    this._flat.fill(WidthCacheSettings.FLAT_UNSET);\n    // .clear() has some overhead, re-assign instead (>3 times faster)\n    this._holey = new Map<string, number>();\n  }\n\n  /**\n   * Set the font for measuring.\n   * Must be called for any changes on font settings.\n   * Also clears the cache.\n   */\n  public setFont(font: string, fontSize: number, weight: FontWeight, weightBold: FontWeight): void {\n    // skip if nothing changed\n    if (font === this._font\n      && fontSize === this._fontSize\n      && weight === this._weight\n      && weightBold === this._weightBold\n    ) {\n      return;\n    }\n\n    this._font = font;\n    this._fontSize = fontSize;\n    this._weight = weight;\n    this._weightBold = weightBold;\n\n    this._container.style.fontFamily = this._font;\n    this._container.style.fontSize = `${this._fontSize}px`;\n    this._measureElements[FontVariant.REGULAR].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD].style.fontWeight = `${weightBold}`;\n    this._measureElements[FontVariant.ITALIC].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD_ITALIC].style.fontWeight = `${weightBold}`;\n\n    this.clear();\n  }\n\n  /**\n   * Get the render width for cell content `c` with current font settings.\n   * `variant` denotes the font variant to be used.\n   */\n  public get(c: string, bold: boolean | number, italic: boolean | number): number {\n    let cp = 0;\n    if (!bold && !italic && c.length === 1 && (cp = c.charCodeAt(0)) < WidthCacheSettings.FLAT_SIZE) {\n      return this._flat[cp] !== WidthCacheSettings.FLAT_UNSET\n        ? this._flat[cp]\n        : (this._flat[cp] = this._measure(c, 0));\n    }\n    let key = c;\n    if (bold) key += 'B';\n    if (italic) key += 'I';\n    let width = this._holey!.get(key);\n    if (width === undefined) {\n      let variant = 0;\n      if (bold) variant |= FontVariant.BOLD;\n      if (italic) variant |= FontVariant.ITALIC;\n      width = this._measure(c, variant);\n      this._holey!.set(key, width);\n    }\n    return width;\n  }\n\n  protected _measure(c: string, variant: FontVariant): number {\n    const el = this._measureElements[variant];\n    el.textContent = c.repeat(WidthCacheSettings.REPEAT);\n    return el.offsetWidth / WidthCacheSettings.REPEAT;\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge\n// would result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n\nconst enum MeasureSettings {\n  REPEAT = 32\n}\n\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses\n// ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W'.repeat(MeasureSettings.REPEAT);\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._measureElement.style.whiteSpace = 'pre';\n    this._measureElement.style.fontKerning = 'none';\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = {\n      height: Number(this._measureElement.offsetHeight),\n      width: Number(this._measureElement.offsetWidth)\n    };\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width / MeasureSettings.REPEAT;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    public readonly window: Window & typeof globalThis\n  ) {\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n    if (!this._charSizeService.hasValidSize) {\n      return undefined;\n    }\n    coords[0] = Math.min(Math.max(coords[0], 0), this._renderService.dimensions.css.canvas.width - 1);\n    coords[1] = Math.min(Math.max(coords[1], 0), this._renderService.dimensions.css.canvas.height - 1);\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, MutableDisposable } from 'common/Lifecycle';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: MutableDisposable<IRenderer> = this.register(new MutableDisposable());\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n  private _pausedResizeTask = new DebouncedIdleTask();\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange =  this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer.value!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this._renderDebouncer = new RenderDebouncer(coreBrowserService.window, (start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor(coreBrowserService.window);\n    this._screenDprMonitor.setListener(() => this.handleDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer.value?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(coreBrowserService.window, 'resize', () => this.handleDevicePixelRatioChange()));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in coreBrowserService.window) {\n      const observer = new coreBrowserService.window.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n\n    // Since this is debounced, a resize event could have happened between the time a refresh was\n    // requested and when this triggers. Clamp the values of start and end to ensure they're valid\n    // given the current viewport state.\n    start = Math.min(start, this._rowCount - 1);\n    end = Math.min(end, this._rowCount - 1);\n\n    // Render\n    this._renderer.value.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.value.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.value.dimensions.css.canvas.width === this._canvasWidth && this._renderer.value.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.value.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer.value;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    this._renderer.value = renderer;\n    this._renderer.value.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer.value!.handleResize(cols, rows));\n    } else {\n      this._renderer.value.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer.value?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer.value?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer.value?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.value?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer.value?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.value?.clear();\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { ICoreBrowserService, IMouseService, IRenderService, ISelectionService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport { getRangeLength } from 'common/buffer/BufferRange';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { AllColorIndex, IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n  /**\n   * Parent window that the terminal is rendered into. DOM and rendering APIs\n   * (e.g. requestAnimationFrame) should be invoked in the context of this\n   * window.\n   */\n  readonly window: Window & typeof globalThis;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: AllColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { AllColorIndex, IColor, SpecialColorIndex } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache = new ColorContrastCache();\n  private _halfContrastCache: IColorContrastCache = new ColorContrastCache();\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache,\n      halfContrastCache: this._halfContrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._halfContrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: AllColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: AllColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case SpecialColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case SpecialColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case SpecialColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb',\n * '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n", "/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsWrappingHeuristics = this.register(new MutableDisposable());\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onMultipleOptionChange(['windowsMode', 'windowsPty'], () => this._handleWindowsPtyOptionChange()));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used to avoid\n   * unwanted events being handled by the viewport when the event was triggered from the viewport\n   * originally.\n   * @param source Which component the event came from.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  public scrollToTop(): void {\n    this.scrollLines(-this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToBottom(): void {\n    this.scrollLines(this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this._bufferService.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    this._handleWindowsPtyOptionChange();\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n\n  private _handleWindowsPtyOptionChange(): void {\n    let value = false;\n    const windowsPty = this.optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber !== undefined && windowsPty.buildNumber !== undefined) {\n      value = !!(windowsPty.backend === 'conpty' && windowsPty.buildNumber < 21376);\n    } else if (this.optionsService.rawOptions.windowsMode) {\n      value = true;\n    }\n    if (value) {\n      this._enableWindowsWrappingHeuristics();\n    } else {\n      this._windowsWrappingHeuristics.clear();\n    }\n  }\n\n  protected _enableWindowsWrappingHeuristics(): void {\n    if (!this._windowsWrappingHeuristics.value) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsWrappingHeuristics.value = toDisposable(() => {\n        for (const d of disposables) {\n          d.dispose();\n        }\n      });\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    this.clearListeners();\n    this._disposed = true;\n  }\n\n  public clearListeners(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType, SpecialColorIndex } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via xterm-addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with same chunk and the promise\n   *   resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order\n   * and proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowTracker.start, this._dirtyRowTracker.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    } else {\n      // There was an explicit line feed (not just a carriage return), so clear the wrapped state of\n      // the line. This is particularly important on conpty/Windows where revisiting lines to\n      // reprint is common, especially on resize. Note that the windowsMode wrapped line heuristics\n      // can mess with this so windowsMode should be disabled, which is recommended on Windows build\n      // 21376 and above.\n      this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one\n        //   cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once\n          // before early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData(),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row. The cell gets replaced with the eraseChar of\n   * the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y);\n    if (line) {\n      line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n      this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the\n   * blank characters. Text between the cursor and right margin moves to the right. Characters moved\n   * past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to\n   * the left. Character attributes move with the characters. The terminal adds blank characters at\n   * the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll\n   * margins, moving content to the right. Content at the right margin is lost. DECIC has no effect\n   * outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty, the\n   * preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is\n   * set. REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_RESET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_SET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 67) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 53        | Overlined.                                               | #Y      |\n   * | 55        | Not Overlined.                                           | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58)\n   * as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 53) {\n        // overline\n        attr.bg |= BgFlags.OVERLINE;\n      } else if (p === 55) {\n        // not overline\n        attr.bg &= ~BgFlags.OVERLINE;\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full\n   * terminal bootstrap, DECSTR only resets certain attributes. For most needs DECSTR should be\n   * sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event\n   * `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from\n   * `XParseColor` (see OSC 10 for supported formats). There may be multipe `c ; spec` pairs present\n   * in the same instruction. If `spec` contains `?` the terminal returns a sequence with the\n   * currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (isValidColorIndex(index)) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character.\n   * Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover\n   * feedback. Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [SpecialColorIndex.FOREGROUND, SpecialColorIndex.BACKGROUND, SpecialColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (isValidColorIndex(index)) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the\n   * corresponding CSI string, `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n\nfunction isValidColorIndex(value: number): value is ColorIndex {\n  return 0 <= value && value < 256;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n  private _value?: T;\n  private _isDisposed = false;\n\n  /**\n   * Gets the value if it exists.\n   */\n  public get value(): T | undefined {\n    return this._isDisposed ? undefined : this._value;\n  }\n\n  /**\n   * Sets the value, disposing of the old value if it exists.\n   */\n  public set value(value: T | undefined) {\n    if (this._isDisposed || value === this._value) {\n      return;\n    }\n    this._value?.dispose();\n    this._value = value;\n  }\n\n  /**\n   * Resets the stored value and disposes of the previously stored value.\n   */\n  public clear(): void {\n    this.value = undefined;\n  }\n\n  public dispose(): void {\n    this._isDisposed = true;\n    this._value?.dispose();\n    this._value = undefined;\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value));\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    // Duplicate the array to avoid issues when _array changes while iterating\n    return [...this._array].values();\n  }\n\n  private _search(key: number): number {\n    let min = 0;\n    let max = this._array.length - 1;\n    while (max >= min) {\n      let mid = (min + max) >> 1;\n      const midKey = this._getKey(this._array[mid]);\n      if (midKey > key) {\n        max = mid - 1;\n      } else if (midKey < key) {\n        min = mid + 1;\n      } else {\n        // key in list, walk to lowest duplicate\n        while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n          mid--;\n        }\n        return mid;\n      }\n    }\n    // key not in list\n    // still return closest min (also used as insert position)\n    return min;\n  }\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n  public isOverline(): number      { return this.bg & BgFlags.OVERLINE; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IdleTaskQueue } from 'common/TaskQueue';\nimport { IAttributeData, IBufferLine, ICellData, ICharset } from 'common/Types';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { getWrappedLineTrimmedLength, reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths } from 'common/buffer/BufferReflow';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, WHITESPACE_CELL_WIDTH } from 'common/buffer/Constants';\nimport { Marker } from 'common/buffer/Marker';\nimport { IBuffer } from 'common/buffer/Types';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode || this._optionsService.rawOptions.windowsPty.backend !== undefined || this._optionsService.rawOptions.windowsPty.buildNumber !== undefined) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted\n      // lines, which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    const windowsPty = this._optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber) {\n      return this._hasScrollback && windowsPty.backend === 'conpty' && windowsPty.buildNumber >= 21376;\n    }\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IAttributeData, IBufferLine, ICellData, IExtendedAttrs } from 'common/Types';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { CellData } from 'common/buffer/CellData';\nimport { Attributes, BgFlags, CHAR_DATA_ATTR_INDEX, CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, Content, NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR } from 'common/buffer/Constants';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public getNoBgTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK) || (this._data[i * CELL_SIZE + Cell.BG] & Attributes.CM_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000,\n  OVERLINE = 0x40000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private readonly _disposables: IDisposable[] = [];\n\n  private readonly _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock,\n        // volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate\n      // pair conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n", "\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens\n         * took very long). This cannot be solved here for the handler itself (it is the handlers\n         * responsibility to slice hard work), but we can at least schedule a screen update as we\n         * gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing. This is a really bad\n           * condition with screwed up execution order and prolly messed up terminal state,\n           * therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that, as\n           * the pending async handler still might mess up the terminal later. Instead fix the\n           * faulty async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport class BufferNamespaceApi extends Disposable implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = this.register(new EventEmitter<IBufferApi>());\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    super();\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward\n    //       event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { clone } from 'common/Clone';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { IBufferService, ICoreService, ILogService, IOptionsService } from 'common/services/Services';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecoration, IDecorationOptions, IMarker } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => this.reset()));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public get isDisposed(): boolean { return this._isDisposed; }\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  trace: LogLevelEnum.TRACE,\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  private _logLevel: LogLevelEnum = LogLevelEnum.OFF;\n  public get logLevel(): LogLevelEnum { return this._logLevel; }\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n\n    // For trace logging, assume the latest created log service is valid\n    traceLogger = this;\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, (this._optionsService.options.logger ? '' : LOG_PREFIX) + message, ...optionalParams);\n  }\n\n  public trace(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.TRACE) {\n      this._log(this._optionsService.options.logger?.trace.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.DEBUG) {\n      this._log(this._optionsService.options.logger?.debug.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.INFO) {\n      this._log(this._optionsService.options.logger?.info.bind(this._optionsService.options.logger) ?? console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.WARN) {\n      this._log(this._optionsService.options.logger?.warn.bind(this._optionsService.options.logger) ?? console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.ERROR) {\n      this._log(this._optionsService.options.logger?.error.bind(this._optionsService.options.logger) ?? console.error, message, optionalParams);\n    }\n  }\n}\n\nlet traceLogger: ILogService;\nexport function setTraceLogger(logger: ILogService): void {\n  traceLogger = logger;\n}\n\n/**\n * A decorator that can be used to automatically log trace calls to the decorated function.\n */\nexport function traceCall(_target: any, key: string, descriptor: any): any {\n  if (typeof descriptor.value !== 'function') {\n    throw new Error('not supported');\n  }\n  const fnKey = 'value';\n  const fn = descriptor.value;\n  descriptor[fnKey] = function (...args: any[]) {\n    // Early exit\n    if (traceLogger.logLevel !== LogLevelEnum.TRACE) {\n      return fn.apply(this, args);\n    }\n\n    traceLogger.trace(`GlyphRenderer#${fn.name}(${args.map(e => JSON.stringify(e)).join(', ')})`);\n    const result = fn.apply(this, args);\n    traceLogger.trace(`GlyphRenderer#${fn.name} return`, result);\n    return result;\n  };\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { FontWeight, IOptionsService, ITerminalOptions } from 'common/services/Services';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  cursorInactiveStyle: 'outline',\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  ignoreBracketedPasteMode: false,\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  logger: null,\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  windowsPty: {},\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n      case 'windowsPty':\n        value = value ?? {};\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, CursorInactiveStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler, IWindowsPty, ILogger } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<TArgs extends any[]> = TArgs extends [] ? []\n  : TArgs extends [...infer TFirst, infer TLast] ? TLast extends IBrandedService ? GetLeadingNonServiceArgs<TFirst> : TArgs\n    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  TRACE = 0,\n  DEBUG = 1,\n  INFO = 2,\n  WARN = 3,\n  ERROR = 4,\n  OFF = 5\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  readonly logLevel: LogLevelEnum;\n\n  trace(message: any, ...optionalParams: any[]): void;\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  cursorInactiveStyle?: CursorInactiveStyle;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  ignoreBracketedPasteMode?: boolean;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  logger?: ILogger | null;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowsPty?: IWindowsPty;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { EventEmitter } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { IBufferNamespace as IBufferNamespaceApi, IDecoration, IDecorationOptions, IDisposable, ILinkProvider, ILocalizableStrings, IMarker, IModes, IParser, ITerminalAddon, Terminal as ITerminalApi, ITerminalInitOnlyOptions, IUnicodeHandling } from 'xterm';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal extends Disposable implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions & ITerminalInitOnlyOptions) {\n    super();\n\n    this._core = this.register(new TerminalCore(options));\n    this._addonManager = this.register(new AddonManager());\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = this.register(new BufferNamespaceApi(this._core));\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.registerMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    super.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n", "(function(global, factory) {\n  typeof exports === \"object\" && typeof module !== \"undefined\" ? factory(exports) : typeof define === \"function\" && define.amd ? define([ \"exports\" ], factory) : (global = typeof globalThis !== \"undefined\" ? globalThis : global || self, \n  factory(global.ActiveStorage = {}));\n})(this, (function(exports) {\n  \"use strict\";\n  var sparkMd5 = {\n    exports: {}\n  };\n  (function(module, exports) {\n    (function(factory) {\n      {\n        module.exports = factory();\n      }\n    })((function(undefined$1) {\n      var hex_chr = [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\" ];\n      function md5cycle(x, k) {\n        var a = x[0], b = x[1], c = x[2], d = x[3];\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b = (b << 22 | b >>> 10) + c | 0;\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b = (b << 20 | b >>> 12) + c | 0;\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b = (b << 23 | b >>> 9) + c | 0;\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b = (b << 21 | b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b = (b << 21 | b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b = (b << 21 | b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b = (b << 21 | b >>> 11) + c | 0;\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n      }\n      function md5blk(s) {\n        var md5blks = [], i;\n        for (i = 0; i < 64; i += 4) {\n          md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n      }\n      function md5blk_array(a) {\n        var md5blks = [], i;\n        for (i = 0; i < 64; i += 4) {\n          md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n      }\n      function md51(s) {\n        var n = s.length, state = [ 1732584193, -271733879, -1732584194, 271733878 ], i, length, tail, tmp, lo, hi;\n        for (i = 64; i <= n; i += 64) {\n          md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ];\n        for (i = 0; i < length; i += 1) {\n          tail[i >> 2] |= s.charCodeAt(i) << (i % 4 << 3);\n        }\n        tail[i >> 2] |= 128 << (i % 4 << 3);\n        if (i > 55) {\n          md5cycle(state, tail);\n          for (i = 0; i < 16; i += 1) {\n            tail[i] = 0;\n          }\n        }\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(state, tail);\n        return state;\n      }\n      function md51_array(a) {\n        var n = a.length, state = [ 1732584193, -271733879, -1732584194, 271733878 ], i, length, tail, tmp, lo, hi;\n        for (i = 64; i <= n; i += 64) {\n          md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n        a = i - 64 < n ? a.subarray(i - 64) : new Uint8Array(0);\n        length = a.length;\n        tail = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ];\n        for (i = 0; i < length; i += 1) {\n          tail[i >> 2] |= a[i] << (i % 4 << 3);\n        }\n        tail[i >> 2] |= 128 << (i % 4 << 3);\n        if (i > 55) {\n          md5cycle(state, tail);\n          for (i = 0; i < 16; i += 1) {\n            tail[i] = 0;\n          }\n        }\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(state, tail);\n        return state;\n      }\n      function rhex(n) {\n        var s = \"\", j;\n        for (j = 0; j < 4; j += 1) {\n          s += hex_chr[n >> j * 8 + 4 & 15] + hex_chr[n >> j * 8 & 15];\n        }\n        return s;\n      }\n      function hex(x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n          x[i] = rhex(x[i]);\n        }\n        return x.join(\"\");\n      }\n      if (hex(md51(\"hello\")) !== \"5d41402abc4b2a76b9719d911017c592\") ;\n      if (typeof ArrayBuffer !== \"undefined\" && !ArrayBuffer.prototype.slice) {\n        (function() {\n          function clamp(val, length) {\n            val = val | 0 || 0;\n            if (val < 0) {\n              return Math.max(val + length, 0);\n            }\n            return Math.min(val, length);\n          }\n          ArrayBuffer.prototype.slice = function(from, to) {\n            var length = this.byteLength, begin = clamp(from, length), end = length, num, target, targetArray, sourceArray;\n            if (to !== undefined$1) {\n              end = clamp(to, length);\n            }\n            if (begin > end) {\n              return new ArrayBuffer(0);\n            }\n            num = end - begin;\n            target = new ArrayBuffer(num);\n            targetArray = new Uint8Array(target);\n            sourceArray = new Uint8Array(this, begin, num);\n            targetArray.set(sourceArray);\n            return target;\n          };\n        })();\n      }\n      function toUtf8(str) {\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n          str = unescape(encodeURIComponent(str));\n        }\n        return str;\n      }\n      function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n        var length = str.length, buff = new ArrayBuffer(length), arr = new Uint8Array(buff), i;\n        for (i = 0; i < length; i += 1) {\n          arr[i] = str.charCodeAt(i);\n        }\n        return returnUInt8Array ? arr : buff;\n      }\n      function arrayBuffer2Utf8Str(buff) {\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\n      }\n      function concatenateArrayBuffers(first, second, returnUInt8Array) {\n        var result = new Uint8Array(first.byteLength + second.byteLength);\n        result.set(new Uint8Array(first));\n        result.set(new Uint8Array(second), first.byteLength);\n        return returnUInt8Array ? result : result.buffer;\n      }\n      function hexToBinaryString(hex) {\n        var bytes = [], length = hex.length, x;\n        for (x = 0; x < length - 1; x += 2) {\n          bytes.push(parseInt(hex.substr(x, 2), 16));\n        }\n        return String.fromCharCode.apply(String, bytes);\n      }\n      function SparkMD5() {\n        this.reset();\n      }\n      SparkMD5.prototype.append = function(str) {\n        this.appendBinary(toUtf8(str));\n        return this;\n      };\n      SparkMD5.prototype.appendBinary = function(contents) {\n        this._buff += contents;\n        this._length += contents.length;\n        var length = this._buff.length, i;\n        for (i = 64; i <= length; i += 64) {\n          md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n        }\n        this._buff = this._buff.substring(i - 64);\n        return this;\n      };\n      SparkMD5.prototype.end = function(raw) {\n        var buff = this._buff, length = buff.length, i, tail = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], ret;\n        for (i = 0; i < length; i += 1) {\n          tail[i >> 2] |= buff.charCodeAt(i) << (i % 4 << 3);\n        }\n        this._finish(tail, length);\n        ret = hex(this._hash);\n        if (raw) {\n          ret = hexToBinaryString(ret);\n        }\n        this.reset();\n        return ret;\n      };\n      SparkMD5.prototype.reset = function() {\n        this._buff = \"\";\n        this._length = 0;\n        this._hash = [ 1732584193, -271733879, -1732584194, 271733878 ];\n        return this;\n      };\n      SparkMD5.prototype.getState = function() {\n        return {\n          buff: this._buff,\n          length: this._length,\n          hash: this._hash.slice()\n        };\n      };\n      SparkMD5.prototype.setState = function(state) {\n        this._buff = state.buff;\n        this._length = state.length;\n        this._hash = state.hash;\n        return this;\n      };\n      SparkMD5.prototype.destroy = function() {\n        delete this._hash;\n        delete this._buff;\n        delete this._length;\n      };\n      SparkMD5.prototype._finish = function(tail, length) {\n        var i = length, tmp, lo, hi;\n        tail[i >> 2] |= 128 << (i % 4 << 3);\n        if (i > 55) {\n          md5cycle(this._hash, tail);\n          for (i = 0; i < 16; i += 1) {\n            tail[i] = 0;\n          }\n        }\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._hash, tail);\n      };\n      SparkMD5.hash = function(str, raw) {\n        return SparkMD5.hashBinary(toUtf8(str), raw);\n      };\n      SparkMD5.hashBinary = function(content, raw) {\n        var hash = md51(content), ret = hex(hash);\n        return raw ? hexToBinaryString(ret) : ret;\n      };\n      SparkMD5.ArrayBuffer = function() {\n        this.reset();\n      };\n      SparkMD5.ArrayBuffer.prototype.append = function(arr) {\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true), length = buff.length, i;\n        this._length += arr.byteLength;\n        for (i = 64; i <= length; i += 64) {\n          md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n        }\n        this._buff = i - 64 < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n        return this;\n      };\n      SparkMD5.ArrayBuffer.prototype.end = function(raw) {\n        var buff = this._buff, length = buff.length, tail = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], i, ret;\n        for (i = 0; i < length; i += 1) {\n          tail[i >> 2] |= buff[i] << (i % 4 << 3);\n        }\n        this._finish(tail, length);\n        ret = hex(this._hash);\n        if (raw) {\n          ret = hexToBinaryString(ret);\n        }\n        this.reset();\n        return ret;\n      };\n      SparkMD5.ArrayBuffer.prototype.reset = function() {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._hash = [ 1732584193, -271733879, -1732584194, 271733878 ];\n        return this;\n      };\n      SparkMD5.ArrayBuffer.prototype.getState = function() {\n        var state = SparkMD5.prototype.getState.call(this);\n        state.buff = arrayBuffer2Utf8Str(state.buff);\n        return state;\n      };\n      SparkMD5.ArrayBuffer.prototype.setState = function(state) {\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n        return SparkMD5.prototype.setState.call(this, state);\n      };\n      SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n      SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n      SparkMD5.ArrayBuffer.hash = function(arr, raw) {\n        var hash = md51_array(new Uint8Array(arr)), ret = hex(hash);\n        return raw ? hexToBinaryString(ret) : ret;\n      };\n      return SparkMD5;\n    }));\n  })(sparkMd5);\n  var SparkMD5 = sparkMd5.exports;\n  const fileSlice = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice;\n  class FileChecksum {\n    static create(file, callback) {\n      const instance = new FileChecksum(file);\n      instance.create(callback);\n    }\n    constructor(file) {\n      this.file = file;\n      this.chunkSize = 2097152;\n      this.chunkCount = Math.ceil(this.file.size / this.chunkSize);\n      this.chunkIndex = 0;\n    }\n    create(callback) {\n      this.callback = callback;\n      this.md5Buffer = new SparkMD5.ArrayBuffer;\n      this.fileReader = new FileReader;\n      this.fileReader.addEventListener(\"load\", (event => this.fileReaderDidLoad(event)));\n      this.fileReader.addEventListener(\"error\", (event => this.fileReaderDidError(event)));\n      this.readNextChunk();\n    }\n    fileReaderDidLoad(event) {\n      this.md5Buffer.append(event.target.result);\n      if (!this.readNextChunk()) {\n        const binaryDigest = this.md5Buffer.end(true);\n        const base64digest = btoa(binaryDigest);\n        this.callback(null, base64digest);\n      }\n    }\n    fileReaderDidError(event) {\n      this.callback(`Error reading ${this.file.name}`);\n    }\n    readNextChunk() {\n      if (this.chunkIndex < this.chunkCount || this.chunkIndex == 0 && this.chunkCount == 0) {\n        const start = this.chunkIndex * this.chunkSize;\n        const end = Math.min(start + this.chunkSize, this.file.size);\n        const bytes = fileSlice.call(this.file, start, end);\n        this.fileReader.readAsArrayBuffer(bytes);\n        this.chunkIndex++;\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n  function getMetaValue(name) {\n    const element = findElement(document.head, `meta[name=\"${name}\"]`);\n    if (element) {\n      return element.getAttribute(\"content\");\n    }\n  }\n  function findElements(root, selector) {\n    if (typeof root == \"string\") {\n      selector = root;\n      root = document;\n    }\n    const elements = root.querySelectorAll(selector);\n    return toArray(elements);\n  }\n  function findElement(root, selector) {\n    if (typeof root == \"string\") {\n      selector = root;\n      root = document;\n    }\n    return root.querySelector(selector);\n  }\n  function dispatchEvent(element, type, eventInit = {}) {\n    const {disabled: disabled} = element;\n    const {bubbles: bubbles, cancelable: cancelable, detail: detail} = eventInit;\n    const event = document.createEvent(\"Event\");\n    event.initEvent(type, bubbles || true, cancelable || true);\n    event.detail = detail || {};\n    try {\n      element.disabled = false;\n      element.dispatchEvent(event);\n    } finally {\n      element.disabled = disabled;\n    }\n    return event;\n  }\n  function toArray(value) {\n    if (Array.isArray(value)) {\n      return value;\n    } else if (Array.from) {\n      return Array.from(value);\n    } else {\n      return [].slice.call(value);\n    }\n  }\n  class BlobRecord {\n    constructor(file, checksum, url, customHeaders = {}) {\n      this.file = file;\n      this.attributes = {\n        filename: file.name,\n        content_type: file.type || \"application/octet-stream\",\n        byte_size: file.size,\n        checksum: checksum\n      };\n      this.xhr = new XMLHttpRequest;\n      this.xhr.open(\"POST\", url, true);\n      this.xhr.responseType = \"json\";\n      this.xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n      this.xhr.setRequestHeader(\"Accept\", \"application/json\");\n      this.xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n      Object.keys(customHeaders).forEach((headerKey => {\n        this.xhr.setRequestHeader(headerKey, customHeaders[headerKey]);\n      }));\n      const csrfToken = getMetaValue(\"csrf-token\");\n      if (csrfToken != undefined) {\n        this.xhr.setRequestHeader(\"X-CSRF-Token\", csrfToken);\n      }\n      this.xhr.addEventListener(\"load\", (event => this.requestDidLoad(event)));\n      this.xhr.addEventListener(\"error\", (event => this.requestDidError(event)));\n    }\n    get status() {\n      return this.xhr.status;\n    }\n    get response() {\n      const {responseType: responseType, response: response} = this.xhr;\n      if (responseType == \"json\") {\n        return response;\n      } else {\n        return JSON.parse(response);\n      }\n    }\n    create(callback) {\n      this.callback = callback;\n      this.xhr.send(JSON.stringify({\n        blob: this.attributes\n      }));\n    }\n    requestDidLoad(event) {\n      if (this.status >= 200 && this.status < 300) {\n        const {response: response} = this;\n        const {direct_upload: direct_upload} = response;\n        delete response.direct_upload;\n        this.attributes = response;\n        this.directUploadData = direct_upload;\n        this.callback(null, this.toJSON());\n      } else {\n        this.requestDidError(event);\n      }\n    }\n    requestDidError(event) {\n      this.callback(`Error creating Blob for \"${this.file.name}\". Status: ${this.status}`);\n    }\n    toJSON() {\n      const result = {};\n      for (const key in this.attributes) {\n        result[key] = this.attributes[key];\n      }\n      return result;\n    }\n  }\n  class BlobUpload {\n    constructor(blob) {\n      this.blob = blob;\n      this.file = blob.file;\n      const {url: url, headers: headers} = blob.directUploadData;\n      this.xhr = new XMLHttpRequest;\n      this.xhr.open(\"PUT\", url, true);\n      this.xhr.responseType = \"text\";\n      for (const key in headers) {\n        this.xhr.setRequestHeader(key, headers[key]);\n      }\n      this.xhr.addEventListener(\"load\", (event => this.requestDidLoad(event)));\n      this.xhr.addEventListener(\"error\", (event => this.requestDidError(event)));\n    }\n    create(callback) {\n      this.callback = callback;\n      this.xhr.send(this.file.slice());\n    }\n    requestDidLoad(event) {\n      const {status: status, response: response} = this.xhr;\n      if (status >= 200 && status < 300) {\n        this.callback(null, response);\n      } else {\n        this.requestDidError(event);\n      }\n    }\n    requestDidError(event) {\n      this.callback(`Error storing \"${this.file.name}\". Status: ${this.xhr.status}`);\n    }\n  }\n  let id = 0;\n  class DirectUpload {\n    constructor(file, url, delegate, customHeaders = {}) {\n      this.id = ++id;\n      this.file = file;\n      this.url = url;\n      this.delegate = delegate;\n      this.customHeaders = customHeaders;\n    }\n    create(callback) {\n      FileChecksum.create(this.file, ((error, checksum) => {\n        if (error) {\n          callback(error);\n          return;\n        }\n        const blob = new BlobRecord(this.file, checksum, this.url, this.customHeaders);\n        notify(this.delegate, \"directUploadWillCreateBlobWithXHR\", blob.xhr);\n        blob.create((error => {\n          if (error) {\n            callback(error);\n          } else {\n            const upload = new BlobUpload(blob);\n            notify(this.delegate, \"directUploadWillStoreFileWithXHR\", upload.xhr);\n            upload.create((error => {\n              if (error) {\n                callback(error);\n              } else {\n                callback(null, blob.toJSON());\n              }\n            }));\n          }\n        }));\n      }));\n    }\n  }\n  function notify(object, methodName, ...messages) {\n    if (object && typeof object[methodName] == \"function\") {\n      return object[methodName](...messages);\n    }\n  }\n  class DirectUploadController {\n    constructor(input, file) {\n      this.input = input;\n      this.file = file;\n      this.directUpload = new DirectUpload(this.file, this.url, this);\n      this.dispatch(\"initialize\");\n    }\n    start(callback) {\n      const hiddenInput = document.createElement(\"input\");\n      hiddenInput.type = \"hidden\";\n      hiddenInput.name = this.input.name;\n      this.input.insertAdjacentElement(\"beforebegin\", hiddenInput);\n      this.dispatch(\"start\");\n      this.directUpload.create(((error, attributes) => {\n        if (error) {\n          hiddenInput.parentNode.removeChild(hiddenInput);\n          this.dispatchError(error);\n        } else {\n          hiddenInput.value = attributes.signed_id;\n        }\n        this.dispatch(\"end\");\n        callback(error);\n      }));\n    }\n    uploadRequestDidProgress(event) {\n      const progress = event.loaded / event.total * 100;\n      if (progress) {\n        this.dispatch(\"progress\", {\n          progress: progress\n        });\n      }\n    }\n    get url() {\n      return this.input.getAttribute(\"data-direct-upload-url\");\n    }\n    dispatch(name, detail = {}) {\n      detail.file = this.file;\n      detail.id = this.directUpload.id;\n      return dispatchEvent(this.input, `direct-upload:${name}`, {\n        detail: detail\n      });\n    }\n    dispatchError(error) {\n      const event = this.dispatch(\"error\", {\n        error: error\n      });\n      if (!event.defaultPrevented) {\n        alert(error);\n      }\n    }\n    directUploadWillCreateBlobWithXHR(xhr) {\n      this.dispatch(\"before-blob-request\", {\n        xhr: xhr\n      });\n    }\n    directUploadWillStoreFileWithXHR(xhr) {\n      this.dispatch(\"before-storage-request\", {\n        xhr: xhr\n      });\n      xhr.upload.addEventListener(\"progress\", (event => this.uploadRequestDidProgress(event)));\n    }\n  }\n  const inputSelector = \"input[type=file][data-direct-upload-url]:not([disabled])\";\n  class DirectUploadsController {\n    constructor(form) {\n      this.form = form;\n      this.inputs = findElements(form, inputSelector).filter((input => input.files.length));\n    }\n    start(callback) {\n      const controllers = this.createDirectUploadControllers();\n      const startNextController = () => {\n        const controller = controllers.shift();\n        if (controller) {\n          controller.start((error => {\n            if (error) {\n              callback(error);\n              this.dispatch(\"end\");\n            } else {\n              startNextController();\n            }\n          }));\n        } else {\n          callback();\n          this.dispatch(\"end\");\n        }\n      };\n      this.dispatch(\"start\");\n      startNextController();\n    }\n    createDirectUploadControllers() {\n      const controllers = [];\n      this.inputs.forEach((input => {\n        toArray(input.files).forEach((file => {\n          const controller = new DirectUploadController(input, file);\n          controllers.push(controller);\n        }));\n      }));\n      return controllers;\n    }\n    dispatch(name, detail = {}) {\n      return dispatchEvent(this.form, `direct-uploads:${name}`, {\n        detail: detail\n      });\n    }\n  }\n  const processingAttribute = \"data-direct-uploads-processing\";\n  const submitButtonsByForm = new WeakMap;\n  let started = false;\n  function start() {\n    if (!started) {\n      started = true;\n      document.addEventListener(\"click\", didClick, true);\n      document.addEventListener(\"submit\", didSubmitForm, true);\n      document.addEventListener(\"ajax:before\", didSubmitRemoteElement);\n    }\n  }\n  function didClick(event) {\n    const button = event.target.closest(\"button, input\");\n    if (button && button.type === \"submit\" && button.form) {\n      submitButtonsByForm.set(button.form, button);\n    }\n  }\n  function didSubmitForm(event) {\n    handleFormSubmissionEvent(event);\n  }\n  function didSubmitRemoteElement(event) {\n    if (event.target.tagName == \"FORM\") {\n      handleFormSubmissionEvent(event);\n    }\n  }\n  function handleFormSubmissionEvent(event) {\n    const form = event.target;\n    if (form.hasAttribute(processingAttribute)) {\n      event.preventDefault();\n      return;\n    }\n    const controller = new DirectUploadsController(form);\n    const {inputs: inputs} = controller;\n    if (inputs.length) {\n      event.preventDefault();\n      form.setAttribute(processingAttribute, \"\");\n      inputs.forEach(disable);\n      controller.start((error => {\n        form.removeAttribute(processingAttribute);\n        if (error) {\n          inputs.forEach(enable);\n        } else {\n          submitForm(form);\n        }\n      }));\n    }\n  }\n  function submitForm(form) {\n    let button = submitButtonsByForm.get(form) || findElement(form, \"input[type=submit], button[type=submit]\");\n    if (button) {\n      const {disabled: disabled} = button;\n      button.disabled = false;\n      button.focus();\n      button.click();\n      button.disabled = disabled;\n    } else {\n      button = document.createElement(\"input\");\n      button.type = \"submit\";\n      button.style.display = \"none\";\n      form.appendChild(button);\n      button.click();\n      form.removeChild(button);\n    }\n    submitButtonsByForm.delete(form);\n  }\n  function disable(input) {\n    input.disabled = true;\n  }\n  function enable(input) {\n    input.disabled = false;\n  }\n  function autostart() {\n    if (window.ActiveStorage) {\n      start();\n    }\n  }\n  setTimeout(autostart, 1);\n  exports.DirectUpload = DirectUpload;\n  exports.DirectUploadController = DirectUploadController;\n  exports.DirectUploadsController = DirectUploadsController;\n  exports.start = start;\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n}));\n", "/*\nTurbo 7.3.0\nCopyright \u00A9 2023 37signals LLC\n */\n(function () {\n    if (window.Reflect === undefined ||\n        window.customElements === undefined ||\n        window.customElements.polyfillWrapFlushCallback) {\n        return;\n    }\n    const BuiltInHTMLElement = HTMLElement;\n    const wrapperForTheName = {\n        HTMLElement: function HTMLElement() {\n            return Reflect.construct(BuiltInHTMLElement, [], this.constructor);\n        },\n    };\n    window.HTMLElement = wrapperForTheName[\"HTMLElement\"];\n    HTMLElement.prototype = BuiltInHTMLElement.prototype;\n    HTMLElement.prototype.constructor = HTMLElement;\n    Object.setPrototypeOf(HTMLElement, BuiltInHTMLElement);\n})();\n\n/**\n * The MIT License (MIT)\n * \n * Copyright (c) 2019 Javan Makhmali\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n(function(prototype) {\n  if (typeof prototype.requestSubmit == \"function\") return\n\n  prototype.requestSubmit = function(submitter) {\n    if (submitter) {\n      validateSubmitter(submitter, this);\n      submitter.click();\n    } else {\n      submitter = document.createElement(\"input\");\n      submitter.type = \"submit\";\n      submitter.hidden = true;\n      this.appendChild(submitter);\n      submitter.click();\n      this.removeChild(submitter);\n    }\n  };\n\n  function validateSubmitter(submitter, form) {\n    submitter instanceof HTMLElement || raise(TypeError, \"parameter 1 is not of type 'HTMLElement'\");\n    submitter.type == \"submit\" || raise(TypeError, \"The specified element is not a submit button\");\n    submitter.form == form || raise(DOMException, \"The specified element is not owned by this form element\", \"NotFoundError\");\n  }\n\n  function raise(errorConstructor, message, name) {\n    throw new errorConstructor(\"Failed to execute 'requestSubmit' on 'HTMLFormElement': \" + message + \".\", name)\n  }\n})(HTMLFormElement.prototype);\n\nconst submittersByForm = new WeakMap();\nfunction findSubmitterFromClickTarget(target) {\n    const element = target instanceof Element ? target : target instanceof Node ? target.parentElement : null;\n    const candidate = element ? element.closest(\"input, button\") : null;\n    return (candidate === null || candidate === void 0 ? void 0 : candidate.type) == \"submit\" ? candidate : null;\n}\nfunction clickCaptured(event) {\n    const submitter = findSubmitterFromClickTarget(event.target);\n    if (submitter && submitter.form) {\n        submittersByForm.set(submitter.form, submitter);\n    }\n}\n(function () {\n    if (\"submitter\" in Event.prototype)\n        return;\n    let prototype = window.Event.prototype;\n    if (\"SubmitEvent\" in window && /Apple Computer/.test(navigator.vendor)) {\n        prototype = window.SubmitEvent.prototype;\n    }\n    else if (\"SubmitEvent\" in window) {\n        return;\n    }\n    addEventListener(\"click\", clickCaptured, true);\n    Object.defineProperty(prototype, \"submitter\", {\n        get() {\n            if (this.type == \"submit\" && this.target instanceof HTMLFormElement) {\n                return submittersByForm.get(this.target);\n            }\n        },\n    });\n})();\n\nvar FrameLoadingStyle;\n(function (FrameLoadingStyle) {\n    FrameLoadingStyle[\"eager\"] = \"eager\";\n    FrameLoadingStyle[\"lazy\"] = \"lazy\";\n})(FrameLoadingStyle || (FrameLoadingStyle = {}));\nclass FrameElement extends HTMLElement {\n    static get observedAttributes() {\n        return [\"disabled\", \"complete\", \"loading\", \"src\"];\n    }\n    constructor() {\n        super();\n        this.loaded = Promise.resolve();\n        this.delegate = new FrameElement.delegateConstructor(this);\n    }\n    connectedCallback() {\n        this.delegate.connect();\n    }\n    disconnectedCallback() {\n        this.delegate.disconnect();\n    }\n    reload() {\n        return this.delegate.sourceURLReloaded();\n    }\n    attributeChangedCallback(name) {\n        if (name == \"loading\") {\n            this.delegate.loadingStyleChanged();\n        }\n        else if (name == \"complete\") {\n            this.delegate.completeChanged();\n        }\n        else if (name == \"src\") {\n            this.delegate.sourceURLChanged();\n        }\n        else {\n            this.delegate.disabledChanged();\n        }\n    }\n    get src() {\n        return this.getAttribute(\"src\");\n    }\n    set src(value) {\n        if (value) {\n            this.setAttribute(\"src\", value);\n        }\n        else {\n            this.removeAttribute(\"src\");\n        }\n    }\n    get loading() {\n        return frameLoadingStyleFromString(this.getAttribute(\"loading\") || \"\");\n    }\n    set loading(value) {\n        if (value) {\n            this.setAttribute(\"loading\", value);\n        }\n        else {\n            this.removeAttribute(\"loading\");\n        }\n    }\n    get disabled() {\n        return this.hasAttribute(\"disabled\");\n    }\n    set disabled(value) {\n        if (value) {\n            this.setAttribute(\"disabled\", \"\");\n        }\n        else {\n            this.removeAttribute(\"disabled\");\n        }\n    }\n    get autoscroll() {\n        return this.hasAttribute(\"autoscroll\");\n    }\n    set autoscroll(value) {\n        if (value) {\n            this.setAttribute(\"autoscroll\", \"\");\n        }\n        else {\n            this.removeAttribute(\"autoscroll\");\n        }\n    }\n    get complete() {\n        return !this.delegate.isLoading;\n    }\n    get isActive() {\n        return this.ownerDocument === document && !this.isPreview;\n    }\n    get isPreview() {\n        var _a, _b;\n        return (_b = (_a = this.ownerDocument) === null || _a === void 0 ? void 0 : _a.documentElement) === null || _b === void 0 ? void 0 : _b.hasAttribute(\"data-turbo-preview\");\n    }\n}\nfunction frameLoadingStyleFromString(style) {\n    switch (style.toLowerCase()) {\n        case \"lazy\":\n            return FrameLoadingStyle.lazy;\n        default:\n            return FrameLoadingStyle.eager;\n    }\n}\n\nfunction expandURL(locatable) {\n    return new URL(locatable.toString(), document.baseURI);\n}\nfunction getAnchor(url) {\n    let anchorMatch;\n    if (url.hash) {\n        return url.hash.slice(1);\n    }\n    else if ((anchorMatch = url.href.match(/#(.*)$/))) {\n        return anchorMatch[1];\n    }\n}\nfunction getAction(form, submitter) {\n    const action = (submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute(\"formaction\")) || form.getAttribute(\"action\") || form.action;\n    return expandURL(action);\n}\nfunction getExtension(url) {\n    return (getLastPathComponent(url).match(/\\.[^.]*$/) || [])[0] || \"\";\n}\nfunction isHTML(url) {\n    return !!getExtension(url).match(/^(?:|\\.(?:htm|html|xhtml|php))$/);\n}\nfunction isPrefixedBy(baseURL, url) {\n    const prefix = getPrefix(url);\n    return baseURL.href === expandURL(prefix).href || baseURL.href.startsWith(prefix);\n}\nfunction locationIsVisitable(location, rootLocation) {\n    return isPrefixedBy(location, rootLocation) && isHTML(location);\n}\nfunction getRequestURL(url) {\n    const anchor = getAnchor(url);\n    return anchor != null ? url.href.slice(0, -(anchor.length + 1)) : url.href;\n}\nfunction toCacheKey(url) {\n    return getRequestURL(url);\n}\nfunction urlsAreEqual(left, right) {\n    return expandURL(left).href == expandURL(right).href;\n}\nfunction getPathComponents(url) {\n    return url.pathname.split(\"/\").slice(1);\n}\nfunction getLastPathComponent(url) {\n    return getPathComponents(url).slice(-1)[0];\n}\nfunction getPrefix(url) {\n    return addTrailingSlash(url.origin + url.pathname);\n}\nfunction addTrailingSlash(value) {\n    return value.endsWith(\"/\") ? value : value + \"/\";\n}\n\nclass FetchResponse {\n    constructor(response) {\n        this.response = response;\n    }\n    get succeeded() {\n        return this.response.ok;\n    }\n    get failed() {\n        return !this.succeeded;\n    }\n    get clientError() {\n        return this.statusCode >= 400 && this.statusCode <= 499;\n    }\n    get serverError() {\n        return this.statusCode >= 500 && this.statusCode <= 599;\n    }\n    get redirected() {\n        return this.response.redirected;\n    }\n    get location() {\n        return expandURL(this.response.url);\n    }\n    get isHTML() {\n        return this.contentType && this.contentType.match(/^(?:text\\/([^\\s;,]+\\b)?html|application\\/xhtml\\+xml)\\b/);\n    }\n    get statusCode() {\n        return this.response.status;\n    }\n    get contentType() {\n        return this.header(\"Content-Type\");\n    }\n    get responseText() {\n        return this.response.clone().text();\n    }\n    get responseHTML() {\n        if (this.isHTML) {\n            return this.response.clone().text();\n        }\n        else {\n            return Promise.resolve(undefined);\n        }\n    }\n    header(name) {\n        return this.response.headers.get(name);\n    }\n}\n\nfunction activateScriptElement(element) {\n    if (element.getAttribute(\"data-turbo-eval\") == \"false\") {\n        return element;\n    }\n    else {\n        const createdScriptElement = document.createElement(\"script\");\n        const cspNonce = getMetaContent(\"csp-nonce\");\n        if (cspNonce) {\n            createdScriptElement.nonce = cspNonce;\n        }\n        createdScriptElement.textContent = element.textContent;\n        createdScriptElement.async = false;\n        copyElementAttributes(createdScriptElement, element);\n        return createdScriptElement;\n    }\n}\nfunction copyElementAttributes(destinationElement, sourceElement) {\n    for (const { name, value } of sourceElement.attributes) {\n        destinationElement.setAttribute(name, value);\n    }\n}\nfunction createDocumentFragment(html) {\n    const template = document.createElement(\"template\");\n    template.innerHTML = html;\n    return template.content;\n}\nfunction dispatch(eventName, { target, cancelable, detail } = {}) {\n    const event = new CustomEvent(eventName, {\n        cancelable,\n        bubbles: true,\n        composed: true,\n        detail,\n    });\n    if (target && target.isConnected) {\n        target.dispatchEvent(event);\n    }\n    else {\n        document.documentElement.dispatchEvent(event);\n    }\n    return event;\n}\nfunction nextAnimationFrame() {\n    return new Promise((resolve) => requestAnimationFrame(() => resolve()));\n}\nfunction nextEventLoopTick() {\n    return new Promise((resolve) => setTimeout(() => resolve(), 0));\n}\nfunction nextMicrotask() {\n    return Promise.resolve();\n}\nfunction parseHTMLDocument(html = \"\") {\n    return new DOMParser().parseFromString(html, \"text/html\");\n}\nfunction unindent(strings, ...values) {\n    const lines = interpolate(strings, values).replace(/^\\n/, \"\").split(\"\\n\");\n    const match = lines[0].match(/^\\s+/);\n    const indent = match ? match[0].length : 0;\n    return lines.map((line) => line.slice(indent)).join(\"\\n\");\n}\nfunction interpolate(strings, values) {\n    return strings.reduce((result, string, i) => {\n        const value = values[i] == undefined ? \"\" : values[i];\n        return result + string + value;\n    }, \"\");\n}\nfunction uuid() {\n    return Array.from({ length: 36 })\n        .map((_, i) => {\n        if (i == 8 || i == 13 || i == 18 || i == 23) {\n            return \"-\";\n        }\n        else if (i == 14) {\n            return \"4\";\n        }\n        else if (i == 19) {\n            return (Math.floor(Math.random() * 4) + 8).toString(16);\n        }\n        else {\n            return Math.floor(Math.random() * 15).toString(16);\n        }\n    })\n        .join(\"\");\n}\nfunction getAttribute(attributeName, ...elements) {\n    for (const value of elements.map((element) => element === null || element === void 0 ? void 0 : element.getAttribute(attributeName))) {\n        if (typeof value == \"string\")\n            return value;\n    }\n    return null;\n}\nfunction hasAttribute(attributeName, ...elements) {\n    return elements.some((element) => element && element.hasAttribute(attributeName));\n}\nfunction markAsBusy(...elements) {\n    for (const element of elements) {\n        if (element.localName == \"turbo-frame\") {\n            element.setAttribute(\"busy\", \"\");\n        }\n        element.setAttribute(\"aria-busy\", \"true\");\n    }\n}\nfunction clearBusyState(...elements) {\n    for (const element of elements) {\n        if (element.localName == \"turbo-frame\") {\n            element.removeAttribute(\"busy\");\n        }\n        element.removeAttribute(\"aria-busy\");\n    }\n}\nfunction waitForLoad(element, timeoutInMilliseconds = 2000) {\n    return new Promise((resolve) => {\n        const onComplete = () => {\n            element.removeEventListener(\"error\", onComplete);\n            element.removeEventListener(\"load\", onComplete);\n            resolve();\n        };\n        element.addEventListener(\"load\", onComplete, { once: true });\n        element.addEventListener(\"error\", onComplete, { once: true });\n        setTimeout(resolve, timeoutInMilliseconds);\n    });\n}\nfunction getHistoryMethodForAction(action) {\n    switch (action) {\n        case \"replace\":\n            return history.replaceState;\n        case \"advance\":\n        case \"restore\":\n            return history.pushState;\n    }\n}\nfunction isAction(action) {\n    return action == \"advance\" || action == \"replace\" || action == \"restore\";\n}\nfunction getVisitAction(...elements) {\n    const action = getAttribute(\"data-turbo-action\", ...elements);\n    return isAction(action) ? action : null;\n}\nfunction getMetaElement(name) {\n    return document.querySelector(`meta[name=\"${name}\"]`);\n}\nfunction getMetaContent(name) {\n    const element = getMetaElement(name);\n    return element && element.content;\n}\nfunction setMetaContent(name, content) {\n    let element = getMetaElement(name);\n    if (!element) {\n        element = document.createElement(\"meta\");\n        element.setAttribute(\"name\", name);\n        document.head.appendChild(element);\n    }\n    element.setAttribute(\"content\", content);\n    return element;\n}\nfunction findClosestRecursively(element, selector) {\n    var _a;\n    if (element instanceof Element) {\n        return (element.closest(selector) ||\n            findClosestRecursively(element.assignedSlot || ((_a = element.getRootNode()) === null || _a === void 0 ? void 0 : _a.host), selector));\n    }\n}\n\nvar FetchMethod;\n(function (FetchMethod) {\n    FetchMethod[FetchMethod[\"get\"] = 0] = \"get\";\n    FetchMethod[FetchMethod[\"post\"] = 1] = \"post\";\n    FetchMethod[FetchMethod[\"put\"] = 2] = \"put\";\n    FetchMethod[FetchMethod[\"patch\"] = 3] = \"patch\";\n    FetchMethod[FetchMethod[\"delete\"] = 4] = \"delete\";\n})(FetchMethod || (FetchMethod = {}));\nfunction fetchMethodFromString(method) {\n    switch (method.toLowerCase()) {\n        case \"get\":\n            return FetchMethod.get;\n        case \"post\":\n            return FetchMethod.post;\n        case \"put\":\n            return FetchMethod.put;\n        case \"patch\":\n            return FetchMethod.patch;\n        case \"delete\":\n            return FetchMethod.delete;\n    }\n}\nclass FetchRequest {\n    constructor(delegate, method, location, body = new URLSearchParams(), target = null) {\n        this.abortController = new AbortController();\n        this.resolveRequestPromise = (_value) => { };\n        this.delegate = delegate;\n        this.method = method;\n        this.headers = this.defaultHeaders;\n        this.body = body;\n        this.url = location;\n        this.target = target;\n    }\n    get location() {\n        return this.url;\n    }\n    get params() {\n        return this.url.searchParams;\n    }\n    get entries() {\n        return this.body ? Array.from(this.body.entries()) : [];\n    }\n    cancel() {\n        this.abortController.abort();\n    }\n    async perform() {\n        const { fetchOptions } = this;\n        this.delegate.prepareRequest(this);\n        await this.allowRequestToBeIntercepted(fetchOptions);\n        try {\n            this.delegate.requestStarted(this);\n            const response = await fetch(this.url.href, fetchOptions);\n            return await this.receive(response);\n        }\n        catch (error) {\n            if (error.name !== \"AbortError\") {\n                if (this.willDelegateErrorHandling(error)) {\n                    this.delegate.requestErrored(this, error);\n                }\n                throw error;\n            }\n        }\n        finally {\n            this.delegate.requestFinished(this);\n        }\n    }\n    async receive(response) {\n        const fetchResponse = new FetchResponse(response);\n        const event = dispatch(\"turbo:before-fetch-response\", {\n            cancelable: true,\n            detail: { fetchResponse },\n            target: this.target,\n        });\n        if (event.defaultPrevented) {\n            this.delegate.requestPreventedHandlingResponse(this, fetchResponse);\n        }\n        else if (fetchResponse.succeeded) {\n            this.delegate.requestSucceededWithResponse(this, fetchResponse);\n        }\n        else {\n            this.delegate.requestFailedWithResponse(this, fetchResponse);\n        }\n        return fetchResponse;\n    }\n    get fetchOptions() {\n        var _a;\n        return {\n            method: FetchMethod[this.method].toUpperCase(),\n            credentials: \"same-origin\",\n            headers: this.headers,\n            redirect: \"follow\",\n            body: this.isSafe ? null : this.body,\n            signal: this.abortSignal,\n            referrer: (_a = this.delegate.referrer) === null || _a === void 0 ? void 0 : _a.href,\n        };\n    }\n    get defaultHeaders() {\n        return {\n            Accept: \"text/html, application/xhtml+xml\",\n        };\n    }\n    get isSafe() {\n        return this.method === FetchMethod.get;\n    }\n    get abortSignal() {\n        return this.abortController.signal;\n    }\n    acceptResponseType(mimeType) {\n        this.headers[\"Accept\"] = [mimeType, this.headers[\"Accept\"]].join(\", \");\n    }\n    async allowRequestToBeIntercepted(fetchOptions) {\n        const requestInterception = new Promise((resolve) => (this.resolveRequestPromise = resolve));\n        const event = dispatch(\"turbo:before-fetch-request\", {\n            cancelable: true,\n            detail: {\n                fetchOptions,\n                url: this.url,\n                resume: this.resolveRequestPromise,\n            },\n            target: this.target,\n        });\n        if (event.defaultPrevented)\n            await requestInterception;\n    }\n    willDelegateErrorHandling(error) {\n        const event = dispatch(\"turbo:fetch-request-error\", {\n            target: this.target,\n            cancelable: true,\n            detail: { request: this, error: error },\n        });\n        return !event.defaultPrevented;\n    }\n}\n\nclass AppearanceObserver {\n    constructor(delegate, element) {\n        this.started = false;\n        this.intersect = (entries) => {\n            const lastEntry = entries.slice(-1)[0];\n            if (lastEntry === null || lastEntry === void 0 ? void 0 : lastEntry.isIntersecting) {\n                this.delegate.elementAppearedInViewport(this.element);\n            }\n        };\n        this.delegate = delegate;\n        this.element = element;\n        this.intersectionObserver = new IntersectionObserver(this.intersect);\n    }\n    start() {\n        if (!this.started) {\n            this.started = true;\n            this.intersectionObserver.observe(this.element);\n        }\n    }\n    stop() {\n        if (this.started) {\n            this.started = false;\n            this.intersectionObserver.unobserve(this.element);\n        }\n    }\n}\n\nclass StreamMessage {\n    static wrap(message) {\n        if (typeof message == \"string\") {\n            return new this(createDocumentFragment(message));\n        }\n        else {\n            return message;\n        }\n    }\n    constructor(fragment) {\n        this.fragment = importStreamElements(fragment);\n    }\n}\nStreamMessage.contentType = \"text/vnd.turbo-stream.html\";\nfunction importStreamElements(fragment) {\n    for (const element of fragment.querySelectorAll(\"turbo-stream\")) {\n        const streamElement = document.importNode(element, true);\n        for (const inertScriptElement of streamElement.templateElement.content.querySelectorAll(\"script\")) {\n            inertScriptElement.replaceWith(activateScriptElement(inertScriptElement));\n        }\n        element.replaceWith(streamElement);\n    }\n    return fragment;\n}\n\nvar FormSubmissionState;\n(function (FormSubmissionState) {\n    FormSubmissionState[FormSubmissionState[\"initialized\"] = 0] = \"initialized\";\n    FormSubmissionState[FormSubmissionState[\"requesting\"] = 1] = \"requesting\";\n    FormSubmissionState[FormSubmissionState[\"waiting\"] = 2] = \"waiting\";\n    FormSubmissionState[FormSubmissionState[\"receiving\"] = 3] = \"receiving\";\n    FormSubmissionState[FormSubmissionState[\"stopping\"] = 4] = \"stopping\";\n    FormSubmissionState[FormSubmissionState[\"stopped\"] = 5] = \"stopped\";\n})(FormSubmissionState || (FormSubmissionState = {}));\nvar FormEnctype;\n(function (FormEnctype) {\n    FormEnctype[\"urlEncoded\"] = \"application/x-www-form-urlencoded\";\n    FormEnctype[\"multipart\"] = \"multipart/form-data\";\n    FormEnctype[\"plain\"] = \"text/plain\";\n})(FormEnctype || (FormEnctype = {}));\nfunction formEnctypeFromString(encoding) {\n    switch (encoding.toLowerCase()) {\n        case FormEnctype.multipart:\n            return FormEnctype.multipart;\n        case FormEnctype.plain:\n            return FormEnctype.plain;\n        default:\n            return FormEnctype.urlEncoded;\n    }\n}\nclass FormSubmission {\n    static confirmMethod(message, _element, _submitter) {\n        return Promise.resolve(confirm(message));\n    }\n    constructor(delegate, formElement, submitter, mustRedirect = false) {\n        this.state = FormSubmissionState.initialized;\n        this.delegate = delegate;\n        this.formElement = formElement;\n        this.submitter = submitter;\n        this.formData = buildFormData(formElement, submitter);\n        this.location = expandURL(this.action);\n        if (this.method == FetchMethod.get) {\n            mergeFormDataEntries(this.location, [...this.body.entries()]);\n        }\n        this.fetchRequest = new FetchRequest(this, this.method, this.location, this.body, this.formElement);\n        this.mustRedirect = mustRedirect;\n    }\n    get method() {\n        var _a;\n        const method = ((_a = this.submitter) === null || _a === void 0 ? void 0 : _a.getAttribute(\"formmethod\")) || this.formElement.getAttribute(\"method\") || \"\";\n        return fetchMethodFromString(method.toLowerCase()) || FetchMethod.get;\n    }\n    get action() {\n        var _a;\n        const formElementAction = typeof this.formElement.action === \"string\" ? this.formElement.action : null;\n        if ((_a = this.submitter) === null || _a === void 0 ? void 0 : _a.hasAttribute(\"formaction\")) {\n            return this.submitter.getAttribute(\"formaction\") || \"\";\n        }\n        else {\n            return this.formElement.getAttribute(\"action\") || formElementAction || \"\";\n        }\n    }\n    get body() {\n        if (this.enctype == FormEnctype.urlEncoded || this.method == FetchMethod.get) {\n            return new URLSearchParams(this.stringFormData);\n        }\n        else {\n            return this.formData;\n        }\n    }\n    get enctype() {\n        var _a;\n        return formEnctypeFromString(((_a = this.submitter) === null || _a === void 0 ? void 0 : _a.getAttribute(\"formenctype\")) || this.formElement.enctype);\n    }\n    get isSafe() {\n        return this.fetchRequest.isSafe;\n    }\n    get stringFormData() {\n        return [...this.formData].reduce((entries, [name, value]) => {\n            return entries.concat(typeof value == \"string\" ? [[name, value]] : []);\n        }, []);\n    }\n    async start() {\n        const { initialized, requesting } = FormSubmissionState;\n        const confirmationMessage = getAttribute(\"data-turbo-confirm\", this.submitter, this.formElement);\n        if (typeof confirmationMessage === \"string\") {\n            const answer = await FormSubmission.confirmMethod(confirmationMessage, this.formElement, this.submitter);\n            if (!answer) {\n                return;\n            }\n        }\n        if (this.state == initialized) {\n            this.state = requesting;\n            return this.fetchRequest.perform();\n        }\n    }\n    stop() {\n        const { stopping, stopped } = FormSubmissionState;\n        if (this.state != stopping && this.state != stopped) {\n            this.state = stopping;\n            this.fetchRequest.cancel();\n            return true;\n        }\n    }\n    prepareRequest(request) {\n        if (!request.isSafe) {\n            const token = getCookieValue(getMetaContent(\"csrf-param\")) || getMetaContent(\"csrf-token\");\n            if (token) {\n                request.headers[\"X-CSRF-Token\"] = token;\n            }\n        }\n        if (this.requestAcceptsTurboStreamResponse(request)) {\n            request.acceptResponseType(StreamMessage.contentType);\n        }\n    }\n    requestStarted(_request) {\n        var _a;\n        this.state = FormSubmissionState.waiting;\n        (_a = this.submitter) === null || _a === void 0 ? void 0 : _a.setAttribute(\"disabled\", \"\");\n        this.setSubmitsWith();\n        dispatch(\"turbo:submit-start\", {\n            target: this.formElement,\n            detail: { formSubmission: this },\n        });\n        this.delegate.formSubmissionStarted(this);\n    }\n    requestPreventedHandlingResponse(request, response) {\n        this.result = { success: response.succeeded, fetchResponse: response };\n    }\n    requestSucceededWithResponse(request, response) {\n        if (response.clientError || response.serverError) {\n            this.delegate.formSubmissionFailedWithResponse(this, response);\n        }\n        else if (this.requestMustRedirect(request) && responseSucceededWithoutRedirect(response)) {\n            const error = new Error(\"Form responses must redirect to another location\");\n            this.delegate.formSubmissionErrored(this, error);\n        }\n        else {\n            this.state = FormSubmissionState.receiving;\n            this.result = { success: true, fetchResponse: response };\n            this.delegate.formSubmissionSucceededWithResponse(this, response);\n        }\n    }\n    requestFailedWithResponse(request, response) {\n        this.result = { success: false, fetchResponse: response };\n        this.delegate.formSubmissionFailedWithResponse(this, response);\n    }\n    requestErrored(request, error) {\n        this.result = { success: false, error };\n        this.delegate.formSubmissionErrored(this, error);\n    }\n    requestFinished(_request) {\n        var _a;\n        this.state = FormSubmissionState.stopped;\n        (_a = this.submitter) === null || _a === void 0 ? void 0 : _a.removeAttribute(\"disabled\");\n        this.resetSubmitterText();\n        dispatch(\"turbo:submit-end\", {\n            target: this.formElement,\n            detail: Object.assign({ formSubmission: this }, this.result),\n        });\n        this.delegate.formSubmissionFinished(this);\n    }\n    setSubmitsWith() {\n        if (!this.submitter || !this.submitsWith)\n            return;\n        if (this.submitter.matches(\"button\")) {\n            this.originalSubmitText = this.submitter.innerHTML;\n            this.submitter.innerHTML = this.submitsWith;\n        }\n        else if (this.submitter.matches(\"input\")) {\n            const input = this.submitter;\n            this.originalSubmitText = input.value;\n            input.value = this.submitsWith;\n        }\n    }\n    resetSubmitterText() {\n        if (!this.submitter || !this.originalSubmitText)\n            return;\n        if (this.submitter.matches(\"button\")) {\n            this.submitter.innerHTML = this.originalSubmitText;\n        }\n        else if (this.submitter.matches(\"input\")) {\n            const input = this.submitter;\n            input.value = this.originalSubmitText;\n        }\n    }\n    requestMustRedirect(request) {\n        return !request.isSafe && this.mustRedirect;\n    }\n    requestAcceptsTurboStreamResponse(request) {\n        return !request.isSafe || hasAttribute(\"data-turbo-stream\", this.submitter, this.formElement);\n    }\n    get submitsWith() {\n        var _a;\n        return (_a = this.submitter) === null || _a === void 0 ? void 0 : _a.getAttribute(\"data-turbo-submits-with\");\n    }\n}\nfunction buildFormData(formElement, submitter) {\n    const formData = new FormData(formElement);\n    const name = submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute(\"name\");\n    const value = submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute(\"value\");\n    if (name) {\n        formData.append(name, value || \"\");\n    }\n    return formData;\n}\nfunction getCookieValue(cookieName) {\n    if (cookieName != null) {\n        const cookies = document.cookie ? document.cookie.split(\"; \") : [];\n        const cookie = cookies.find((cookie) => cookie.startsWith(cookieName));\n        if (cookie) {\n            const value = cookie.split(\"=\").slice(1).join(\"=\");\n            return value ? decodeURIComponent(value) : undefined;\n        }\n    }\n}\nfunction responseSucceededWithoutRedirect(response) {\n    return response.statusCode == 200 && !response.redirected;\n}\nfunction mergeFormDataEntries(url, entries) {\n    const searchParams = new URLSearchParams();\n    for (const [name, value] of entries) {\n        if (value instanceof File)\n            continue;\n        searchParams.append(name, value);\n    }\n    url.search = searchParams.toString();\n    return url;\n}\n\nclass Snapshot {\n    constructor(element) {\n        this.element = element;\n    }\n    get activeElement() {\n        return this.element.ownerDocument.activeElement;\n    }\n    get children() {\n        return [...this.element.children];\n    }\n    hasAnchor(anchor) {\n        return this.getElementForAnchor(anchor) != null;\n    }\n    getElementForAnchor(anchor) {\n        return anchor ? this.element.querySelector(`[id='${anchor}'], a[name='${anchor}']`) : null;\n    }\n    get isConnected() {\n        return this.element.isConnected;\n    }\n    get firstAutofocusableElement() {\n        const inertDisabledOrHidden = \"[inert], :disabled, [hidden], details:not([open]), dialog:not([open])\";\n        for (const element of this.element.querySelectorAll(\"[autofocus]\")) {\n            if (element.closest(inertDisabledOrHidden) == null)\n                return element;\n            else\n                continue;\n        }\n        return null;\n    }\n    get permanentElements() {\n        return queryPermanentElementsAll(this.element);\n    }\n    getPermanentElementById(id) {\n        return getPermanentElementById(this.element, id);\n    }\n    getPermanentElementMapForSnapshot(snapshot) {\n        const permanentElementMap = {};\n        for (const currentPermanentElement of this.permanentElements) {\n            const { id } = currentPermanentElement;\n            const newPermanentElement = snapshot.getPermanentElementById(id);\n            if (newPermanentElement) {\n                permanentElementMap[id] = [currentPermanentElement, newPermanentElement];\n            }\n        }\n        return permanentElementMap;\n    }\n}\nfunction getPermanentElementById(node, id) {\n    return node.querySelector(`#${id}[data-turbo-permanent]`);\n}\nfunction queryPermanentElementsAll(node) {\n    return node.querySelectorAll(\"[id][data-turbo-permanent]\");\n}\n\nclass FormSubmitObserver {\n    constructor(delegate, eventTarget) {\n        this.started = false;\n        this.submitCaptured = () => {\n            this.eventTarget.removeEventListener(\"submit\", this.submitBubbled, false);\n            this.eventTarget.addEventListener(\"submit\", this.submitBubbled, false);\n        };\n        this.submitBubbled = ((event) => {\n            if (!event.defaultPrevented) {\n                const form = event.target instanceof HTMLFormElement ? event.target : undefined;\n                const submitter = event.submitter || undefined;\n                if (form &&\n                    submissionDoesNotDismissDialog(form, submitter) &&\n                    submissionDoesNotTargetIFrame(form, submitter) &&\n                    this.delegate.willSubmitForm(form, submitter)) {\n                    event.preventDefault();\n                    event.stopImmediatePropagation();\n                    this.delegate.formSubmitted(form, submitter);\n                }\n            }\n        });\n        this.delegate = delegate;\n        this.eventTarget = eventTarget;\n    }\n    start() {\n        if (!this.started) {\n            this.eventTarget.addEventListener(\"submit\", this.submitCaptured, true);\n            this.started = true;\n        }\n    }\n    stop() {\n        if (this.started) {\n            this.eventTarget.removeEventListener(\"submit\", this.submitCaptured, true);\n            this.started = false;\n        }\n    }\n}\nfunction submissionDoesNotDismissDialog(form, submitter) {\n    const method = (submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute(\"formmethod\")) || form.getAttribute(\"method\");\n    return method != \"dialog\";\n}\nfunction submissionDoesNotTargetIFrame(form, submitter) {\n    if ((submitter === null || submitter === void 0 ? void 0 : submitter.hasAttribute(\"formtarget\")) || form.hasAttribute(\"target\")) {\n        const target = (submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute(\"formtarget\")) || form.target;\n        for (const element of document.getElementsByName(target)) {\n            if (element instanceof HTMLIFrameElement)\n                return false;\n        }\n        return true;\n    }\n    else {\n        return true;\n    }\n}\n\nclass View {\n    constructor(delegate, element) {\n        this.resolveRenderPromise = (_value) => { };\n        this.resolveInterceptionPromise = (_value) => { };\n        this.delegate = delegate;\n        this.element = element;\n    }\n    scrollToAnchor(anchor) {\n        const element = this.snapshot.getElementForAnchor(anchor);\n        if (element) {\n            this.scrollToElement(element);\n            this.focusElement(element);\n        }\n        else {\n            this.scrollToPosition({ x: 0, y: 0 });\n        }\n    }\n    scrollToAnchorFromLocation(location) {\n        this.scrollToAnchor(getAnchor(location));\n    }\n    scrollToElement(element) {\n        element.scrollIntoView();\n    }\n    focusElement(element) {\n        if (element instanceof HTMLElement) {\n            if (element.hasAttribute(\"tabindex\")) {\n                element.focus();\n            }\n            else {\n                element.setAttribute(\"tabindex\", \"-1\");\n                element.focus();\n                element.removeAttribute(\"tabindex\");\n            }\n        }\n    }\n    scrollToPosition({ x, y }) {\n        this.scrollRoot.scrollTo(x, y);\n    }\n    scrollToTop() {\n        this.scrollToPosition({ x: 0, y: 0 });\n    }\n    get scrollRoot() {\n        return window;\n    }\n    async render(renderer) {\n        const { isPreview, shouldRender, newSnapshot: snapshot } = renderer;\n        if (shouldRender) {\n            try {\n                this.renderPromise = new Promise((resolve) => (this.resolveRenderPromise = resolve));\n                this.renderer = renderer;\n                await this.prepareToRenderSnapshot(renderer);\n                const renderInterception = new Promise((resolve) => (this.resolveInterceptionPromise = resolve));\n                const options = { resume: this.resolveInterceptionPromise, render: this.renderer.renderElement };\n                const immediateRender = this.delegate.allowsImmediateRender(snapshot, options);\n                if (!immediateRender)\n                    await renderInterception;\n                await this.renderSnapshot(renderer);\n                this.delegate.viewRenderedSnapshot(snapshot, isPreview);\n                this.delegate.preloadOnLoadLinksForView(this.element);\n                this.finishRenderingSnapshot(renderer);\n            }\n            finally {\n                delete this.renderer;\n                this.resolveRenderPromise(undefined);\n                delete this.renderPromise;\n            }\n        }\n        else {\n            this.invalidate(renderer.reloadReason);\n        }\n    }\n    invalidate(reason) {\n        this.delegate.viewInvalidated(reason);\n    }\n    async prepareToRenderSnapshot(renderer) {\n        this.markAsPreview(renderer.isPreview);\n        await renderer.prepareToRender();\n    }\n    markAsPreview(isPreview) {\n        if (isPreview) {\n            this.element.setAttribute(\"data-turbo-preview\", \"\");\n        }\n        else {\n            this.element.removeAttribute(\"data-turbo-preview\");\n        }\n    }\n    async renderSnapshot(renderer) {\n        await renderer.render();\n    }\n    finishRenderingSnapshot(renderer) {\n        renderer.finishRendering();\n    }\n}\n\nclass FrameView extends View {\n    missing() {\n        this.element.innerHTML = `<strong class=\"turbo-frame-error\">Content missing</strong>`;\n    }\n    get snapshot() {\n        return new Snapshot(this.element);\n    }\n}\n\nclass LinkInterceptor {\n    constructor(delegate, element) {\n        this.clickBubbled = (event) => {\n            if (this.respondsToEventTarget(event.target)) {\n                this.clickEvent = event;\n            }\n            else {\n                delete this.clickEvent;\n            }\n        };\n        this.linkClicked = ((event) => {\n            if (this.clickEvent && this.respondsToEventTarget(event.target) && event.target instanceof Element) {\n                if (this.delegate.shouldInterceptLinkClick(event.target, event.detail.url, event.detail.originalEvent)) {\n                    this.clickEvent.preventDefault();\n                    event.preventDefault();\n                    this.delegate.linkClickIntercepted(event.target, event.detail.url, event.detail.originalEvent);\n                }\n            }\n            delete this.clickEvent;\n        });\n        this.willVisit = ((_event) => {\n            delete this.clickEvent;\n        });\n        this.delegate = delegate;\n        this.element = element;\n    }\n    start() {\n        this.element.addEventListener(\"click\", this.clickBubbled);\n        document.addEventListener(\"turbo:click\", this.linkClicked);\n        document.addEventListener(\"turbo:before-visit\", this.willVisit);\n    }\n    stop() {\n        this.element.removeEventListener(\"click\", this.clickBubbled);\n        document.removeEventListener(\"turbo:click\", this.linkClicked);\n        document.removeEventListener(\"turbo:before-visit\", this.willVisit);\n    }\n    respondsToEventTarget(target) {\n        const element = target instanceof Element ? target : target instanceof Node ? target.parentElement : null;\n        return element && element.closest(\"turbo-frame, html\") == this.element;\n    }\n}\n\nclass LinkClickObserver {\n    constructor(delegate, eventTarget) {\n        this.started = false;\n        this.clickCaptured = () => {\n            this.eventTarget.removeEventListener(\"click\", this.clickBubbled, false);\n            this.eventTarget.addEventListener(\"click\", this.clickBubbled, false);\n        };\n        this.clickBubbled = (event) => {\n            if (event instanceof MouseEvent && this.clickEventIsSignificant(event)) {\n                const target = (event.composedPath && event.composedPath()[0]) || event.target;\n                const link = this.findLinkFromClickTarget(target);\n                if (link && doesNotTargetIFrame(link)) {\n                    const location = this.getLocationForLink(link);\n                    if (this.delegate.willFollowLinkToLocation(link, location, event)) {\n                        event.preventDefault();\n                        this.delegate.followedLinkToLocation(link, location);\n                    }\n                }\n            }\n        };\n        this.delegate = delegate;\n        this.eventTarget = eventTarget;\n    }\n    start() {\n        if (!this.started) {\n            this.eventTarget.addEventListener(\"click\", this.clickCaptured, true);\n            this.started = true;\n        }\n    }\n    stop() {\n        if (this.started) {\n            this.eventTarget.removeEventListener(\"click\", this.clickCaptured, true);\n            this.started = false;\n        }\n    }\n    clickEventIsSignificant(event) {\n        return !((event.target && event.target.isContentEditable) ||\n            event.defaultPrevented ||\n            event.which > 1 ||\n            event.altKey ||\n            event.ctrlKey ||\n            event.metaKey ||\n            event.shiftKey);\n    }\n    findLinkFromClickTarget(target) {\n        return findClosestRecursively(target, \"a[href]:not([target^=_]):not([download])\");\n    }\n    getLocationForLink(link) {\n        return expandURL(link.getAttribute(\"href\") || \"\");\n    }\n}\nfunction doesNotTargetIFrame(anchor) {\n    if (anchor.hasAttribute(\"target\")) {\n        for (const element of document.getElementsByName(anchor.target)) {\n            if (element instanceof HTMLIFrameElement)\n                return false;\n        }\n        return true;\n    }\n    else {\n        return true;\n    }\n}\n\nclass FormLinkClickObserver {\n    constructor(delegate, element) {\n        this.delegate = delegate;\n        this.linkInterceptor = new LinkClickObserver(this, element);\n    }\n    start() {\n        this.linkInterceptor.start();\n    }\n    stop() {\n        this.linkInterceptor.stop();\n    }\n    willFollowLinkToLocation(link, location, originalEvent) {\n        return (this.delegate.willSubmitFormLinkToLocation(link, location, originalEvent) &&\n            link.hasAttribute(\"data-turbo-method\"));\n    }\n    followedLinkToLocation(link, location) {\n        const form = document.createElement(\"form\");\n        const type = \"hidden\";\n        for (const [name, value] of location.searchParams) {\n            form.append(Object.assign(document.createElement(\"input\"), { type, name, value }));\n        }\n        const action = Object.assign(location, { search: \"\" });\n        form.setAttribute(\"data-turbo\", \"true\");\n        form.setAttribute(\"action\", action.href);\n        form.setAttribute(\"hidden\", \"\");\n        const method = link.getAttribute(\"data-turbo-method\");\n        if (method)\n            form.setAttribute(\"method\", method);\n        const turboFrame = link.getAttribute(\"data-turbo-frame\");\n        if (turboFrame)\n            form.setAttribute(\"data-turbo-frame\", turboFrame);\n        const turboAction = getVisitAction(link);\n        if (turboAction)\n            form.setAttribute(\"data-turbo-action\", turboAction);\n        const turboConfirm = link.getAttribute(\"data-turbo-confirm\");\n        if (turboConfirm)\n            form.setAttribute(\"data-turbo-confirm\", turboConfirm);\n        const turboStream = link.hasAttribute(\"data-turbo-stream\");\n        if (turboStream)\n            form.setAttribute(\"data-turbo-stream\", \"\");\n        this.delegate.submittedFormLinkToLocation(link, location, form);\n        document.body.appendChild(form);\n        form.addEventListener(\"turbo:submit-end\", () => form.remove(), { once: true });\n        requestAnimationFrame(() => form.requestSubmit());\n    }\n}\n\nclass Bardo {\n    static async preservingPermanentElements(delegate, permanentElementMap, callback) {\n        const bardo = new this(delegate, permanentElementMap);\n        bardo.enter();\n        await callback();\n        bardo.leave();\n    }\n    constructor(delegate, permanentElementMap) {\n        this.delegate = delegate;\n        this.permanentElementMap = permanentElementMap;\n    }\n    enter() {\n        for (const id in this.permanentElementMap) {\n            const [currentPermanentElement, newPermanentElement] = this.permanentElementMap[id];\n            this.delegate.enteringBardo(currentPermanentElement, newPermanentElement);\n            this.replaceNewPermanentElementWithPlaceholder(newPermanentElement);\n        }\n    }\n    leave() {\n        for (const id in this.permanentElementMap) {\n            const [currentPermanentElement] = this.permanentElementMap[id];\n            this.replaceCurrentPermanentElementWithClone(currentPermanentElement);\n            this.replacePlaceholderWithPermanentElement(currentPermanentElement);\n            this.delegate.leavingBardo(currentPermanentElement);\n        }\n    }\n    replaceNewPermanentElementWithPlaceholder(permanentElement) {\n        const placeholder = createPlaceholderForPermanentElement(permanentElement);\n        permanentElement.replaceWith(placeholder);\n    }\n    replaceCurrentPermanentElementWithClone(permanentElement) {\n        const clone = permanentElement.cloneNode(true);\n        permanentElement.replaceWith(clone);\n    }\n    replacePlaceholderWithPermanentElement(permanentElement) {\n        const placeholder = this.getPlaceholderById(permanentElement.id);\n        placeholder === null || placeholder === void 0 ? void 0 : placeholder.replaceWith(permanentElement);\n    }\n    getPlaceholderById(id) {\n        return this.placeholders.find((element) => element.content == id);\n    }\n    get placeholders() {\n        return [...document.querySelectorAll(\"meta[name=turbo-permanent-placeholder][content]\")];\n    }\n}\nfunction createPlaceholderForPermanentElement(permanentElement) {\n    const element = document.createElement(\"meta\");\n    element.setAttribute(\"name\", \"turbo-permanent-placeholder\");\n    element.setAttribute(\"content\", permanentElement.id);\n    return element;\n}\n\nclass Renderer {\n    constructor(currentSnapshot, newSnapshot, renderElement, isPreview, willRender = true) {\n        this.activeElement = null;\n        this.currentSnapshot = currentSnapshot;\n        this.newSnapshot = newSnapshot;\n        this.isPreview = isPreview;\n        this.willRender = willRender;\n        this.renderElement = renderElement;\n        this.promise = new Promise((resolve, reject) => (this.resolvingFunctions = { resolve, reject }));\n    }\n    get shouldRender() {\n        return true;\n    }\n    get reloadReason() {\n        return;\n    }\n    prepareToRender() {\n        return;\n    }\n    finishRendering() {\n        if (this.resolvingFunctions) {\n            this.resolvingFunctions.resolve();\n            delete this.resolvingFunctions;\n        }\n    }\n    async preservingPermanentElements(callback) {\n        await Bardo.preservingPermanentElements(this, this.permanentElementMap, callback);\n    }\n    focusFirstAutofocusableElement() {\n        const element = this.connectedSnapshot.firstAutofocusableElement;\n        if (elementIsFocusable(element)) {\n            element.focus();\n        }\n    }\n    enteringBardo(currentPermanentElement) {\n        if (this.activeElement)\n            return;\n        if (currentPermanentElement.contains(this.currentSnapshot.activeElement)) {\n            this.activeElement = this.currentSnapshot.activeElement;\n        }\n    }\n    leavingBardo(currentPermanentElement) {\n        if (currentPermanentElement.contains(this.activeElement) && this.activeElement instanceof HTMLElement) {\n            this.activeElement.focus();\n            this.activeElement = null;\n        }\n    }\n    get connectedSnapshot() {\n        return this.newSnapshot.isConnected ? this.newSnapshot : this.currentSnapshot;\n    }\n    get currentElement() {\n        return this.currentSnapshot.element;\n    }\n    get newElement() {\n        return this.newSnapshot.element;\n    }\n    get permanentElementMap() {\n        return this.currentSnapshot.getPermanentElementMapForSnapshot(this.newSnapshot);\n    }\n}\nfunction elementIsFocusable(element) {\n    return element && typeof element.focus == \"function\";\n}\n\nclass FrameRenderer extends Renderer {\n    static renderElement(currentElement, newElement) {\n        var _a;\n        const destinationRange = document.createRange();\n        destinationRange.selectNodeContents(currentElement);\n        destinationRange.deleteContents();\n        const frameElement = newElement;\n        const sourceRange = (_a = frameElement.ownerDocument) === null || _a === void 0 ? void 0 : _a.createRange();\n        if (sourceRange) {\n            sourceRange.selectNodeContents(frameElement);\n            currentElement.appendChild(sourceRange.extractContents());\n        }\n    }\n    constructor(delegate, currentSnapshot, newSnapshot, renderElement, isPreview, willRender = true) {\n        super(currentSnapshot, newSnapshot, renderElement, isPreview, willRender);\n        this.delegate = delegate;\n    }\n    get shouldRender() {\n        return true;\n    }\n    async render() {\n        await nextAnimationFrame();\n        this.preservingPermanentElements(() => {\n            this.loadFrameElement();\n        });\n        this.scrollFrameIntoView();\n        await nextAnimationFrame();\n        this.focusFirstAutofocusableElement();\n        await nextAnimationFrame();\n        this.activateScriptElements();\n    }\n    loadFrameElement() {\n        this.delegate.willRenderFrame(this.currentElement, this.newElement);\n        this.renderElement(this.currentElement, this.newElement);\n    }\n    scrollFrameIntoView() {\n        if (this.currentElement.autoscroll || this.newElement.autoscroll) {\n            const element = this.currentElement.firstElementChild;\n            const block = readScrollLogicalPosition(this.currentElement.getAttribute(\"data-autoscroll-block\"), \"end\");\n            const behavior = readScrollBehavior(this.currentElement.getAttribute(\"data-autoscroll-behavior\"), \"auto\");\n            if (element) {\n                element.scrollIntoView({ block, behavior });\n                return true;\n            }\n        }\n        return false;\n    }\n    activateScriptElements() {\n        for (const inertScriptElement of this.newScriptElements) {\n            const activatedScriptElement = activateScriptElement(inertScriptElement);\n            inertScriptElement.replaceWith(activatedScriptElement);\n        }\n    }\n    get newScriptElements() {\n        return this.currentElement.querySelectorAll(\"script\");\n    }\n}\nfunction readScrollLogicalPosition(value, defaultValue) {\n    if (value == \"end\" || value == \"start\" || value == \"center\" || value == \"nearest\") {\n        return value;\n    }\n    else {\n        return defaultValue;\n    }\n}\nfunction readScrollBehavior(value, defaultValue) {\n    if (value == \"auto\" || value == \"smooth\") {\n        return value;\n    }\n    else {\n        return defaultValue;\n    }\n}\n\nclass ProgressBar {\n    static get defaultCSS() {\n        return unindent `\n      .turbo-progress-bar {\n        position: fixed;\n        display: block;\n        top: 0;\n        left: 0;\n        height: 3px;\n        background: #0076ff;\n        z-index: 2147483647;\n        transition:\n          width ${ProgressBar.animationDuration}ms ease-out,\n          opacity ${ProgressBar.animationDuration / 2}ms ${ProgressBar.animationDuration / 2}ms ease-in;\n        transform: translate3d(0, 0, 0);\n      }\n    `;\n    }\n    constructor() {\n        this.hiding = false;\n        this.value = 0;\n        this.visible = false;\n        this.trickle = () => {\n            this.setValue(this.value + Math.random() / 100);\n        };\n        this.stylesheetElement = this.createStylesheetElement();\n        this.progressElement = this.createProgressElement();\n        this.installStylesheetElement();\n        this.setValue(0);\n    }\n    show() {\n        if (!this.visible) {\n            this.visible = true;\n            this.installProgressElement();\n            this.startTrickling();\n        }\n    }\n    hide() {\n        if (this.visible && !this.hiding) {\n            this.hiding = true;\n            this.fadeProgressElement(() => {\n                this.uninstallProgressElement();\n                this.stopTrickling();\n                this.visible = false;\n                this.hiding = false;\n            });\n        }\n    }\n    setValue(value) {\n        this.value = value;\n        this.refresh();\n    }\n    installStylesheetElement() {\n        document.head.insertBefore(this.stylesheetElement, document.head.firstChild);\n    }\n    installProgressElement() {\n        this.progressElement.style.width = \"0\";\n        this.progressElement.style.opacity = \"1\";\n        document.documentElement.insertBefore(this.progressElement, document.body);\n        this.refresh();\n    }\n    fadeProgressElement(callback) {\n        this.progressElement.style.opacity = \"0\";\n        setTimeout(callback, ProgressBar.animationDuration * 1.5);\n    }\n    uninstallProgressElement() {\n        if (this.progressElement.parentNode) {\n            document.documentElement.removeChild(this.progressElement);\n        }\n    }\n    startTrickling() {\n        if (!this.trickleInterval) {\n            this.trickleInterval = window.setInterval(this.trickle, ProgressBar.animationDuration);\n        }\n    }\n    stopTrickling() {\n        window.clearInterval(this.trickleInterval);\n        delete this.trickleInterval;\n    }\n    refresh() {\n        requestAnimationFrame(() => {\n            this.progressElement.style.width = `${10 + this.value * 90}%`;\n        });\n    }\n    createStylesheetElement() {\n        const element = document.createElement(\"style\");\n        element.type = \"text/css\";\n        element.textContent = ProgressBar.defaultCSS;\n        if (this.cspNonce) {\n            element.nonce = this.cspNonce;\n        }\n        return element;\n    }\n    createProgressElement() {\n        const element = document.createElement(\"div\");\n        element.className = \"turbo-progress-bar\";\n        return element;\n    }\n    get cspNonce() {\n        return getMetaContent(\"csp-nonce\");\n    }\n}\nProgressBar.animationDuration = 300;\n\nclass HeadSnapshot extends Snapshot {\n    constructor() {\n        super(...arguments);\n        this.detailsByOuterHTML = this.children\n            .filter((element) => !elementIsNoscript(element))\n            .map((element) => elementWithoutNonce(element))\n            .reduce((result, element) => {\n            const { outerHTML } = element;\n            const details = outerHTML in result\n                ? result[outerHTML]\n                : {\n                    type: elementType(element),\n                    tracked: elementIsTracked(element),\n                    elements: [],\n                };\n            return Object.assign(Object.assign({}, result), { [outerHTML]: Object.assign(Object.assign({}, details), { elements: [...details.elements, element] }) });\n        }, {});\n    }\n    get trackedElementSignature() {\n        return Object.keys(this.detailsByOuterHTML)\n            .filter((outerHTML) => this.detailsByOuterHTML[outerHTML].tracked)\n            .join(\"\");\n    }\n    getScriptElementsNotInSnapshot(snapshot) {\n        return this.getElementsMatchingTypeNotInSnapshot(\"script\", snapshot);\n    }\n    getStylesheetElementsNotInSnapshot(snapshot) {\n        return this.getElementsMatchingTypeNotInSnapshot(\"stylesheet\", snapshot);\n    }\n    getElementsMatchingTypeNotInSnapshot(matchedType, snapshot) {\n        return Object.keys(this.detailsByOuterHTML)\n            .filter((outerHTML) => !(outerHTML in snapshot.detailsByOuterHTML))\n            .map((outerHTML) => this.detailsByOuterHTML[outerHTML])\n            .filter(({ type }) => type == matchedType)\n            .map(({ elements: [element] }) => element);\n    }\n    get provisionalElements() {\n        return Object.keys(this.detailsByOuterHTML).reduce((result, outerHTML) => {\n            const { type, tracked, elements } = this.detailsByOuterHTML[outerHTML];\n            if (type == null && !tracked) {\n                return [...result, ...elements];\n            }\n            else if (elements.length > 1) {\n                return [...result, ...elements.slice(1)];\n            }\n            else {\n                return result;\n            }\n        }, []);\n    }\n    getMetaValue(name) {\n        const element = this.findMetaElementByName(name);\n        return element ? element.getAttribute(\"content\") : null;\n    }\n    findMetaElementByName(name) {\n        return Object.keys(this.detailsByOuterHTML).reduce((result, outerHTML) => {\n            const { elements: [element], } = this.detailsByOuterHTML[outerHTML];\n            return elementIsMetaElementWithName(element, name) ? element : result;\n        }, undefined);\n    }\n}\nfunction elementType(element) {\n    if (elementIsScript(element)) {\n        return \"script\";\n    }\n    else if (elementIsStylesheet(element)) {\n        return \"stylesheet\";\n    }\n}\nfunction elementIsTracked(element) {\n    return element.getAttribute(\"data-turbo-track\") == \"reload\";\n}\nfunction elementIsScript(element) {\n    const tagName = element.localName;\n    return tagName == \"script\";\n}\nfunction elementIsNoscript(element) {\n    const tagName = element.localName;\n    return tagName == \"noscript\";\n}\nfunction elementIsStylesheet(element) {\n    const tagName = element.localName;\n    return tagName == \"style\" || (tagName == \"link\" && element.getAttribute(\"rel\") == \"stylesheet\");\n}\nfunction elementIsMetaElementWithName(element, name) {\n    const tagName = element.localName;\n    return tagName == \"meta\" && element.getAttribute(\"name\") == name;\n}\nfunction elementWithoutNonce(element) {\n    if (element.hasAttribute(\"nonce\")) {\n        element.setAttribute(\"nonce\", \"\");\n    }\n    return element;\n}\n\nclass PageSnapshot extends Snapshot {\n    static fromHTMLString(html = \"\") {\n        return this.fromDocument(parseHTMLDocument(html));\n    }\n    static fromElement(element) {\n        return this.fromDocument(element.ownerDocument);\n    }\n    static fromDocument({ head, body }) {\n        return new this(body, new HeadSnapshot(head));\n    }\n    constructor(element, headSnapshot) {\n        super(element);\n        this.headSnapshot = headSnapshot;\n    }\n    clone() {\n        const clonedElement = this.element.cloneNode(true);\n        const selectElements = this.element.querySelectorAll(\"select\");\n        const clonedSelectElements = clonedElement.querySelectorAll(\"select\");\n        for (const [index, source] of selectElements.entries()) {\n            const clone = clonedSelectElements[index];\n            for (const option of clone.selectedOptions)\n                option.selected = false;\n            for (const option of source.selectedOptions)\n                clone.options[option.index].selected = true;\n        }\n        for (const clonedPasswordInput of clonedElement.querySelectorAll('input[type=\"password\"]')) {\n            clonedPasswordInput.value = \"\";\n        }\n        return new PageSnapshot(clonedElement, this.headSnapshot);\n    }\n    get headElement() {\n        return this.headSnapshot.element;\n    }\n    get rootLocation() {\n        var _a;\n        const root = (_a = this.getSetting(\"root\")) !== null && _a !== void 0 ? _a : \"/\";\n        return expandURL(root);\n    }\n    get cacheControlValue() {\n        return this.getSetting(\"cache-control\");\n    }\n    get isPreviewable() {\n        return this.cacheControlValue != \"no-preview\";\n    }\n    get isCacheable() {\n        return this.cacheControlValue != \"no-cache\";\n    }\n    get isVisitable() {\n        return this.getSetting(\"visit-control\") != \"reload\";\n    }\n    getSetting(name) {\n        return this.headSnapshot.getMetaValue(`turbo-${name}`);\n    }\n}\n\nvar TimingMetric;\n(function (TimingMetric) {\n    TimingMetric[\"visitStart\"] = \"visitStart\";\n    TimingMetric[\"requestStart\"] = \"requestStart\";\n    TimingMetric[\"requestEnd\"] = \"requestEnd\";\n    TimingMetric[\"visitEnd\"] = \"visitEnd\";\n})(TimingMetric || (TimingMetric = {}));\nvar VisitState;\n(function (VisitState) {\n    VisitState[\"initialized\"] = \"initialized\";\n    VisitState[\"started\"] = \"started\";\n    VisitState[\"canceled\"] = \"canceled\";\n    VisitState[\"failed\"] = \"failed\";\n    VisitState[\"completed\"] = \"completed\";\n})(VisitState || (VisitState = {}));\nconst defaultOptions = {\n    action: \"advance\",\n    historyChanged: false,\n    visitCachedSnapshot: () => { },\n    willRender: true,\n    updateHistory: true,\n    shouldCacheSnapshot: true,\n    acceptsStreamResponse: false,\n};\nvar SystemStatusCode;\n(function (SystemStatusCode) {\n    SystemStatusCode[SystemStatusCode[\"networkFailure\"] = 0] = \"networkFailure\";\n    SystemStatusCode[SystemStatusCode[\"timeoutFailure\"] = -1] = \"timeoutFailure\";\n    SystemStatusCode[SystemStatusCode[\"contentTypeMismatch\"] = -2] = \"contentTypeMismatch\";\n})(SystemStatusCode || (SystemStatusCode = {}));\nclass Visit {\n    constructor(delegate, location, restorationIdentifier, options = {}) {\n        this.identifier = uuid();\n        this.timingMetrics = {};\n        this.followedRedirect = false;\n        this.historyChanged = false;\n        this.scrolled = false;\n        this.shouldCacheSnapshot = true;\n        this.acceptsStreamResponse = false;\n        this.snapshotCached = false;\n        this.state = VisitState.initialized;\n        this.delegate = delegate;\n        this.location = location;\n        this.restorationIdentifier = restorationIdentifier || uuid();\n        const { action, historyChanged, referrer, snapshot, snapshotHTML, response, visitCachedSnapshot, willRender, updateHistory, shouldCacheSnapshot, acceptsStreamResponse, } = Object.assign(Object.assign({}, defaultOptions), options);\n        this.action = action;\n        this.historyChanged = historyChanged;\n        this.referrer = referrer;\n        this.snapshot = snapshot;\n        this.snapshotHTML = snapshotHTML;\n        this.response = response;\n        this.isSamePage = this.delegate.locationWithActionIsSamePage(this.location, this.action);\n        this.visitCachedSnapshot = visitCachedSnapshot;\n        this.willRender = willRender;\n        this.updateHistory = updateHistory;\n        this.scrolled = !willRender;\n        this.shouldCacheSnapshot = shouldCacheSnapshot;\n        this.acceptsStreamResponse = acceptsStreamResponse;\n    }\n    get adapter() {\n        return this.delegate.adapter;\n    }\n    get view() {\n        return this.delegate.view;\n    }\n    get history() {\n        return this.delegate.history;\n    }\n    get restorationData() {\n        return this.history.getRestorationDataForIdentifier(this.restorationIdentifier);\n    }\n    get silent() {\n        return this.isSamePage;\n    }\n    start() {\n        if (this.state == VisitState.initialized) {\n            this.recordTimingMetric(TimingMetric.visitStart);\n            this.state = VisitState.started;\n            this.adapter.visitStarted(this);\n            this.delegate.visitStarted(this);\n        }\n    }\n    cancel() {\n        if (this.state == VisitState.started) {\n            if (this.request) {\n                this.request.cancel();\n            }\n            this.cancelRender();\n            this.state = VisitState.canceled;\n        }\n    }\n    complete() {\n        if (this.state == VisitState.started) {\n            this.recordTimingMetric(TimingMetric.visitEnd);\n            this.state = VisitState.completed;\n            this.followRedirect();\n            if (!this.followedRedirect) {\n                this.adapter.visitCompleted(this);\n                this.delegate.visitCompleted(this);\n            }\n        }\n    }\n    fail() {\n        if (this.state == VisitState.started) {\n            this.state = VisitState.failed;\n            this.adapter.visitFailed(this);\n        }\n    }\n    changeHistory() {\n        var _a;\n        if (!this.historyChanged && this.updateHistory) {\n            const actionForHistory = this.location.href === ((_a = this.referrer) === null || _a === void 0 ? void 0 : _a.href) ? \"replace\" : this.action;\n            const method = getHistoryMethodForAction(actionForHistory);\n            this.history.update(method, this.location, this.restorationIdentifier);\n            this.historyChanged = true;\n        }\n    }\n    issueRequest() {\n        if (this.hasPreloadedResponse()) {\n            this.simulateRequest();\n        }\n        else if (this.shouldIssueRequest() && !this.request) {\n            this.request = new FetchRequest(this, FetchMethod.get, this.location);\n            this.request.perform();\n        }\n    }\n    simulateRequest() {\n        if (this.response) {\n            this.startRequest();\n            this.recordResponse();\n            this.finishRequest();\n        }\n    }\n    startRequest() {\n        this.recordTimingMetric(TimingMetric.requestStart);\n        this.adapter.visitRequestStarted(this);\n    }\n    recordResponse(response = this.response) {\n        this.response = response;\n        if (response) {\n            const { statusCode } = response;\n            if (isSuccessful(statusCode)) {\n                this.adapter.visitRequestCompleted(this);\n            }\n            else {\n                this.adapter.visitRequestFailedWithStatusCode(this, statusCode);\n            }\n        }\n    }\n    finishRequest() {\n        this.recordTimingMetric(TimingMetric.requestEnd);\n        this.adapter.visitRequestFinished(this);\n    }\n    loadResponse() {\n        if (this.response) {\n            const { statusCode, responseHTML } = this.response;\n            this.render(async () => {\n                if (this.shouldCacheSnapshot)\n                    this.cacheSnapshot();\n                if (this.view.renderPromise)\n                    await this.view.renderPromise;\n                if (isSuccessful(statusCode) && responseHTML != null) {\n                    await this.view.renderPage(PageSnapshot.fromHTMLString(responseHTML), false, this.willRender, this);\n                    this.performScroll();\n                    this.adapter.visitRendered(this);\n                    this.complete();\n                }\n                else {\n                    await this.view.renderError(PageSnapshot.fromHTMLString(responseHTML), this);\n                    this.adapter.visitRendered(this);\n                    this.fail();\n                }\n            });\n        }\n    }\n    getCachedSnapshot() {\n        const snapshot = this.view.getCachedSnapshotForLocation(this.location) || this.getPreloadedSnapshot();\n        if (snapshot && (!getAnchor(this.location) || snapshot.hasAnchor(getAnchor(this.location)))) {\n            if (this.action == \"restore\" || snapshot.isPreviewable) {\n                return snapshot;\n            }\n        }\n    }\n    getPreloadedSnapshot() {\n        if (this.snapshotHTML) {\n            return PageSnapshot.fromHTMLString(this.snapshotHTML);\n        }\n    }\n    hasCachedSnapshot() {\n        return this.getCachedSnapshot() != null;\n    }\n    loadCachedSnapshot() {\n        const snapshot = this.getCachedSnapshot();\n        if (snapshot) {\n            const isPreview = this.shouldIssueRequest();\n            this.render(async () => {\n                this.cacheSnapshot();\n                if (this.isSamePage) {\n                    this.adapter.visitRendered(this);\n                }\n                else {\n                    if (this.view.renderPromise)\n                        await this.view.renderPromise;\n                    await this.view.renderPage(snapshot, isPreview, this.willRender, this);\n                    this.performScroll();\n                    this.adapter.visitRendered(this);\n                    if (!isPreview) {\n                        this.complete();\n                    }\n                }\n            });\n        }\n    }\n    followRedirect() {\n        var _a;\n        if (this.redirectedToLocation && !this.followedRedirect && ((_a = this.response) === null || _a === void 0 ? void 0 : _a.redirected)) {\n            this.adapter.visitProposedToLocation(this.redirectedToLocation, {\n                action: \"replace\",\n                response: this.response,\n                shouldCacheSnapshot: false,\n                willRender: false,\n            });\n            this.followedRedirect = true;\n        }\n    }\n    goToSamePageAnchor() {\n        if (this.isSamePage) {\n            this.render(async () => {\n                this.cacheSnapshot();\n                this.performScroll();\n                this.changeHistory();\n                this.adapter.visitRendered(this);\n            });\n        }\n    }\n    prepareRequest(request) {\n        if (this.acceptsStreamResponse) {\n            request.acceptResponseType(StreamMessage.contentType);\n        }\n    }\n    requestStarted() {\n        this.startRequest();\n    }\n    requestPreventedHandlingResponse(_request, _response) { }\n    async requestSucceededWithResponse(request, response) {\n        const responseHTML = await response.responseHTML;\n        const { redirected, statusCode } = response;\n        if (responseHTML == undefined) {\n            this.recordResponse({\n                statusCode: SystemStatusCode.contentTypeMismatch,\n                redirected,\n            });\n        }\n        else {\n            this.redirectedToLocation = response.redirected ? response.location : undefined;\n            this.recordResponse({ statusCode: statusCode, responseHTML, redirected });\n        }\n    }\n    async requestFailedWithResponse(request, response) {\n        const responseHTML = await response.responseHTML;\n        const { redirected, statusCode } = response;\n        if (responseHTML == undefined) {\n            this.recordResponse({\n                statusCode: SystemStatusCode.contentTypeMismatch,\n                redirected,\n            });\n        }\n        else {\n            this.recordResponse({ statusCode: statusCode, responseHTML, redirected });\n        }\n    }\n    requestErrored(_request, _error) {\n        this.recordResponse({\n            statusCode: SystemStatusCode.networkFailure,\n            redirected: false,\n        });\n    }\n    requestFinished() {\n        this.finishRequest();\n    }\n    performScroll() {\n        if (!this.scrolled && !this.view.forceReloaded) {\n            if (this.action == \"restore\") {\n                this.scrollToRestoredPosition() || this.scrollToAnchor() || this.view.scrollToTop();\n            }\n            else {\n                this.scrollToAnchor() || this.view.scrollToTop();\n            }\n            if (this.isSamePage) {\n                this.delegate.visitScrolledToSamePageLocation(this.view.lastRenderedLocation, this.location);\n            }\n            this.scrolled = true;\n        }\n    }\n    scrollToRestoredPosition() {\n        const { scrollPosition } = this.restorationData;\n        if (scrollPosition) {\n            this.view.scrollToPosition(scrollPosition);\n            return true;\n        }\n    }\n    scrollToAnchor() {\n        const anchor = getAnchor(this.location);\n        if (anchor != null) {\n            this.view.scrollToAnchor(anchor);\n            return true;\n        }\n    }\n    recordTimingMetric(metric) {\n        this.timingMetrics[metric] = new Date().getTime();\n    }\n    getTimingMetrics() {\n        return Object.assign({}, this.timingMetrics);\n    }\n    getHistoryMethodForAction(action) {\n        switch (action) {\n            case \"replace\":\n                return history.replaceState;\n            case \"advance\":\n            case \"restore\":\n                return history.pushState;\n        }\n    }\n    hasPreloadedResponse() {\n        return typeof this.response == \"object\";\n    }\n    shouldIssueRequest() {\n        if (this.isSamePage) {\n            return false;\n        }\n        else if (this.action == \"restore\") {\n            return !this.hasCachedSnapshot();\n        }\n        else {\n            return this.willRender;\n        }\n    }\n    cacheSnapshot() {\n        if (!this.snapshotCached) {\n            this.view.cacheSnapshot(this.snapshot).then((snapshot) => snapshot && this.visitCachedSnapshot(snapshot));\n            this.snapshotCached = true;\n        }\n    }\n    async render(callback) {\n        this.cancelRender();\n        await new Promise((resolve) => {\n            this.frame = requestAnimationFrame(() => resolve());\n        });\n        await callback();\n        delete this.frame;\n    }\n    cancelRender() {\n        if (this.frame) {\n            cancelAnimationFrame(this.frame);\n            delete this.frame;\n        }\n    }\n}\nfunction isSuccessful(statusCode) {\n    return statusCode >= 200 && statusCode < 300;\n}\n\nclass BrowserAdapter {\n    constructor(session) {\n        this.progressBar = new ProgressBar();\n        this.showProgressBar = () => {\n            this.progressBar.show();\n        };\n        this.session = session;\n    }\n    visitProposedToLocation(location, options) {\n        this.navigator.startVisit(location, (options === null || options === void 0 ? void 0 : options.restorationIdentifier) || uuid(), options);\n    }\n    visitStarted(visit) {\n        this.location = visit.location;\n        visit.loadCachedSnapshot();\n        visit.issueRequest();\n        visit.goToSamePageAnchor();\n    }\n    visitRequestStarted(visit) {\n        this.progressBar.setValue(0);\n        if (visit.hasCachedSnapshot() || visit.action != \"restore\") {\n            this.showVisitProgressBarAfterDelay();\n        }\n        else {\n            this.showProgressBar();\n        }\n    }\n    visitRequestCompleted(visit) {\n        visit.loadResponse();\n    }\n    visitRequestFailedWithStatusCode(visit, statusCode) {\n        switch (statusCode) {\n            case SystemStatusCode.networkFailure:\n            case SystemStatusCode.timeoutFailure:\n            case SystemStatusCode.contentTypeMismatch:\n                return this.reload({\n                    reason: \"request_failed\",\n                    context: {\n                        statusCode,\n                    },\n                });\n            default:\n                return visit.loadResponse();\n        }\n    }\n    visitRequestFinished(_visit) {\n        this.progressBar.setValue(1);\n        this.hideVisitProgressBar();\n    }\n    visitCompleted(_visit) { }\n    pageInvalidated(reason) {\n        this.reload(reason);\n    }\n    visitFailed(_visit) { }\n    visitRendered(_visit) { }\n    formSubmissionStarted(_formSubmission) {\n        this.progressBar.setValue(0);\n        this.showFormProgressBarAfterDelay();\n    }\n    formSubmissionFinished(_formSubmission) {\n        this.progressBar.setValue(1);\n        this.hideFormProgressBar();\n    }\n    showVisitProgressBarAfterDelay() {\n        this.visitProgressBarTimeout = window.setTimeout(this.showProgressBar, this.session.progressBarDelay);\n    }\n    hideVisitProgressBar() {\n        this.progressBar.hide();\n        if (this.visitProgressBarTimeout != null) {\n            window.clearTimeout(this.visitProgressBarTimeout);\n            delete this.visitProgressBarTimeout;\n        }\n    }\n    showFormProgressBarAfterDelay() {\n        if (this.formProgressBarTimeout == null) {\n            this.formProgressBarTimeout = window.setTimeout(this.showProgressBar, this.session.progressBarDelay);\n        }\n    }\n    hideFormProgressBar() {\n        this.progressBar.hide();\n        if (this.formProgressBarTimeout != null) {\n            window.clearTimeout(this.formProgressBarTimeout);\n            delete this.formProgressBarTimeout;\n        }\n    }\n    reload(reason) {\n        var _a;\n        dispatch(\"turbo:reload\", { detail: reason });\n        window.location.href = ((_a = this.location) === null || _a === void 0 ? void 0 : _a.toString()) || window.location.href;\n    }\n    get navigator() {\n        return this.session.navigator;\n    }\n}\n\nclass CacheObserver {\n    constructor() {\n        this.selector = \"[data-turbo-temporary]\";\n        this.deprecatedSelector = \"[data-turbo-cache=false]\";\n        this.started = false;\n        this.removeTemporaryElements = ((_event) => {\n            for (const element of this.temporaryElements) {\n                element.remove();\n            }\n        });\n    }\n    start() {\n        if (!this.started) {\n            this.started = true;\n            addEventListener(\"turbo:before-cache\", this.removeTemporaryElements, false);\n        }\n    }\n    stop() {\n        if (this.started) {\n            this.started = false;\n            removeEventListener(\"turbo:before-cache\", this.removeTemporaryElements, false);\n        }\n    }\n    get temporaryElements() {\n        return [...document.querySelectorAll(this.selector), ...this.temporaryElementsWithDeprecation];\n    }\n    get temporaryElementsWithDeprecation() {\n        const elements = document.querySelectorAll(this.deprecatedSelector);\n        if (elements.length) {\n            console.warn(`The ${this.deprecatedSelector} selector is deprecated and will be removed in a future version. Use ${this.selector} instead.`);\n        }\n        return [...elements];\n    }\n}\n\nclass FrameRedirector {\n    constructor(session, element) {\n        this.session = session;\n        this.element = element;\n        this.linkInterceptor = new LinkInterceptor(this, element);\n        this.formSubmitObserver = new FormSubmitObserver(this, element);\n    }\n    start() {\n        this.linkInterceptor.start();\n        this.formSubmitObserver.start();\n    }\n    stop() {\n        this.linkInterceptor.stop();\n        this.formSubmitObserver.stop();\n    }\n    shouldInterceptLinkClick(element, _location, _event) {\n        return this.shouldRedirect(element);\n    }\n    linkClickIntercepted(element, url, event) {\n        const frame = this.findFrameElement(element);\n        if (frame) {\n            frame.delegate.linkClickIntercepted(element, url, event);\n        }\n    }\n    willSubmitForm(element, submitter) {\n        return (element.closest(\"turbo-frame\") == null &&\n            this.shouldSubmit(element, submitter) &&\n            this.shouldRedirect(element, submitter));\n    }\n    formSubmitted(element, submitter) {\n        const frame = this.findFrameElement(element, submitter);\n        if (frame) {\n            frame.delegate.formSubmitted(element, submitter);\n        }\n    }\n    shouldSubmit(form, submitter) {\n        var _a;\n        const action = getAction(form, submitter);\n        const meta = this.element.ownerDocument.querySelector(`meta[name=\"turbo-root\"]`);\n        const rootLocation = expandURL((_a = meta === null || meta === void 0 ? void 0 : meta.content) !== null && _a !== void 0 ? _a : \"/\");\n        return this.shouldRedirect(form, submitter) && locationIsVisitable(action, rootLocation);\n    }\n    shouldRedirect(element, submitter) {\n        const isNavigatable = element instanceof HTMLFormElement\n            ? this.session.submissionIsNavigatable(element, submitter)\n            : this.session.elementIsNavigatable(element);\n        if (isNavigatable) {\n            const frame = this.findFrameElement(element, submitter);\n            return frame ? frame != element.closest(\"turbo-frame\") : false;\n        }\n        else {\n            return false;\n        }\n    }\n    findFrameElement(element, submitter) {\n        const id = (submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute(\"data-turbo-frame\")) || element.getAttribute(\"data-turbo-frame\");\n        if (id && id != \"_top\") {\n            const frame = this.element.querySelector(`#${id}:not([disabled])`);\n            if (frame instanceof FrameElement) {\n                return frame;\n            }\n        }\n    }\n}\n\nclass History {\n    constructor(delegate) {\n        this.restorationIdentifier = uuid();\n        this.restorationData = {};\n        this.started = false;\n        this.pageLoaded = false;\n        this.onPopState = (event) => {\n            if (this.shouldHandlePopState()) {\n                const { turbo } = event.state || {};\n                if (turbo) {\n                    this.location = new URL(window.location.href);\n                    const { restorationIdentifier } = turbo;\n                    this.restorationIdentifier = restorationIdentifier;\n                    this.delegate.historyPoppedToLocationWithRestorationIdentifier(this.location, restorationIdentifier);\n                }\n            }\n        };\n        this.onPageLoad = async (_event) => {\n            await nextMicrotask();\n            this.pageLoaded = true;\n        };\n        this.delegate = delegate;\n    }\n    start() {\n        if (!this.started) {\n            addEventListener(\"popstate\", this.onPopState, false);\n            addEventListener(\"load\", this.onPageLoad, false);\n            this.started = true;\n            this.replace(new URL(window.location.href));\n        }\n    }\n    stop() {\n        if (this.started) {\n            removeEventListener(\"popstate\", this.onPopState, false);\n            removeEventListener(\"load\", this.onPageLoad, false);\n            this.started = false;\n        }\n    }\n    push(location, restorationIdentifier) {\n        this.update(history.pushState, location, restorationIdentifier);\n    }\n    replace(location, restorationIdentifier) {\n        this.update(history.replaceState, location, restorationIdentifier);\n    }\n    update(method, location, restorationIdentifier = uuid()) {\n        const state = { turbo: { restorationIdentifier } };\n        method.call(history, state, \"\", location.href);\n        this.location = location;\n        this.restorationIdentifier = restorationIdentifier;\n    }\n    getRestorationDataForIdentifier(restorationIdentifier) {\n        return this.restorationData[restorationIdentifier] || {};\n    }\n    updateRestorationData(additionalData) {\n        const { restorationIdentifier } = this;\n        const restorationData = this.restorationData[restorationIdentifier];\n        this.restorationData[restorationIdentifier] = Object.assign(Object.assign({}, restorationData), additionalData);\n    }\n    assumeControlOfScrollRestoration() {\n        var _a;\n        if (!this.previousScrollRestoration) {\n            this.previousScrollRestoration = (_a = history.scrollRestoration) !== null && _a !== void 0 ? _a : \"auto\";\n            history.scrollRestoration = \"manual\";\n        }\n    }\n    relinquishControlOfScrollRestoration() {\n        if (this.previousScrollRestoration) {\n            history.scrollRestoration = this.previousScrollRestoration;\n            delete this.previousScrollRestoration;\n        }\n    }\n    shouldHandlePopState() {\n        return this.pageIsLoaded();\n    }\n    pageIsLoaded() {\n        return this.pageLoaded || document.readyState == \"complete\";\n    }\n}\n\nclass Navigator {\n    constructor(delegate) {\n        this.delegate = delegate;\n    }\n    proposeVisit(location, options = {}) {\n        if (this.delegate.allowsVisitingLocationWithAction(location, options.action)) {\n            if (locationIsVisitable(location, this.view.snapshot.rootLocation)) {\n                this.delegate.visitProposedToLocation(location, options);\n            }\n            else {\n                window.location.href = location.toString();\n            }\n        }\n    }\n    startVisit(locatable, restorationIdentifier, options = {}) {\n        this.stop();\n        this.currentVisit = new Visit(this, expandURL(locatable), restorationIdentifier, Object.assign({ referrer: this.location }, options));\n        this.currentVisit.start();\n    }\n    submitForm(form, submitter) {\n        this.stop();\n        this.formSubmission = new FormSubmission(this, form, submitter, true);\n        this.formSubmission.start();\n    }\n    stop() {\n        if (this.formSubmission) {\n            this.formSubmission.stop();\n            delete this.formSubmission;\n        }\n        if (this.currentVisit) {\n            this.currentVisit.cancel();\n            delete this.currentVisit;\n        }\n    }\n    get adapter() {\n        return this.delegate.adapter;\n    }\n    get view() {\n        return this.delegate.view;\n    }\n    get history() {\n        return this.delegate.history;\n    }\n    formSubmissionStarted(formSubmission) {\n        if (typeof this.adapter.formSubmissionStarted === \"function\") {\n            this.adapter.formSubmissionStarted(formSubmission);\n        }\n    }\n    async formSubmissionSucceededWithResponse(formSubmission, fetchResponse) {\n        if (formSubmission == this.formSubmission) {\n            const responseHTML = await fetchResponse.responseHTML;\n            if (responseHTML) {\n                const shouldCacheSnapshot = formSubmission.isSafe;\n                if (!shouldCacheSnapshot) {\n                    this.view.clearSnapshotCache();\n                }\n                const { statusCode, redirected } = fetchResponse;\n                const action = this.getActionForFormSubmission(formSubmission);\n                const visitOptions = {\n                    action,\n                    shouldCacheSnapshot,\n                    response: { statusCode, responseHTML, redirected },\n                };\n                this.proposeVisit(fetchResponse.location, visitOptions);\n            }\n        }\n    }\n    async formSubmissionFailedWithResponse(formSubmission, fetchResponse) {\n        const responseHTML = await fetchResponse.responseHTML;\n        if (responseHTML) {\n            const snapshot = PageSnapshot.fromHTMLString(responseHTML);\n            if (fetchResponse.serverError) {\n                await this.view.renderError(snapshot, this.currentVisit);\n            }\n            else {\n                await this.view.renderPage(snapshot, false, true, this.currentVisit);\n            }\n            this.view.scrollToTop();\n            this.view.clearSnapshotCache();\n        }\n    }\n    formSubmissionErrored(formSubmission, error) {\n        console.error(error);\n    }\n    formSubmissionFinished(formSubmission) {\n        if (typeof this.adapter.formSubmissionFinished === \"function\") {\n            this.adapter.formSubmissionFinished(formSubmission);\n        }\n    }\n    visitStarted(visit) {\n        this.delegate.visitStarted(visit);\n    }\n    visitCompleted(visit) {\n        this.delegate.visitCompleted(visit);\n    }\n    locationWithActionIsSamePage(location, action) {\n        const anchor = getAnchor(location);\n        const currentAnchor = getAnchor(this.view.lastRenderedLocation);\n        const isRestorationToTop = action === \"restore\" && typeof anchor === \"undefined\";\n        return (action !== \"replace\" &&\n            getRequestURL(location) === getRequestURL(this.view.lastRenderedLocation) &&\n            (isRestorationToTop || (anchor != null && anchor !== currentAnchor)));\n    }\n    visitScrolledToSamePageLocation(oldURL, newURL) {\n        this.delegate.visitScrolledToSamePageLocation(oldURL, newURL);\n    }\n    get location() {\n        return this.history.location;\n    }\n    get restorationIdentifier() {\n        return this.history.restorationIdentifier;\n    }\n    getActionForFormSubmission({ submitter, formElement }) {\n        return getVisitAction(submitter, formElement) || \"advance\";\n    }\n}\n\nvar PageStage;\n(function (PageStage) {\n    PageStage[PageStage[\"initial\"] = 0] = \"initial\";\n    PageStage[PageStage[\"loading\"] = 1] = \"loading\";\n    PageStage[PageStage[\"interactive\"] = 2] = \"interactive\";\n    PageStage[PageStage[\"complete\"] = 3] = \"complete\";\n})(PageStage || (PageStage = {}));\nclass PageObserver {\n    constructor(delegate) {\n        this.stage = PageStage.initial;\n        this.started = false;\n        this.interpretReadyState = () => {\n            const { readyState } = this;\n            if (readyState == \"interactive\") {\n                this.pageIsInteractive();\n            }\n            else if (readyState == \"complete\") {\n                this.pageIsComplete();\n            }\n        };\n        this.pageWillUnload = () => {\n            this.delegate.pageWillUnload();\n        };\n        this.delegate = delegate;\n    }\n    start() {\n        if (!this.started) {\n            if (this.stage == PageStage.initial) {\n                this.stage = PageStage.loading;\n            }\n            document.addEventListener(\"readystatechange\", this.interpretReadyState, false);\n            addEventListener(\"pagehide\", this.pageWillUnload, false);\n            this.started = true;\n        }\n    }\n    stop() {\n        if (this.started) {\n            document.removeEventListener(\"readystatechange\", this.interpretReadyState, false);\n            removeEventListener(\"pagehide\", this.pageWillUnload, false);\n            this.started = false;\n        }\n    }\n    pageIsInteractive() {\n        if (this.stage == PageStage.loading) {\n            this.stage = PageStage.interactive;\n            this.delegate.pageBecameInteractive();\n        }\n    }\n    pageIsComplete() {\n        this.pageIsInteractive();\n        if (this.stage == PageStage.interactive) {\n            this.stage = PageStage.complete;\n            this.delegate.pageLoaded();\n        }\n    }\n    get readyState() {\n        return document.readyState;\n    }\n}\n\nclass ScrollObserver {\n    constructor(delegate) {\n        this.started = false;\n        this.onScroll = () => {\n            this.updatePosition({ x: window.pageXOffset, y: window.pageYOffset });\n        };\n        this.delegate = delegate;\n    }\n    start() {\n        if (!this.started) {\n            addEventListener(\"scroll\", this.onScroll, false);\n            this.onScroll();\n            this.started = true;\n        }\n    }\n    stop() {\n        if (this.started) {\n            removeEventListener(\"scroll\", this.onScroll, false);\n            this.started = false;\n        }\n    }\n    updatePosition(position) {\n        this.delegate.scrollPositionChanged(position);\n    }\n}\n\nclass StreamMessageRenderer {\n    render({ fragment }) {\n        Bardo.preservingPermanentElements(this, getPermanentElementMapForFragment(fragment), () => document.documentElement.appendChild(fragment));\n    }\n    enteringBardo(currentPermanentElement, newPermanentElement) {\n        newPermanentElement.replaceWith(currentPermanentElement.cloneNode(true));\n    }\n    leavingBardo() { }\n}\nfunction getPermanentElementMapForFragment(fragment) {\n    const permanentElementsInDocument = queryPermanentElementsAll(document.documentElement);\n    const permanentElementMap = {};\n    for (const permanentElementInDocument of permanentElementsInDocument) {\n        const { id } = permanentElementInDocument;\n        for (const streamElement of fragment.querySelectorAll(\"turbo-stream\")) {\n            const elementInStream = getPermanentElementById(streamElement.templateElement.content, id);\n            if (elementInStream) {\n                permanentElementMap[id] = [permanentElementInDocument, elementInStream];\n            }\n        }\n    }\n    return permanentElementMap;\n}\n\nclass StreamObserver {\n    constructor(delegate) {\n        this.sources = new Set();\n        this.started = false;\n        this.inspectFetchResponse = ((event) => {\n            const response = fetchResponseFromEvent(event);\n            if (response && fetchResponseIsStream(response)) {\n                event.preventDefault();\n                this.receiveMessageResponse(response);\n            }\n        });\n        this.receiveMessageEvent = (event) => {\n            if (this.started && typeof event.data == \"string\") {\n                this.receiveMessageHTML(event.data);\n            }\n        };\n        this.delegate = delegate;\n    }\n    start() {\n        if (!this.started) {\n            this.started = true;\n            addEventListener(\"turbo:before-fetch-response\", this.inspectFetchResponse, false);\n        }\n    }\n    stop() {\n        if (this.started) {\n            this.started = false;\n            removeEventListener(\"turbo:before-fetch-response\", this.inspectFetchResponse, false);\n        }\n    }\n    connectStreamSource(source) {\n        if (!this.streamSourceIsConnected(source)) {\n            this.sources.add(source);\n            source.addEventListener(\"message\", this.receiveMessageEvent, false);\n        }\n    }\n    disconnectStreamSource(source) {\n        if (this.streamSourceIsConnected(source)) {\n            this.sources.delete(source);\n            source.removeEventListener(\"message\", this.receiveMessageEvent, false);\n        }\n    }\n    streamSourceIsConnected(source) {\n        return this.sources.has(source);\n    }\n    async receiveMessageResponse(response) {\n        const html = await response.responseHTML;\n        if (html) {\n            this.receiveMessageHTML(html);\n        }\n    }\n    receiveMessageHTML(html) {\n        this.delegate.receivedMessageFromStream(StreamMessage.wrap(html));\n    }\n}\nfunction fetchResponseFromEvent(event) {\n    var _a;\n    const fetchResponse = (_a = event.detail) === null || _a === void 0 ? void 0 : _a.fetchResponse;\n    if (fetchResponse instanceof FetchResponse) {\n        return fetchResponse;\n    }\n}\nfunction fetchResponseIsStream(response) {\n    var _a;\n    const contentType = (_a = response.contentType) !== null && _a !== void 0 ? _a : \"\";\n    return contentType.startsWith(StreamMessage.contentType);\n}\n\nclass ErrorRenderer extends Renderer {\n    static renderElement(currentElement, newElement) {\n        const { documentElement, body } = document;\n        documentElement.replaceChild(newElement, body);\n    }\n    async render() {\n        this.replaceHeadAndBody();\n        this.activateScriptElements();\n    }\n    replaceHeadAndBody() {\n        const { documentElement, head } = document;\n        documentElement.replaceChild(this.newHead, head);\n        this.renderElement(this.currentElement, this.newElement);\n    }\n    activateScriptElements() {\n        for (const replaceableElement of this.scriptElements) {\n            const parentNode = replaceableElement.parentNode;\n            if (parentNode) {\n                const element = activateScriptElement(replaceableElement);\n                parentNode.replaceChild(element, replaceableElement);\n            }\n        }\n    }\n    get newHead() {\n        return this.newSnapshot.headSnapshot.element;\n    }\n    get scriptElements() {\n        return document.documentElement.querySelectorAll(\"script\");\n    }\n}\n\nclass PageRenderer extends Renderer {\n    static renderElement(currentElement, newElement) {\n        if (document.body && newElement instanceof HTMLBodyElement) {\n            document.body.replaceWith(newElement);\n        }\n        else {\n            document.documentElement.appendChild(newElement);\n        }\n    }\n    get shouldRender() {\n        return this.newSnapshot.isVisitable && this.trackedElementsAreIdentical;\n    }\n    get reloadReason() {\n        if (!this.newSnapshot.isVisitable) {\n            return {\n                reason: \"turbo_visit_control_is_reload\",\n            };\n        }\n        if (!this.trackedElementsAreIdentical) {\n            return {\n                reason: \"tracked_element_mismatch\",\n            };\n        }\n    }\n    async prepareToRender() {\n        await this.mergeHead();\n    }\n    async render() {\n        if (this.willRender) {\n            await this.replaceBody();\n        }\n    }\n    finishRendering() {\n        super.finishRendering();\n        if (!this.isPreview) {\n            this.focusFirstAutofocusableElement();\n        }\n    }\n    get currentHeadSnapshot() {\n        return this.currentSnapshot.headSnapshot;\n    }\n    get newHeadSnapshot() {\n        return this.newSnapshot.headSnapshot;\n    }\n    get newElement() {\n        return this.newSnapshot.element;\n    }\n    async mergeHead() {\n        const mergedHeadElements = this.mergeProvisionalElements();\n        const newStylesheetElements = this.copyNewHeadStylesheetElements();\n        this.copyNewHeadScriptElements();\n        await mergedHeadElements;\n        await newStylesheetElements;\n    }\n    async replaceBody() {\n        await this.preservingPermanentElements(async () => {\n            this.activateNewBody();\n            await this.assignNewBody();\n        });\n    }\n    get trackedElementsAreIdentical() {\n        return this.currentHeadSnapshot.trackedElementSignature == this.newHeadSnapshot.trackedElementSignature;\n    }\n    async copyNewHeadStylesheetElements() {\n        const loadingElements = [];\n        for (const element of this.newHeadStylesheetElements) {\n            loadingElements.push(waitForLoad(element));\n            document.head.appendChild(element);\n        }\n        await Promise.all(loadingElements);\n    }\n    copyNewHeadScriptElements() {\n        for (const element of this.newHeadScriptElements) {\n            document.head.appendChild(activateScriptElement(element));\n        }\n    }\n    async mergeProvisionalElements() {\n        const newHeadElements = [...this.newHeadProvisionalElements];\n        for (const element of this.currentHeadProvisionalElements) {\n            if (!this.isCurrentElementInElementList(element, newHeadElements)) {\n                document.head.removeChild(element);\n            }\n        }\n        for (const element of newHeadElements) {\n            document.head.appendChild(element);\n        }\n    }\n    isCurrentElementInElementList(element, elementList) {\n        for (const [index, newElement] of elementList.entries()) {\n            if (element.tagName == \"TITLE\") {\n                if (newElement.tagName != \"TITLE\") {\n                    continue;\n                }\n                if (element.innerHTML == newElement.innerHTML) {\n                    elementList.splice(index, 1);\n                    return true;\n                }\n            }\n            if (newElement.isEqualNode(element)) {\n                elementList.splice(index, 1);\n                return true;\n            }\n        }\n        return false;\n    }\n    removeCurrentHeadProvisionalElements() {\n        for (const element of this.currentHeadProvisionalElements) {\n            document.head.removeChild(element);\n        }\n    }\n    copyNewHeadProvisionalElements() {\n        for (const element of this.newHeadProvisionalElements) {\n            document.head.appendChild(element);\n        }\n    }\n    activateNewBody() {\n        document.adoptNode(this.newElement);\n        this.activateNewBodyScriptElements();\n    }\n    activateNewBodyScriptElements() {\n        for (const inertScriptElement of this.newBodyScriptElements) {\n            const activatedScriptElement = activateScriptElement(inertScriptElement);\n            inertScriptElement.replaceWith(activatedScriptElement);\n        }\n    }\n    async assignNewBody() {\n        await this.renderElement(this.currentElement, this.newElement);\n    }\n    get newHeadStylesheetElements() {\n        return this.newHeadSnapshot.getStylesheetElementsNotInSnapshot(this.currentHeadSnapshot);\n    }\n    get newHeadScriptElements() {\n        return this.newHeadSnapshot.getScriptElementsNotInSnapshot(this.currentHeadSnapshot);\n    }\n    get currentHeadProvisionalElements() {\n        return this.currentHeadSnapshot.provisionalElements;\n    }\n    get newHeadProvisionalElements() {\n        return this.newHeadSnapshot.provisionalElements;\n    }\n    get newBodyScriptElements() {\n        return this.newElement.querySelectorAll(\"script\");\n    }\n}\n\nclass SnapshotCache {\n    constructor(size) {\n        this.keys = [];\n        this.snapshots = {};\n        this.size = size;\n    }\n    has(location) {\n        return toCacheKey(location) in this.snapshots;\n    }\n    get(location) {\n        if (this.has(location)) {\n            const snapshot = this.read(location);\n            this.touch(location);\n            return snapshot;\n        }\n    }\n    put(location, snapshot) {\n        this.write(location, snapshot);\n        this.touch(location);\n        return snapshot;\n    }\n    clear() {\n        this.snapshots = {};\n    }\n    read(location) {\n        return this.snapshots[toCacheKey(location)];\n    }\n    write(location, snapshot) {\n        this.snapshots[toCacheKey(location)] = snapshot;\n    }\n    touch(location) {\n        const key = toCacheKey(location);\n        const index = this.keys.indexOf(key);\n        if (index > -1)\n            this.keys.splice(index, 1);\n        this.keys.unshift(key);\n        this.trim();\n    }\n    trim() {\n        for (const key of this.keys.splice(this.size)) {\n            delete this.snapshots[key];\n        }\n    }\n}\n\nclass PageView extends View {\n    constructor() {\n        super(...arguments);\n        this.snapshotCache = new SnapshotCache(10);\n        this.lastRenderedLocation = new URL(location.href);\n        this.forceReloaded = false;\n    }\n    renderPage(snapshot, isPreview = false, willRender = true, visit) {\n        const renderer = new PageRenderer(this.snapshot, snapshot, PageRenderer.renderElement, isPreview, willRender);\n        if (!renderer.shouldRender) {\n            this.forceReloaded = true;\n        }\n        else {\n            visit === null || visit === void 0 ? void 0 : visit.changeHistory();\n        }\n        return this.render(renderer);\n    }\n    renderError(snapshot, visit) {\n        visit === null || visit === void 0 ? void 0 : visit.changeHistory();\n        const renderer = new ErrorRenderer(this.snapshot, snapshot, ErrorRenderer.renderElement, false);\n        return this.render(renderer);\n    }\n    clearSnapshotCache() {\n        this.snapshotCache.clear();\n    }\n    async cacheSnapshot(snapshot = this.snapshot) {\n        if (snapshot.isCacheable) {\n            this.delegate.viewWillCacheSnapshot();\n            const { lastRenderedLocation: location } = this;\n            await nextEventLoopTick();\n            const cachedSnapshot = snapshot.clone();\n            this.snapshotCache.put(location, cachedSnapshot);\n            return cachedSnapshot;\n        }\n    }\n    getCachedSnapshotForLocation(location) {\n        return this.snapshotCache.get(location);\n    }\n    get snapshot() {\n        return PageSnapshot.fromElement(this.element);\n    }\n}\n\nclass Preloader {\n    constructor(delegate) {\n        this.selector = \"a[data-turbo-preload]\";\n        this.delegate = delegate;\n    }\n    get snapshotCache() {\n        return this.delegate.navigator.view.snapshotCache;\n    }\n    start() {\n        if (document.readyState === \"loading\") {\n            return document.addEventListener(\"DOMContentLoaded\", () => {\n                this.preloadOnLoadLinksForView(document.body);\n            });\n        }\n        else {\n            this.preloadOnLoadLinksForView(document.body);\n        }\n    }\n    preloadOnLoadLinksForView(element) {\n        for (const link of element.querySelectorAll(this.selector)) {\n            this.preloadURL(link);\n        }\n    }\n    async preloadURL(link) {\n        const location = new URL(link.href);\n        if (this.snapshotCache.has(location)) {\n            return;\n        }\n        try {\n            const response = await fetch(location.toString(), { headers: { \"VND.PREFETCH\": \"true\", Accept: \"text/html\" } });\n            const responseText = await response.text();\n            const snapshot = PageSnapshot.fromHTMLString(responseText);\n            this.snapshotCache.put(location, snapshot);\n        }\n        catch (_) {\n        }\n    }\n}\n\nclass Session {\n    constructor() {\n        this.navigator = new Navigator(this);\n        this.history = new History(this);\n        this.preloader = new Preloader(this);\n        this.view = new PageView(this, document.documentElement);\n        this.adapter = new BrowserAdapter(this);\n        this.pageObserver = new PageObserver(this);\n        this.cacheObserver = new CacheObserver();\n        this.linkClickObserver = new LinkClickObserver(this, window);\n        this.formSubmitObserver = new FormSubmitObserver(this, document);\n        this.scrollObserver = new ScrollObserver(this);\n        this.streamObserver = new StreamObserver(this);\n        this.formLinkClickObserver = new FormLinkClickObserver(this, document.documentElement);\n        this.frameRedirector = new FrameRedirector(this, document.documentElement);\n        this.streamMessageRenderer = new StreamMessageRenderer();\n        this.drive = true;\n        this.enabled = true;\n        this.progressBarDelay = 500;\n        this.started = false;\n        this.formMode = \"on\";\n    }\n    start() {\n        if (!this.started) {\n            this.pageObserver.start();\n            this.cacheObserver.start();\n            this.formLinkClickObserver.start();\n            this.linkClickObserver.start();\n            this.formSubmitObserver.start();\n            this.scrollObserver.start();\n            this.streamObserver.start();\n            this.frameRedirector.start();\n            this.history.start();\n            this.preloader.start();\n            this.started = true;\n            this.enabled = true;\n        }\n    }\n    disable() {\n        this.enabled = false;\n    }\n    stop() {\n        if (this.started) {\n            this.pageObserver.stop();\n            this.cacheObserver.stop();\n            this.formLinkClickObserver.stop();\n            this.linkClickObserver.stop();\n            this.formSubmitObserver.stop();\n            this.scrollObserver.stop();\n            this.streamObserver.stop();\n            this.frameRedirector.stop();\n            this.history.stop();\n            this.started = false;\n        }\n    }\n    registerAdapter(adapter) {\n        this.adapter = adapter;\n    }\n    visit(location, options = {}) {\n        const frameElement = options.frame ? document.getElementById(options.frame) : null;\n        if (frameElement instanceof FrameElement) {\n            frameElement.src = location.toString();\n            frameElement.loaded;\n        }\n        else {\n            this.navigator.proposeVisit(expandURL(location), options);\n        }\n    }\n    connectStreamSource(source) {\n        this.streamObserver.connectStreamSource(source);\n    }\n    disconnectStreamSource(source) {\n        this.streamObserver.disconnectStreamSource(source);\n    }\n    renderStreamMessage(message) {\n        this.streamMessageRenderer.render(StreamMessage.wrap(message));\n    }\n    clearCache() {\n        this.view.clearSnapshotCache();\n    }\n    setProgressBarDelay(delay) {\n        this.progressBarDelay = delay;\n    }\n    setFormMode(mode) {\n        this.formMode = mode;\n    }\n    get location() {\n        return this.history.location;\n    }\n    get restorationIdentifier() {\n        return this.history.restorationIdentifier;\n    }\n    historyPoppedToLocationWithRestorationIdentifier(location, restorationIdentifier) {\n        if (this.enabled) {\n            this.navigator.startVisit(location, restorationIdentifier, {\n                action: \"restore\",\n                historyChanged: true,\n            });\n        }\n        else {\n            this.adapter.pageInvalidated({\n                reason: \"turbo_disabled\",\n            });\n        }\n    }\n    scrollPositionChanged(position) {\n        this.history.updateRestorationData({ scrollPosition: position });\n    }\n    willSubmitFormLinkToLocation(link, location) {\n        return this.elementIsNavigatable(link) && locationIsVisitable(location, this.snapshot.rootLocation);\n    }\n    submittedFormLinkToLocation() { }\n    willFollowLinkToLocation(link, location, event) {\n        return (this.elementIsNavigatable(link) &&\n            locationIsVisitable(location, this.snapshot.rootLocation) &&\n            this.applicationAllowsFollowingLinkToLocation(link, location, event));\n    }\n    followedLinkToLocation(link, location) {\n        const action = this.getActionForLink(link);\n        const acceptsStreamResponse = link.hasAttribute(\"data-turbo-stream\");\n        this.visit(location.href, { action, acceptsStreamResponse });\n    }\n    allowsVisitingLocationWithAction(location, action) {\n        return this.locationWithActionIsSamePage(location, action) || this.applicationAllowsVisitingLocation(location);\n    }\n    visitProposedToLocation(location, options) {\n        extendURLWithDeprecatedProperties(location);\n        this.adapter.visitProposedToLocation(location, options);\n    }\n    visitStarted(visit) {\n        if (!visit.acceptsStreamResponse) {\n            markAsBusy(document.documentElement);\n        }\n        extendURLWithDeprecatedProperties(visit.location);\n        if (!visit.silent) {\n            this.notifyApplicationAfterVisitingLocation(visit.location, visit.action);\n        }\n    }\n    visitCompleted(visit) {\n        clearBusyState(document.documentElement);\n        this.notifyApplicationAfterPageLoad(visit.getTimingMetrics());\n    }\n    locationWithActionIsSamePage(location, action) {\n        return this.navigator.locationWithActionIsSamePage(location, action);\n    }\n    visitScrolledToSamePageLocation(oldURL, newURL) {\n        this.notifyApplicationAfterVisitingSamePageLocation(oldURL, newURL);\n    }\n    willSubmitForm(form, submitter) {\n        const action = getAction(form, submitter);\n        return (this.submissionIsNavigatable(form, submitter) &&\n            locationIsVisitable(expandURL(action), this.snapshot.rootLocation));\n    }\n    formSubmitted(form, submitter) {\n        this.navigator.submitForm(form, submitter);\n    }\n    pageBecameInteractive() {\n        this.view.lastRenderedLocation = this.location;\n        this.notifyApplicationAfterPageLoad();\n    }\n    pageLoaded() {\n        this.history.assumeControlOfScrollRestoration();\n    }\n    pageWillUnload() {\n        this.history.relinquishControlOfScrollRestoration();\n    }\n    receivedMessageFromStream(message) {\n        this.renderStreamMessage(message);\n    }\n    viewWillCacheSnapshot() {\n        var _a;\n        if (!((_a = this.navigator.currentVisit) === null || _a === void 0 ? void 0 : _a.silent)) {\n            this.notifyApplicationBeforeCachingSnapshot();\n        }\n    }\n    allowsImmediateRender({ element }, options) {\n        const event = this.notifyApplicationBeforeRender(element, options);\n        const { defaultPrevented, detail: { render }, } = event;\n        if (this.view.renderer && render) {\n            this.view.renderer.renderElement = render;\n        }\n        return !defaultPrevented;\n    }\n    viewRenderedSnapshot(_snapshot, _isPreview) {\n        this.view.lastRenderedLocation = this.history.location;\n        this.notifyApplicationAfterRender();\n    }\n    preloadOnLoadLinksForView(element) {\n        this.preloader.preloadOnLoadLinksForView(element);\n    }\n    viewInvalidated(reason) {\n        this.adapter.pageInvalidated(reason);\n    }\n    frameLoaded(frame) {\n        this.notifyApplicationAfterFrameLoad(frame);\n    }\n    frameRendered(fetchResponse, frame) {\n        this.notifyApplicationAfterFrameRender(fetchResponse, frame);\n    }\n    applicationAllowsFollowingLinkToLocation(link, location, ev) {\n        const event = this.notifyApplicationAfterClickingLinkToLocation(link, location, ev);\n        return !event.defaultPrevented;\n    }\n    applicationAllowsVisitingLocation(location) {\n        const event = this.notifyApplicationBeforeVisitingLocation(location);\n        return !event.defaultPrevented;\n    }\n    notifyApplicationAfterClickingLinkToLocation(link, location, event) {\n        return dispatch(\"turbo:click\", {\n            target: link,\n            detail: { url: location.href, originalEvent: event },\n            cancelable: true,\n        });\n    }\n    notifyApplicationBeforeVisitingLocation(location) {\n        return dispatch(\"turbo:before-visit\", {\n            detail: { url: location.href },\n            cancelable: true,\n        });\n    }\n    notifyApplicationAfterVisitingLocation(location, action) {\n        return dispatch(\"turbo:visit\", { detail: { url: location.href, action } });\n    }\n    notifyApplicationBeforeCachingSnapshot() {\n        return dispatch(\"turbo:before-cache\");\n    }\n    notifyApplicationBeforeRender(newBody, options) {\n        return dispatch(\"turbo:before-render\", {\n            detail: Object.assign({ newBody }, options),\n            cancelable: true,\n        });\n    }\n    notifyApplicationAfterRender() {\n        return dispatch(\"turbo:render\");\n    }\n    notifyApplicationAfterPageLoad(timing = {}) {\n        return dispatch(\"turbo:load\", {\n            detail: { url: this.location.href, timing },\n        });\n    }\n    notifyApplicationAfterVisitingSamePageLocation(oldURL, newURL) {\n        dispatchEvent(new HashChangeEvent(\"hashchange\", {\n            oldURL: oldURL.toString(),\n            newURL: newURL.toString(),\n        }));\n    }\n    notifyApplicationAfterFrameLoad(frame) {\n        return dispatch(\"turbo:frame-load\", { target: frame });\n    }\n    notifyApplicationAfterFrameRender(fetchResponse, frame) {\n        return dispatch(\"turbo:frame-render\", {\n            detail: { fetchResponse },\n            target: frame,\n            cancelable: true,\n        });\n    }\n    submissionIsNavigatable(form, submitter) {\n        if (this.formMode == \"off\") {\n            return false;\n        }\n        else {\n            const submitterIsNavigatable = submitter ? this.elementIsNavigatable(submitter) : true;\n            if (this.formMode == \"optin\") {\n                return submitterIsNavigatable && form.closest('[data-turbo=\"true\"]') != null;\n            }\n            else {\n                return submitterIsNavigatable && this.elementIsNavigatable(form);\n            }\n        }\n    }\n    elementIsNavigatable(element) {\n        const container = findClosestRecursively(element, \"[data-turbo]\");\n        const withinFrame = findClosestRecursively(element, \"turbo-frame\");\n        if (this.drive || withinFrame) {\n            if (container) {\n                return container.getAttribute(\"data-turbo\") != \"false\";\n            }\n            else {\n                return true;\n            }\n        }\n        else {\n            if (container) {\n                return container.getAttribute(\"data-turbo\") == \"true\";\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    getActionForLink(link) {\n        return getVisitAction(link) || \"advance\";\n    }\n    get snapshot() {\n        return this.view.snapshot;\n    }\n}\nfunction extendURLWithDeprecatedProperties(url) {\n    Object.defineProperties(url, deprecatedLocationPropertyDescriptors);\n}\nconst deprecatedLocationPropertyDescriptors = {\n    absoluteURL: {\n        get() {\n            return this.toString();\n        },\n    },\n};\n\nclass Cache {\n    constructor(session) {\n        this.session = session;\n    }\n    clear() {\n        this.session.clearCache();\n    }\n    resetCacheControl() {\n        this.setCacheControl(\"\");\n    }\n    exemptPageFromCache() {\n        this.setCacheControl(\"no-cache\");\n    }\n    exemptPageFromPreview() {\n        this.setCacheControl(\"no-preview\");\n    }\n    setCacheControl(value) {\n        setMetaContent(\"turbo-cache-control\", value);\n    }\n}\n\nconst StreamActions = {\n    after() {\n        this.targetElements.forEach((e) => { var _a; return (_a = e.parentElement) === null || _a === void 0 ? void 0 : _a.insertBefore(this.templateContent, e.nextSibling); });\n    },\n    append() {\n        this.removeDuplicateTargetChildren();\n        this.targetElements.forEach((e) => e.append(this.templateContent));\n    },\n    before() {\n        this.targetElements.forEach((e) => { var _a; return (_a = e.parentElement) === null || _a === void 0 ? void 0 : _a.insertBefore(this.templateContent, e); });\n    },\n    prepend() {\n        this.removeDuplicateTargetChildren();\n        this.targetElements.forEach((e) => e.prepend(this.templateContent));\n    },\n    remove() {\n        this.targetElements.forEach((e) => e.remove());\n    },\n    replace() {\n        this.targetElements.forEach((e) => e.replaceWith(this.templateContent));\n    },\n    update() {\n        this.targetElements.forEach((targetElement) => {\n            targetElement.innerHTML = \"\";\n            targetElement.append(this.templateContent);\n        });\n    },\n};\n\nconst session = new Session();\nconst cache = new Cache(session);\nconst { navigator: navigator$1 } = session;\nfunction start() {\n    session.start();\n}\nfunction registerAdapter(adapter) {\n    session.registerAdapter(adapter);\n}\nfunction visit(location, options) {\n    session.visit(location, options);\n}\nfunction connectStreamSource(source) {\n    session.connectStreamSource(source);\n}\nfunction disconnectStreamSource(source) {\n    session.disconnectStreamSource(source);\n}\nfunction renderStreamMessage(message) {\n    session.renderStreamMessage(message);\n}\nfunction clearCache() {\n    console.warn(\"Please replace `Turbo.clearCache()` with `Turbo.cache.clear()`. The top-level function is deprecated and will be removed in a future version of Turbo.`\");\n    session.clearCache();\n}\nfunction setProgressBarDelay(delay) {\n    session.setProgressBarDelay(delay);\n}\nfunction setConfirmMethod(confirmMethod) {\n    FormSubmission.confirmMethod = confirmMethod;\n}\nfunction setFormMode(mode) {\n    session.setFormMode(mode);\n}\n\nvar Turbo = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    navigator: navigator$1,\n    session: session,\n    cache: cache,\n    PageRenderer: PageRenderer,\n    PageSnapshot: PageSnapshot,\n    FrameRenderer: FrameRenderer,\n    start: start,\n    registerAdapter: registerAdapter,\n    visit: visit,\n    connectStreamSource: connectStreamSource,\n    disconnectStreamSource: disconnectStreamSource,\n    renderStreamMessage: renderStreamMessage,\n    clearCache: clearCache,\n    setProgressBarDelay: setProgressBarDelay,\n    setConfirmMethod: setConfirmMethod,\n    setFormMode: setFormMode,\n    StreamActions: StreamActions\n});\n\nclass TurboFrameMissingError extends Error {\n}\n\nclass FrameController {\n    constructor(element) {\n        this.fetchResponseLoaded = (_fetchResponse) => { };\n        this.currentFetchRequest = null;\n        this.resolveVisitPromise = () => { };\n        this.connected = false;\n        this.hasBeenLoaded = false;\n        this.ignoredAttributes = new Set();\n        this.action = null;\n        this.visitCachedSnapshot = ({ element }) => {\n            const frame = element.querySelector(\"#\" + this.element.id);\n            if (frame && this.previousFrameElement) {\n                frame.replaceChildren(...this.previousFrameElement.children);\n            }\n            delete this.previousFrameElement;\n        };\n        this.element = element;\n        this.view = new FrameView(this, this.element);\n        this.appearanceObserver = new AppearanceObserver(this, this.element);\n        this.formLinkClickObserver = new FormLinkClickObserver(this, this.element);\n        this.linkInterceptor = new LinkInterceptor(this, this.element);\n        this.restorationIdentifier = uuid();\n        this.formSubmitObserver = new FormSubmitObserver(this, this.element);\n    }\n    connect() {\n        if (!this.connected) {\n            this.connected = true;\n            if (this.loadingStyle == FrameLoadingStyle.lazy) {\n                this.appearanceObserver.start();\n            }\n            else {\n                this.loadSourceURL();\n            }\n            this.formLinkClickObserver.start();\n            this.linkInterceptor.start();\n            this.formSubmitObserver.start();\n        }\n    }\n    disconnect() {\n        if (this.connected) {\n            this.connected = false;\n            this.appearanceObserver.stop();\n            this.formLinkClickObserver.stop();\n            this.linkInterceptor.stop();\n            this.formSubmitObserver.stop();\n        }\n    }\n    disabledChanged() {\n        if (this.loadingStyle == FrameLoadingStyle.eager) {\n            this.loadSourceURL();\n        }\n    }\n    sourceURLChanged() {\n        if (this.isIgnoringChangesTo(\"src\"))\n            return;\n        if (this.element.isConnected) {\n            this.complete = false;\n        }\n        if (this.loadingStyle == FrameLoadingStyle.eager || this.hasBeenLoaded) {\n            this.loadSourceURL();\n        }\n    }\n    sourceURLReloaded() {\n        const { src } = this.element;\n        this.ignoringChangesToAttribute(\"complete\", () => {\n            this.element.removeAttribute(\"complete\");\n        });\n        this.element.src = null;\n        this.element.src = src;\n        return this.element.loaded;\n    }\n    completeChanged() {\n        if (this.isIgnoringChangesTo(\"complete\"))\n            return;\n        this.loadSourceURL();\n    }\n    loadingStyleChanged() {\n        if (this.loadingStyle == FrameLoadingStyle.lazy) {\n            this.appearanceObserver.start();\n        }\n        else {\n            this.appearanceObserver.stop();\n            this.loadSourceURL();\n        }\n    }\n    async loadSourceURL() {\n        if (this.enabled && this.isActive && !this.complete && this.sourceURL) {\n            this.element.loaded = this.visit(expandURL(this.sourceURL));\n            this.appearanceObserver.stop();\n            await this.element.loaded;\n            this.hasBeenLoaded = true;\n        }\n    }\n    async loadResponse(fetchResponse) {\n        if (fetchResponse.redirected || (fetchResponse.succeeded && fetchResponse.isHTML)) {\n            this.sourceURL = fetchResponse.response.url;\n        }\n        try {\n            const html = await fetchResponse.responseHTML;\n            if (html) {\n                const document = parseHTMLDocument(html);\n                const pageSnapshot = PageSnapshot.fromDocument(document);\n                if (pageSnapshot.isVisitable) {\n                    await this.loadFrameResponse(fetchResponse, document);\n                }\n                else {\n                    await this.handleUnvisitableFrameResponse(fetchResponse);\n                }\n            }\n        }\n        finally {\n            this.fetchResponseLoaded = () => { };\n        }\n    }\n    elementAppearedInViewport(element) {\n        this.proposeVisitIfNavigatedWithAction(element, element);\n        this.loadSourceURL();\n    }\n    willSubmitFormLinkToLocation(link) {\n        return this.shouldInterceptNavigation(link);\n    }\n    submittedFormLinkToLocation(link, _location, form) {\n        const frame = this.findFrameElement(link);\n        if (frame)\n            form.setAttribute(\"data-turbo-frame\", frame.id);\n    }\n    shouldInterceptLinkClick(element, _location, _event) {\n        return this.shouldInterceptNavigation(element);\n    }\n    linkClickIntercepted(element, location) {\n        this.navigateFrame(element, location);\n    }\n    willSubmitForm(element, submitter) {\n        return element.closest(\"turbo-frame\") == this.element && this.shouldInterceptNavigation(element, submitter);\n    }\n    formSubmitted(element, submitter) {\n        if (this.formSubmission) {\n            this.formSubmission.stop();\n        }\n        this.formSubmission = new FormSubmission(this, element, submitter);\n        const { fetchRequest } = this.formSubmission;\n        this.prepareRequest(fetchRequest);\n        this.formSubmission.start();\n    }\n    prepareRequest(request) {\n        var _a;\n        request.headers[\"Turbo-Frame\"] = this.id;\n        if ((_a = this.currentNavigationElement) === null || _a === void 0 ? void 0 : _a.hasAttribute(\"data-turbo-stream\")) {\n            request.acceptResponseType(StreamMessage.contentType);\n        }\n    }\n    requestStarted(_request) {\n        markAsBusy(this.element);\n    }\n    requestPreventedHandlingResponse(_request, _response) {\n        this.resolveVisitPromise();\n    }\n    async requestSucceededWithResponse(request, response) {\n        await this.loadResponse(response);\n        this.resolveVisitPromise();\n    }\n    async requestFailedWithResponse(request, response) {\n        await this.loadResponse(response);\n        this.resolveVisitPromise();\n    }\n    requestErrored(request, error) {\n        console.error(error);\n        this.resolveVisitPromise();\n    }\n    requestFinished(_request) {\n        clearBusyState(this.element);\n    }\n    formSubmissionStarted({ formElement }) {\n        markAsBusy(formElement, this.findFrameElement(formElement));\n    }\n    formSubmissionSucceededWithResponse(formSubmission, response) {\n        const frame = this.findFrameElement(formSubmission.formElement, formSubmission.submitter);\n        frame.delegate.proposeVisitIfNavigatedWithAction(frame, formSubmission.formElement, formSubmission.submitter);\n        frame.delegate.loadResponse(response);\n        if (!formSubmission.isSafe) {\n            session.clearCache();\n        }\n    }\n    formSubmissionFailedWithResponse(formSubmission, fetchResponse) {\n        this.element.delegate.loadResponse(fetchResponse);\n        session.clearCache();\n    }\n    formSubmissionErrored(formSubmission, error) {\n        console.error(error);\n    }\n    formSubmissionFinished({ formElement }) {\n        clearBusyState(formElement, this.findFrameElement(formElement));\n    }\n    allowsImmediateRender({ element: newFrame }, options) {\n        const event = dispatch(\"turbo:before-frame-render\", {\n            target: this.element,\n            detail: Object.assign({ newFrame }, options),\n            cancelable: true,\n        });\n        const { defaultPrevented, detail: { render }, } = event;\n        if (this.view.renderer && render) {\n            this.view.renderer.renderElement = render;\n        }\n        return !defaultPrevented;\n    }\n    viewRenderedSnapshot(_snapshot, _isPreview) { }\n    preloadOnLoadLinksForView(element) {\n        session.preloadOnLoadLinksForView(element);\n    }\n    viewInvalidated() { }\n    willRenderFrame(currentElement, _newElement) {\n        this.previousFrameElement = currentElement.cloneNode(true);\n    }\n    async loadFrameResponse(fetchResponse, document) {\n        const newFrameElement = await this.extractForeignFrameElement(document.body);\n        if (newFrameElement) {\n            const snapshot = new Snapshot(newFrameElement);\n            const renderer = new FrameRenderer(this, this.view.snapshot, snapshot, FrameRenderer.renderElement, false, false);\n            if (this.view.renderPromise)\n                await this.view.renderPromise;\n            this.changeHistory();\n            await this.view.render(renderer);\n            this.complete = true;\n            session.frameRendered(fetchResponse, this.element);\n            session.frameLoaded(this.element);\n            this.fetchResponseLoaded(fetchResponse);\n        }\n        else if (this.willHandleFrameMissingFromResponse(fetchResponse)) {\n            this.handleFrameMissingFromResponse(fetchResponse);\n        }\n    }\n    async visit(url) {\n        var _a;\n        const request = new FetchRequest(this, FetchMethod.get, url, new URLSearchParams(), this.element);\n        (_a = this.currentFetchRequest) === null || _a === void 0 ? void 0 : _a.cancel();\n        this.currentFetchRequest = request;\n        return new Promise((resolve) => {\n            this.resolveVisitPromise = () => {\n                this.resolveVisitPromise = () => { };\n                this.currentFetchRequest = null;\n                resolve();\n            };\n            request.perform();\n        });\n    }\n    navigateFrame(element, url, submitter) {\n        const frame = this.findFrameElement(element, submitter);\n        frame.delegate.proposeVisitIfNavigatedWithAction(frame, element, submitter);\n        this.withCurrentNavigationElement(element, () => {\n            frame.src = url;\n        });\n    }\n    proposeVisitIfNavigatedWithAction(frame, element, submitter) {\n        this.action = getVisitAction(submitter, element, frame);\n        if (this.action) {\n            const pageSnapshot = PageSnapshot.fromElement(frame).clone();\n            const { visitCachedSnapshot } = frame.delegate;\n            frame.delegate.fetchResponseLoaded = (fetchResponse) => {\n                if (frame.src) {\n                    const { statusCode, redirected } = fetchResponse;\n                    const responseHTML = frame.ownerDocument.documentElement.outerHTML;\n                    const response = { statusCode, redirected, responseHTML };\n                    const options = {\n                        response,\n                        visitCachedSnapshot,\n                        willRender: false,\n                        updateHistory: false,\n                        restorationIdentifier: this.restorationIdentifier,\n                        snapshot: pageSnapshot,\n                    };\n                    if (this.action)\n                        options.action = this.action;\n                    session.visit(frame.src, options);\n                }\n            };\n        }\n    }\n    changeHistory() {\n        if (this.action) {\n            const method = getHistoryMethodForAction(this.action);\n            session.history.update(method, expandURL(this.element.src || \"\"), this.restorationIdentifier);\n        }\n    }\n    async handleUnvisitableFrameResponse(fetchResponse) {\n        console.warn(`The response (${fetchResponse.statusCode}) from <turbo-frame id=\"${this.element.id}\"> is performing a full page visit due to turbo-visit-control.`);\n        await this.visitResponse(fetchResponse.response);\n    }\n    willHandleFrameMissingFromResponse(fetchResponse) {\n        this.element.setAttribute(\"complete\", \"\");\n        const response = fetchResponse.response;\n        const visit = async (url, options = {}) => {\n            if (url instanceof Response) {\n                this.visitResponse(url);\n            }\n            else {\n                session.visit(url, options);\n            }\n        };\n        const event = dispatch(\"turbo:frame-missing\", {\n            target: this.element,\n            detail: { response, visit },\n            cancelable: true,\n        });\n        return !event.defaultPrevented;\n    }\n    handleFrameMissingFromResponse(fetchResponse) {\n        this.view.missing();\n        this.throwFrameMissingError(fetchResponse);\n    }\n    throwFrameMissingError(fetchResponse) {\n        const message = `The response (${fetchResponse.statusCode}) did not contain the expected <turbo-frame id=\"${this.element.id}\"> and will be ignored. To perform a full page visit instead, set turbo-visit-control to reload.`;\n        throw new TurboFrameMissingError(message);\n    }\n    async visitResponse(response) {\n        const wrapped = new FetchResponse(response);\n        const responseHTML = await wrapped.responseHTML;\n        const { location, redirected, statusCode } = wrapped;\n        return session.visit(location, { response: { redirected, statusCode, responseHTML } });\n    }\n    findFrameElement(element, submitter) {\n        var _a;\n        const id = getAttribute(\"data-turbo-frame\", submitter, element) || this.element.getAttribute(\"target\");\n        return (_a = getFrameElementById(id)) !== null && _a !== void 0 ? _a : this.element;\n    }\n    async extractForeignFrameElement(container) {\n        let element;\n        const id = CSS.escape(this.id);\n        try {\n            element = activateElement(container.querySelector(`turbo-frame#${id}`), this.sourceURL);\n            if (element) {\n                return element;\n            }\n            element = activateElement(container.querySelector(`turbo-frame[src][recurse~=${id}]`), this.sourceURL);\n            if (element) {\n                await element.loaded;\n                return await this.extractForeignFrameElement(element);\n            }\n        }\n        catch (error) {\n            console.error(error);\n            return new FrameElement();\n        }\n        return null;\n    }\n    formActionIsVisitable(form, submitter) {\n        const action = getAction(form, submitter);\n        return locationIsVisitable(expandURL(action), this.rootLocation);\n    }\n    shouldInterceptNavigation(element, submitter) {\n        const id = getAttribute(\"data-turbo-frame\", submitter, element) || this.element.getAttribute(\"target\");\n        if (element instanceof HTMLFormElement && !this.formActionIsVisitable(element, submitter)) {\n            return false;\n        }\n        if (!this.enabled || id == \"_top\") {\n            return false;\n        }\n        if (id) {\n            const frameElement = getFrameElementById(id);\n            if (frameElement) {\n                return !frameElement.disabled;\n            }\n        }\n        if (!session.elementIsNavigatable(element)) {\n            return false;\n        }\n        if (submitter && !session.elementIsNavigatable(submitter)) {\n            return false;\n        }\n        return true;\n    }\n    get id() {\n        return this.element.id;\n    }\n    get enabled() {\n        return !this.element.disabled;\n    }\n    get sourceURL() {\n        if (this.element.src) {\n            return this.element.src;\n        }\n    }\n    set sourceURL(sourceURL) {\n        this.ignoringChangesToAttribute(\"src\", () => {\n            this.element.src = sourceURL !== null && sourceURL !== void 0 ? sourceURL : null;\n        });\n    }\n    get loadingStyle() {\n        return this.element.loading;\n    }\n    get isLoading() {\n        return this.formSubmission !== undefined || this.resolveVisitPromise() !== undefined;\n    }\n    get complete() {\n        return this.element.hasAttribute(\"complete\");\n    }\n    set complete(value) {\n        this.ignoringChangesToAttribute(\"complete\", () => {\n            if (value) {\n                this.element.setAttribute(\"complete\", \"\");\n            }\n            else {\n                this.element.removeAttribute(\"complete\");\n            }\n        });\n    }\n    get isActive() {\n        return this.element.isActive && this.connected;\n    }\n    get rootLocation() {\n        var _a;\n        const meta = this.element.ownerDocument.querySelector(`meta[name=\"turbo-root\"]`);\n        const root = (_a = meta === null || meta === void 0 ? void 0 : meta.content) !== null && _a !== void 0 ? _a : \"/\";\n        return expandURL(root);\n    }\n    isIgnoringChangesTo(attributeName) {\n        return this.ignoredAttributes.has(attributeName);\n    }\n    ignoringChangesToAttribute(attributeName, callback) {\n        this.ignoredAttributes.add(attributeName);\n        callback();\n        this.ignoredAttributes.delete(attributeName);\n    }\n    withCurrentNavigationElement(element, callback) {\n        this.currentNavigationElement = element;\n        callback();\n        delete this.currentNavigationElement;\n    }\n}\nfunction getFrameElementById(id) {\n    if (id != null) {\n        const element = document.getElementById(id);\n        if (element instanceof FrameElement) {\n            return element;\n        }\n    }\n}\nfunction activateElement(element, currentURL) {\n    if (element) {\n        const src = element.getAttribute(\"src\");\n        if (src != null && currentURL != null && urlsAreEqual(src, currentURL)) {\n            throw new Error(`Matching <turbo-frame id=\"${element.id}\"> element has a source URL which references itself`);\n        }\n        if (element.ownerDocument !== document) {\n            element = document.importNode(element, true);\n        }\n        if (element instanceof FrameElement) {\n            element.connectedCallback();\n            element.disconnectedCallback();\n            return element;\n        }\n    }\n}\n\nclass StreamElement extends HTMLElement {\n    static async renderElement(newElement) {\n        await newElement.performAction();\n    }\n    async connectedCallback() {\n        try {\n            await this.render();\n        }\n        catch (error) {\n            console.error(error);\n        }\n        finally {\n            this.disconnect();\n        }\n    }\n    async render() {\n        var _a;\n        return ((_a = this.renderPromise) !== null && _a !== void 0 ? _a : (this.renderPromise = (async () => {\n            const event = this.beforeRenderEvent;\n            if (this.dispatchEvent(event)) {\n                await nextAnimationFrame();\n                await event.detail.render(this);\n            }\n        })()));\n    }\n    disconnect() {\n        try {\n            this.remove();\n        }\n        catch (_a) { }\n    }\n    removeDuplicateTargetChildren() {\n        this.duplicateChildren.forEach((c) => c.remove());\n    }\n    get duplicateChildren() {\n        var _a;\n        const existingChildren = this.targetElements.flatMap((e) => [...e.children]).filter((c) => !!c.id);\n        const newChildrenIds = [...(((_a = this.templateContent) === null || _a === void 0 ? void 0 : _a.children) || [])].filter((c) => !!c.id).map((c) => c.id);\n        return existingChildren.filter((c) => newChildrenIds.includes(c.id));\n    }\n    get performAction() {\n        if (this.action) {\n            const actionFunction = StreamActions[this.action];\n            if (actionFunction) {\n                return actionFunction;\n            }\n            this.raise(\"unknown action\");\n        }\n        this.raise(\"action attribute is missing\");\n    }\n    get targetElements() {\n        if (this.target) {\n            return this.targetElementsById;\n        }\n        else if (this.targets) {\n            return this.targetElementsByQuery;\n        }\n        else {\n            this.raise(\"target or targets attribute is missing\");\n        }\n    }\n    get templateContent() {\n        return this.templateElement.content.cloneNode(true);\n    }\n    get templateElement() {\n        if (this.firstElementChild === null) {\n            const template = this.ownerDocument.createElement(\"template\");\n            this.appendChild(template);\n            return template;\n        }\n        else if (this.firstElementChild instanceof HTMLTemplateElement) {\n            return this.firstElementChild;\n        }\n        this.raise(\"first child element must be a <template> element\");\n    }\n    get action() {\n        return this.getAttribute(\"action\");\n    }\n    get target() {\n        return this.getAttribute(\"target\");\n    }\n    get targets() {\n        return this.getAttribute(\"targets\");\n    }\n    raise(message) {\n        throw new Error(`${this.description}: ${message}`);\n    }\n    get description() {\n        var _a, _b;\n        return (_b = ((_a = this.outerHTML.match(/<[^>]+>/)) !== null && _a !== void 0 ? _a : [])[0]) !== null && _b !== void 0 ? _b : \"<turbo-stream>\";\n    }\n    get beforeRenderEvent() {\n        return new CustomEvent(\"turbo:before-stream-render\", {\n            bubbles: true,\n            cancelable: true,\n            detail: { newStream: this, render: StreamElement.renderElement },\n        });\n    }\n    get targetElementsById() {\n        var _a;\n        const element = (_a = this.ownerDocument) === null || _a === void 0 ? void 0 : _a.getElementById(this.target);\n        if (element !== null) {\n            return [element];\n        }\n        else {\n            return [];\n        }\n    }\n    get targetElementsByQuery() {\n        var _a;\n        const elements = (_a = this.ownerDocument) === null || _a === void 0 ? void 0 : _a.querySelectorAll(this.targets);\n        if (elements.length !== 0) {\n            return Array.prototype.slice.call(elements);\n        }\n        else {\n            return [];\n        }\n    }\n}\n\nclass StreamSourceElement extends HTMLElement {\n    constructor() {\n        super(...arguments);\n        this.streamSource = null;\n    }\n    connectedCallback() {\n        this.streamSource = this.src.match(/^ws{1,2}:/) ? new WebSocket(this.src) : new EventSource(this.src);\n        connectStreamSource(this.streamSource);\n    }\n    disconnectedCallback() {\n        if (this.streamSource) {\n            disconnectStreamSource(this.streamSource);\n        }\n    }\n    get src() {\n        return this.getAttribute(\"src\") || \"\";\n    }\n}\n\nFrameElement.delegateConstructor = FrameController;\nif (customElements.get(\"turbo-frame\") === undefined) {\n    customElements.define(\"turbo-frame\", FrameElement);\n}\nif (customElements.get(\"turbo-stream\") === undefined) {\n    customElements.define(\"turbo-stream\", StreamElement);\n}\nif (customElements.get(\"turbo-stream-source\") === undefined) {\n    customElements.define(\"turbo-stream-source\", StreamSourceElement);\n}\n\n(() => {\n    let element = document.currentScript;\n    if (!element)\n        return;\n    if (element.hasAttribute(\"data-turbo-suppress-warning\"))\n        return;\n    element = element.parentElement;\n    while (element) {\n        if (element == document.body) {\n            return console.warn(unindent `\n        You are loading Turbo from a <script> element inside the <body> element. This is probably not what you meant to do!\n\n        Load your application\u2019s JavaScript bundle inside the <head> element instead. <script> elements in <body> are evaluated with each page change.\n\n        For more information, see: https://turbo.hotwired.dev/handbook/building#working-with-script-elements\n\n        \u2014\u2014\n        Suppress this warning by adding a \"data-turbo-suppress-warning\" attribute to: %s\n      `, element.outerHTML);\n        }\n        element = element.parentElement;\n    }\n})();\n\nwindow.Turbo = Turbo;\nstart();\n\nexport { FrameElement, FrameLoadingStyle, FrameRenderer, PageRenderer, PageSnapshot, StreamActions, StreamElement, StreamSourceElement, cache, clearCache, connectStreamSource, disconnectStreamSource, navigator$1 as navigator, registerAdapter, renderStreamMessage, session, setConfirmMethod, setFormMode, setProgressBarDelay, start, visit };\n", "let consumer\n\nexport async function getConsumer() {\n  return consumer || setConsumer(createConsumer().then(setConsumer))\n}\n\nexport function setConsumer(newConsumer) {\n  return consumer = newConsumer\n}\n\nexport async function createConsumer() {\n  const { createConsumer } = await import(/* webpackChunkName: \"actioncable\" */ \"@rails/actioncable/src\")\n  return createConsumer()\n}\n\nexport async function subscribeTo(channel, mixin) {\n  const { subscriptions } = await getConsumer()\n  return subscriptions.create(channel, mixin)\n}\n", "// Based on https://github.com/nathan7/snakeize\n//\n// This software is released under the MIT license:\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nexport default function walk (obj) {\n    if (!obj || typeof obj !== 'object') return obj;\n    if (obj instanceof Date || obj instanceof RegExp) return obj;\n    if (Array.isArray(obj)) return obj.map(walk);\n    return Object.keys(obj).reduce(function (acc, key) {\n        var camel = key[0].toLowerCase() + key.slice(1).replace(/([A-Z]+)/g, function (m, x) {\n            return '_' + x.toLowerCase();\n        });\n        acc[camel] = walk(obj[key]);\n        return acc;\n    }, {});\n};", "import { connectStreamSource, disconnectStreamSource } from \"@hotwired/turbo\"\nimport { subscribeTo } from \"./cable\"\nimport snakeize from \"./snakeize\"\n\nclass TurboCableStreamSourceElement extends HTMLElement {\n  async connectedCallback() {\n    connectStreamSource(this)\n    this.subscription = await subscribeTo(this.channel, {\n      received: this.dispatchMessageEvent.bind(this),\n      connected: this.subscriptionConnected.bind(this),\n      disconnected: this.subscriptionDisconnected.bind(this)\n    })\n  }\n\n  disconnectedCallback() {\n    disconnectStreamSource(this)\n    if (this.subscription) this.subscription.unsubscribe()\n  }\n\n  dispatchMessageEvent(data) {\n    const event = new MessageEvent(\"message\", { data })\n    return this.dispatchEvent(event)\n  }\n\n  subscriptionConnected() {\n    this.setAttribute(\"connected\", \"\")\n  }\n\n  subscriptionDisconnected() {\n    this.removeAttribute(\"connected\")\n  }\n\n  get channel() {\n    const channel = this.getAttribute(\"channel\")\n    const signed_stream_name = this.getAttribute(\"signed-stream-name\")\n    return { channel, signed_stream_name, ...snakeize({ ...this.dataset }) }\n  }\n}\n\n\nif (customElements.get(\"turbo-cable-stream-source\") === undefined) {\n  customElements.define(\"turbo-cable-stream-source\", TurboCableStreamSourceElement)\n}\n", "export function encodeMethodIntoRequestBody(event) {\n  if (event.target instanceof HTMLFormElement) {\n    const { target: form, detail: { fetchOptions } } = event\n\n    form.addEventListener(\"turbo:submit-start\", ({ detail: { formSubmission: { submitter } } }) => {\n      const body = isBodyInit(fetchOptions.body) ? fetchOptions.body : new URLSearchParams()\n      const method = determineFetchMethod(submitter, body, form)\n\n      if (!/get/i.test(method)) {\n        if (/post/i.test(method)) {\n          body.delete(\"_method\")\n        } else {\n          body.set(\"_method\", method)\n        }\n\n        fetchOptions.method = \"post\"\n      }\n    }, { once: true })\n  }\n}\n\nfunction determineFetchMethod(submitter, body, form) {\n  const formMethod = determineFormMethod(submitter)\n  const overrideMethod = body.get(\"_method\")\n  const method = form.getAttribute(\"method\") || \"get\"\n\n  if (typeof formMethod == \"string\") {\n    return formMethod\n  } else if (typeof overrideMethod == \"string\") {\n    return overrideMethod\n  } else {\n    return method\n  }\n}\n\nfunction determineFormMethod(submitter) {\n  if (submitter instanceof HTMLButtonElement || submitter instanceof HTMLInputElement) {\n    if (submitter.hasAttribute(\"formmethod\")) {\n      return submitter.formMethod\n    } else {\n      return null\n    }\n  } else {\n    return null\n  }\n}\n\nfunction isBodyInit(body) {\n  return body instanceof FormData || body instanceof URLSearchParams\n}\n", "import \"./cable_stream_source_element\"\n\nimport * as Turbo from \"@hotwired/turbo\"\nexport { Turbo }\n\nimport * as cable from \"./cable\"\nexport { cable }\n\nimport { encodeMethodIntoRequestBody } from \"./fetch_requests\"\n\naddEventListener(\"turbo:before-fetch-request\", encodeMethodIntoRequestBody)\n", "/*\nStimulus 3.2.1\nCopyright \u00A9 2023 Basecamp, LLC\n */\nclass EventListener {\n    constructor(eventTarget, eventName, eventOptions) {\n        this.eventTarget = eventTarget;\n        this.eventName = eventName;\n        this.eventOptions = eventOptions;\n        this.unorderedBindings = new Set();\n    }\n    connect() {\n        this.eventTarget.addEventListener(this.eventName, this, this.eventOptions);\n    }\n    disconnect() {\n        this.eventTarget.removeEventListener(this.eventName, this, this.eventOptions);\n    }\n    bindingConnected(binding) {\n        this.unorderedBindings.add(binding);\n    }\n    bindingDisconnected(binding) {\n        this.unorderedBindings.delete(binding);\n    }\n    handleEvent(event) {\n        const extendedEvent = extendEvent(event);\n        for (const binding of this.bindings) {\n            if (extendedEvent.immediatePropagationStopped) {\n                break;\n            }\n            else {\n                binding.handleEvent(extendedEvent);\n            }\n        }\n    }\n    hasBindings() {\n        return this.unorderedBindings.size > 0;\n    }\n    get bindings() {\n        return Array.from(this.unorderedBindings).sort((left, right) => {\n            const leftIndex = left.index, rightIndex = right.index;\n            return leftIndex < rightIndex ? -1 : leftIndex > rightIndex ? 1 : 0;\n        });\n    }\n}\nfunction extendEvent(event) {\n    if (\"immediatePropagationStopped\" in event) {\n        return event;\n    }\n    else {\n        const { stopImmediatePropagation } = event;\n        return Object.assign(event, {\n            immediatePropagationStopped: false,\n            stopImmediatePropagation() {\n                this.immediatePropagationStopped = true;\n                stopImmediatePropagation.call(this);\n            },\n        });\n    }\n}\n\nclass Dispatcher {\n    constructor(application) {\n        this.application = application;\n        this.eventListenerMaps = new Map();\n        this.started = false;\n    }\n    start() {\n        if (!this.started) {\n            this.started = true;\n            this.eventListeners.forEach((eventListener) => eventListener.connect());\n        }\n    }\n    stop() {\n        if (this.started) {\n            this.started = false;\n            this.eventListeners.forEach((eventListener) => eventListener.disconnect());\n        }\n    }\n    get eventListeners() {\n        return Array.from(this.eventListenerMaps.values()).reduce((listeners, map) => listeners.concat(Array.from(map.values())), []);\n    }\n    bindingConnected(binding) {\n        this.fetchEventListenerForBinding(binding).bindingConnected(binding);\n    }\n    bindingDisconnected(binding, clearEventListeners = false) {\n        this.fetchEventListenerForBinding(binding).bindingDisconnected(binding);\n        if (clearEventListeners)\n            this.clearEventListenersForBinding(binding);\n    }\n    handleError(error, message, detail = {}) {\n        this.application.handleError(error, `Error ${message}`, detail);\n    }\n    clearEventListenersForBinding(binding) {\n        const eventListener = this.fetchEventListenerForBinding(binding);\n        if (!eventListener.hasBindings()) {\n            eventListener.disconnect();\n            this.removeMappedEventListenerFor(binding);\n        }\n    }\n    removeMappedEventListenerFor(binding) {\n        const { eventTarget, eventName, eventOptions } = binding;\n        const eventListenerMap = this.fetchEventListenerMapForEventTarget(eventTarget);\n        const cacheKey = this.cacheKey(eventName, eventOptions);\n        eventListenerMap.delete(cacheKey);\n        if (eventListenerMap.size == 0)\n            this.eventListenerMaps.delete(eventTarget);\n    }\n    fetchEventListenerForBinding(binding) {\n        const { eventTarget, eventName, eventOptions } = binding;\n        return this.fetchEventListener(eventTarget, eventName, eventOptions);\n    }\n    fetchEventListener(eventTarget, eventName, eventOptions) {\n        const eventListenerMap = this.fetchEventListenerMapForEventTarget(eventTarget);\n        const cacheKey = this.cacheKey(eventName, eventOptions);\n        let eventListener = eventListenerMap.get(cacheKey);\n        if (!eventListener) {\n            eventListener = this.createEventListener(eventTarget, eventName, eventOptions);\n            eventListenerMap.set(cacheKey, eventListener);\n        }\n        return eventListener;\n    }\n    createEventListener(eventTarget, eventName, eventOptions) {\n        const eventListener = new EventListener(eventTarget, eventName, eventOptions);\n        if (this.started) {\n            eventListener.connect();\n        }\n        return eventListener;\n    }\n    fetchEventListenerMapForEventTarget(eventTarget) {\n        let eventListenerMap = this.eventListenerMaps.get(eventTarget);\n        if (!eventListenerMap) {\n            eventListenerMap = new Map();\n            this.eventListenerMaps.set(eventTarget, eventListenerMap);\n        }\n        return eventListenerMap;\n    }\n    cacheKey(eventName, eventOptions) {\n        const parts = [eventName];\n        Object.keys(eventOptions)\n            .sort()\n            .forEach((key) => {\n            parts.push(`${eventOptions[key] ? \"\" : \"!\"}${key}`);\n        });\n        return parts.join(\":\");\n    }\n}\n\nconst defaultActionDescriptorFilters = {\n    stop({ event, value }) {\n        if (value)\n            event.stopPropagation();\n        return true;\n    },\n    prevent({ event, value }) {\n        if (value)\n            event.preventDefault();\n        return true;\n    },\n    self({ event, value, element }) {\n        if (value) {\n            return element === event.target;\n        }\n        else {\n            return true;\n        }\n    },\n};\nconst descriptorPattern = /^(?:(?:([^.]+?)\\+)?(.+?)(?:\\.(.+?))?(?:@(window|document))?->)?(.+?)(?:#([^:]+?))(?::(.+))?$/;\nfunction parseActionDescriptorString(descriptorString) {\n    const source = descriptorString.trim();\n    const matches = source.match(descriptorPattern) || [];\n    let eventName = matches[2];\n    let keyFilter = matches[3];\n    if (keyFilter && ![\"keydown\", \"keyup\", \"keypress\"].includes(eventName)) {\n        eventName += `.${keyFilter}`;\n        keyFilter = \"\";\n    }\n    return {\n        eventTarget: parseEventTarget(matches[4]),\n        eventName,\n        eventOptions: matches[7] ? parseEventOptions(matches[7]) : {},\n        identifier: matches[5],\n        methodName: matches[6],\n        keyFilter: matches[1] || keyFilter,\n    };\n}\nfunction parseEventTarget(eventTargetName) {\n    if (eventTargetName == \"window\") {\n        return window;\n    }\n    else if (eventTargetName == \"document\") {\n        return document;\n    }\n}\nfunction parseEventOptions(eventOptions) {\n    return eventOptions\n        .split(\":\")\n        .reduce((options, token) => Object.assign(options, { [token.replace(/^!/, \"\")]: !/^!/.test(token) }), {});\n}\nfunction stringifyEventTarget(eventTarget) {\n    if (eventTarget == window) {\n        return \"window\";\n    }\n    else if (eventTarget == document) {\n        return \"document\";\n    }\n}\n\nfunction camelize(value) {\n    return value.replace(/(?:[_-])([a-z0-9])/g, (_, char) => char.toUpperCase());\n}\nfunction namespaceCamelize(value) {\n    return camelize(value.replace(/--/g, \"-\").replace(/__/g, \"_\"));\n}\nfunction capitalize(value) {\n    return value.charAt(0).toUpperCase() + value.slice(1);\n}\nfunction dasherize(value) {\n    return value.replace(/([A-Z])/g, (_, char) => `-${char.toLowerCase()}`);\n}\nfunction tokenize(value) {\n    return value.match(/[^\\s]+/g) || [];\n}\n\nfunction isSomething(object) {\n    return object !== null && object !== undefined;\n}\nfunction hasProperty(object, property) {\n    return Object.prototype.hasOwnProperty.call(object, property);\n}\n\nconst allModifiers = [\"meta\", \"ctrl\", \"alt\", \"shift\"];\nclass Action {\n    constructor(element, index, descriptor, schema) {\n        this.element = element;\n        this.index = index;\n        this.eventTarget = descriptor.eventTarget || element;\n        this.eventName = descriptor.eventName || getDefaultEventNameForElement(element) || error(\"missing event name\");\n        this.eventOptions = descriptor.eventOptions || {};\n        this.identifier = descriptor.identifier || error(\"missing identifier\");\n        this.methodName = descriptor.methodName || error(\"missing method name\");\n        this.keyFilter = descriptor.keyFilter || \"\";\n        this.schema = schema;\n    }\n    static forToken(token, schema) {\n        return new this(token.element, token.index, parseActionDescriptorString(token.content), schema);\n    }\n    toString() {\n        const eventFilter = this.keyFilter ? `.${this.keyFilter}` : \"\";\n        const eventTarget = this.eventTargetName ? `@${this.eventTargetName}` : \"\";\n        return `${this.eventName}${eventFilter}${eventTarget}->${this.identifier}#${this.methodName}`;\n    }\n    shouldIgnoreKeyboardEvent(event) {\n        if (!this.keyFilter) {\n            return false;\n        }\n        const filters = this.keyFilter.split(\"+\");\n        if (this.keyFilterDissatisfied(event, filters)) {\n            return true;\n        }\n        const standardFilter = filters.filter((key) => !allModifiers.includes(key))[0];\n        if (!standardFilter) {\n            return false;\n        }\n        if (!hasProperty(this.keyMappings, standardFilter)) {\n            error(`contains unknown key filter: ${this.keyFilter}`);\n        }\n        return this.keyMappings[standardFilter].toLowerCase() !== event.key.toLowerCase();\n    }\n    shouldIgnoreMouseEvent(event) {\n        if (!this.keyFilter) {\n            return false;\n        }\n        const filters = [this.keyFilter];\n        if (this.keyFilterDissatisfied(event, filters)) {\n            return true;\n        }\n        return false;\n    }\n    get params() {\n        const params = {};\n        const pattern = new RegExp(`^data-${this.identifier}-(.+)-param$`, \"i\");\n        for (const { name, value } of Array.from(this.element.attributes)) {\n            const match = name.match(pattern);\n            const key = match && match[1];\n            if (key) {\n                params[camelize(key)] = typecast(value);\n            }\n        }\n        return params;\n    }\n    get eventTargetName() {\n        return stringifyEventTarget(this.eventTarget);\n    }\n    get keyMappings() {\n        return this.schema.keyMappings;\n    }\n    keyFilterDissatisfied(event, filters) {\n        const [meta, ctrl, alt, shift] = allModifiers.map((modifier) => filters.includes(modifier));\n        return event.metaKey !== meta || event.ctrlKey !== ctrl || event.altKey !== alt || event.shiftKey !== shift;\n    }\n}\nconst defaultEventNames = {\n    a: () => \"click\",\n    button: () => \"click\",\n    form: () => \"submit\",\n    details: () => \"toggle\",\n    input: (e) => (e.getAttribute(\"type\") == \"submit\" ? \"click\" : \"input\"),\n    select: () => \"change\",\n    textarea: () => \"input\",\n};\nfunction getDefaultEventNameForElement(element) {\n    const tagName = element.tagName.toLowerCase();\n    if (tagName in defaultEventNames) {\n        return defaultEventNames[tagName](element);\n    }\n}\nfunction error(message) {\n    throw new Error(message);\n}\nfunction typecast(value) {\n    try {\n        return JSON.parse(value);\n    }\n    catch (o_O) {\n        return value;\n    }\n}\n\nclass Binding {\n    constructor(context, action) {\n        this.context = context;\n        this.action = action;\n    }\n    get index() {\n        return this.action.index;\n    }\n    get eventTarget() {\n        return this.action.eventTarget;\n    }\n    get eventOptions() {\n        return this.action.eventOptions;\n    }\n    get identifier() {\n        return this.context.identifier;\n    }\n    handleEvent(event) {\n        const actionEvent = this.prepareActionEvent(event);\n        if (this.willBeInvokedByEvent(event) && this.applyEventModifiers(actionEvent)) {\n            this.invokeWithEvent(actionEvent);\n        }\n    }\n    get eventName() {\n        return this.action.eventName;\n    }\n    get method() {\n        const method = this.controller[this.methodName];\n        if (typeof method == \"function\") {\n            return method;\n        }\n        throw new Error(`Action \"${this.action}\" references undefined method \"${this.methodName}\"`);\n    }\n    applyEventModifiers(event) {\n        const { element } = this.action;\n        const { actionDescriptorFilters } = this.context.application;\n        const { controller } = this.context;\n        let passes = true;\n        for (const [name, value] of Object.entries(this.eventOptions)) {\n            if (name in actionDescriptorFilters) {\n                const filter = actionDescriptorFilters[name];\n                passes = passes && filter({ name, value, event, element, controller });\n            }\n            else {\n                continue;\n            }\n        }\n        return passes;\n    }\n    prepareActionEvent(event) {\n        return Object.assign(event, { params: this.action.params });\n    }\n    invokeWithEvent(event) {\n        const { target, currentTarget } = event;\n        try {\n            this.method.call(this.controller, event);\n            this.context.logDebugActivity(this.methodName, { event, target, currentTarget, action: this.methodName });\n        }\n        catch (error) {\n            const { identifier, controller, element, index } = this;\n            const detail = { identifier, controller, element, index, event };\n            this.context.handleError(error, `invoking action \"${this.action}\"`, detail);\n        }\n    }\n    willBeInvokedByEvent(event) {\n        const eventTarget = event.target;\n        if (event instanceof KeyboardEvent && this.action.shouldIgnoreKeyboardEvent(event)) {\n            return false;\n        }\n        if (event instanceof MouseEvent && this.action.shouldIgnoreMouseEvent(event)) {\n            return false;\n        }\n        if (this.element === eventTarget) {\n            return true;\n        }\n        else if (eventTarget instanceof Element && this.element.contains(eventTarget)) {\n            return this.scope.containsElement(eventTarget);\n        }\n        else {\n            return this.scope.containsElement(this.action.element);\n        }\n    }\n    get controller() {\n        return this.context.controller;\n    }\n    get methodName() {\n        return this.action.methodName;\n    }\n    get element() {\n        return this.scope.element;\n    }\n    get scope() {\n        return this.context.scope;\n    }\n}\n\nclass ElementObserver {\n    constructor(element, delegate) {\n        this.mutationObserverInit = { attributes: true, childList: true, subtree: true };\n        this.element = element;\n        this.started = false;\n        this.delegate = delegate;\n        this.elements = new Set();\n        this.mutationObserver = new MutationObserver((mutations) => this.processMutations(mutations));\n    }\n    start() {\n        if (!this.started) {\n            this.started = true;\n            this.mutationObserver.observe(this.element, this.mutationObserverInit);\n            this.refresh();\n        }\n    }\n    pause(callback) {\n        if (this.started) {\n            this.mutationObserver.disconnect();\n            this.started = false;\n        }\n        callback();\n        if (!this.started) {\n            this.mutationObserver.observe(this.element, this.mutationObserverInit);\n            this.started = true;\n        }\n    }\n    stop() {\n        if (this.started) {\n            this.mutationObserver.takeRecords();\n            this.mutationObserver.disconnect();\n            this.started = false;\n        }\n    }\n    refresh() {\n        if (this.started) {\n            const matches = new Set(this.matchElementsInTree());\n            for (const element of Array.from(this.elements)) {\n                if (!matches.has(element)) {\n                    this.removeElement(element);\n                }\n            }\n            for (const element of Array.from(matches)) {\n                this.addElement(element);\n            }\n        }\n    }\n    processMutations(mutations) {\n        if (this.started) {\n            for (const mutation of mutations) {\n                this.processMutation(mutation);\n            }\n        }\n    }\n    processMutation(mutation) {\n        if (mutation.type == \"attributes\") {\n            this.processAttributeChange(mutation.target, mutation.attributeName);\n        }\n        else if (mutation.type == \"childList\") {\n            this.processRemovedNodes(mutation.removedNodes);\n            this.processAddedNodes(mutation.addedNodes);\n        }\n    }\n    processAttributeChange(element, attributeName) {\n        if (this.elements.has(element)) {\n            if (this.delegate.elementAttributeChanged && this.matchElement(element)) {\n                this.delegate.elementAttributeChanged(element, attributeName);\n            }\n            else {\n                this.removeElement(element);\n            }\n        }\n        else if (this.matchElement(element)) {\n            this.addElement(element);\n        }\n    }\n    processRemovedNodes(nodes) {\n        for (const node of Array.from(nodes)) {\n            const element = this.elementFromNode(node);\n            if (element) {\n                this.processTree(element, this.removeElement);\n            }\n        }\n    }\n    processAddedNodes(nodes) {\n        for (const node of Array.from(nodes)) {\n            const element = this.elementFromNode(node);\n            if (element && this.elementIsActive(element)) {\n                this.processTree(element, this.addElement);\n            }\n        }\n    }\n    matchElement(element) {\n        return this.delegate.matchElement(element);\n    }\n    matchElementsInTree(tree = this.element) {\n        return this.delegate.matchElementsInTree(tree);\n    }\n    processTree(tree, processor) {\n        for (const element of this.matchElementsInTree(tree)) {\n            processor.call(this, element);\n        }\n    }\n    elementFromNode(node) {\n        if (node.nodeType == Node.ELEMENT_NODE) {\n            return node;\n        }\n    }\n    elementIsActive(element) {\n        if (element.isConnected != this.element.isConnected) {\n            return false;\n        }\n        else {\n            return this.element.contains(element);\n        }\n    }\n    addElement(element) {\n        if (!this.elements.has(element)) {\n            if (this.elementIsActive(element)) {\n                this.elements.add(element);\n                if (this.delegate.elementMatched) {\n                    this.delegate.elementMatched(element);\n                }\n            }\n        }\n    }\n    removeElement(element) {\n        if (this.elements.has(element)) {\n            this.elements.delete(element);\n            if (this.delegate.elementUnmatched) {\n                this.delegate.elementUnmatched(element);\n            }\n        }\n    }\n}\n\nclass AttributeObserver {\n    constructor(element, attributeName, delegate) {\n        this.attributeName = attributeName;\n        this.delegate = delegate;\n        this.elementObserver = new ElementObserver(element, this);\n    }\n    get element() {\n        return this.elementObserver.element;\n    }\n    get selector() {\n        return `[${this.attributeName}]`;\n    }\n    start() {\n        this.elementObserver.start();\n    }\n    pause(callback) {\n        this.elementObserver.pause(callback);\n    }\n    stop() {\n        this.elementObserver.stop();\n    }\n    refresh() {\n        this.elementObserver.refresh();\n    }\n    get started() {\n        return this.elementObserver.started;\n    }\n    matchElement(element) {\n        return element.hasAttribute(this.attributeName);\n    }\n    matchElementsInTree(tree) {\n        const match = this.matchElement(tree) ? [tree] : [];\n        const matches = Array.from(tree.querySelectorAll(this.selector));\n        return match.concat(matches);\n    }\n    elementMatched(element) {\n        if (this.delegate.elementMatchedAttribute) {\n            this.delegate.elementMatchedAttribute(element, this.attributeName);\n        }\n    }\n    elementUnmatched(element) {\n        if (this.delegate.elementUnmatchedAttribute) {\n            this.delegate.elementUnmatchedAttribute(element, this.attributeName);\n        }\n    }\n    elementAttributeChanged(element, attributeName) {\n        if (this.delegate.elementAttributeValueChanged && this.attributeName == attributeName) {\n            this.delegate.elementAttributeValueChanged(element, attributeName);\n        }\n    }\n}\n\nfunction add(map, key, value) {\n    fetch(map, key).add(value);\n}\nfunction del(map, key, value) {\n    fetch(map, key).delete(value);\n    prune(map, key);\n}\nfunction fetch(map, key) {\n    let values = map.get(key);\n    if (!values) {\n        values = new Set();\n        map.set(key, values);\n    }\n    return values;\n}\nfunction prune(map, key) {\n    const values = map.get(key);\n    if (values != null && values.size == 0) {\n        map.delete(key);\n    }\n}\n\nclass Multimap {\n    constructor() {\n        this.valuesByKey = new Map();\n    }\n    get keys() {\n        return Array.from(this.valuesByKey.keys());\n    }\n    get values() {\n        const sets = Array.from(this.valuesByKey.values());\n        return sets.reduce((values, set) => values.concat(Array.from(set)), []);\n    }\n    get size() {\n        const sets = Array.from(this.valuesByKey.values());\n        return sets.reduce((size, set) => size + set.size, 0);\n    }\n    add(key, value) {\n        add(this.valuesByKey, key, value);\n    }\n    delete(key, value) {\n        del(this.valuesByKey, key, value);\n    }\n    has(key, value) {\n        const values = this.valuesByKey.get(key);\n        return values != null && values.has(value);\n    }\n    hasKey(key) {\n        return this.valuesByKey.has(key);\n    }\n    hasValue(value) {\n        const sets = Array.from(this.valuesByKey.values());\n        return sets.some((set) => set.has(value));\n    }\n    getValuesForKey(key) {\n        const values = this.valuesByKey.get(key);\n        return values ? Array.from(values) : [];\n    }\n    getKeysForValue(value) {\n        return Array.from(this.valuesByKey)\n            .filter(([_key, values]) => values.has(value))\n            .map(([key, _values]) => key);\n    }\n}\n\nclass IndexedMultimap extends Multimap {\n    constructor() {\n        super();\n        this.keysByValue = new Map();\n    }\n    get values() {\n        return Array.from(this.keysByValue.keys());\n    }\n    add(key, value) {\n        super.add(key, value);\n        add(this.keysByValue, value, key);\n    }\n    delete(key, value) {\n        super.delete(key, value);\n        del(this.keysByValue, value, key);\n    }\n    hasValue(value) {\n        return this.keysByValue.has(value);\n    }\n    getKeysForValue(value) {\n        const set = this.keysByValue.get(value);\n        return set ? Array.from(set) : [];\n    }\n}\n\nclass SelectorObserver {\n    constructor(element, selector, delegate, details) {\n        this._selector = selector;\n        this.details = details;\n        this.elementObserver = new ElementObserver(element, this);\n        this.delegate = delegate;\n        this.matchesByElement = new Multimap();\n    }\n    get started() {\n        return this.elementObserver.started;\n    }\n    get selector() {\n        return this._selector;\n    }\n    set selector(selector) {\n        this._selector = selector;\n        this.refresh();\n    }\n    start() {\n        this.elementObserver.start();\n    }\n    pause(callback) {\n        this.elementObserver.pause(callback);\n    }\n    stop() {\n        this.elementObserver.stop();\n    }\n    refresh() {\n        this.elementObserver.refresh();\n    }\n    get element() {\n        return this.elementObserver.element;\n    }\n    matchElement(element) {\n        const { selector } = this;\n        if (selector) {\n            const matches = element.matches(selector);\n            if (this.delegate.selectorMatchElement) {\n                return matches && this.delegate.selectorMatchElement(element, this.details);\n            }\n            return matches;\n        }\n        else {\n            return false;\n        }\n    }\n    matchElementsInTree(tree) {\n        const { selector } = this;\n        if (selector) {\n            const match = this.matchElement(tree) ? [tree] : [];\n            const matches = Array.from(tree.querySelectorAll(selector)).filter((match) => this.matchElement(match));\n            return match.concat(matches);\n        }\n        else {\n            return [];\n        }\n    }\n    elementMatched(element) {\n        const { selector } = this;\n        if (selector) {\n            this.selectorMatched(element, selector);\n        }\n    }\n    elementUnmatched(element) {\n        const selectors = this.matchesByElement.getKeysForValue(element);\n        for (const selector of selectors) {\n            this.selectorUnmatched(element, selector);\n        }\n    }\n    elementAttributeChanged(element, _attributeName) {\n        const { selector } = this;\n        if (selector) {\n            const matches = this.matchElement(element);\n            const matchedBefore = this.matchesByElement.has(selector, element);\n            if (matches && !matchedBefore) {\n                this.selectorMatched(element, selector);\n            }\n            else if (!matches && matchedBefore) {\n                this.selectorUnmatched(element, selector);\n            }\n        }\n    }\n    selectorMatched(element, selector) {\n        this.delegate.selectorMatched(element, selector, this.details);\n        this.matchesByElement.add(selector, element);\n    }\n    selectorUnmatched(element, selector) {\n        this.delegate.selectorUnmatched(element, selector, this.details);\n        this.matchesByElement.delete(selector, element);\n    }\n}\n\nclass StringMapObserver {\n    constructor(element, delegate) {\n        this.element = element;\n        this.delegate = delegate;\n        this.started = false;\n        this.stringMap = new Map();\n        this.mutationObserver = new MutationObserver((mutations) => this.processMutations(mutations));\n    }\n    start() {\n        if (!this.started) {\n            this.started = true;\n            this.mutationObserver.observe(this.element, { attributes: true, attributeOldValue: true });\n            this.refresh();\n        }\n    }\n    stop() {\n        if (this.started) {\n            this.mutationObserver.takeRecords();\n            this.mutationObserver.disconnect();\n            this.started = false;\n        }\n    }\n    refresh() {\n        if (this.started) {\n            for (const attributeName of this.knownAttributeNames) {\n                this.refreshAttribute(attributeName, null);\n            }\n        }\n    }\n    processMutations(mutations) {\n        if (this.started) {\n            for (const mutation of mutations) {\n                this.processMutation(mutation);\n            }\n        }\n    }\n    processMutation(mutation) {\n        const attributeName = mutation.attributeName;\n        if (attributeName) {\n            this.refreshAttribute(attributeName, mutation.oldValue);\n        }\n    }\n    refreshAttribute(attributeName, oldValue) {\n        const key = this.delegate.getStringMapKeyForAttribute(attributeName);\n        if (key != null) {\n            if (!this.stringMap.has(attributeName)) {\n                this.stringMapKeyAdded(key, attributeName);\n            }\n            const value = this.element.getAttribute(attributeName);\n            if (this.stringMap.get(attributeName) != value) {\n                this.stringMapValueChanged(value, key, oldValue);\n            }\n            if (value == null) {\n                const oldValue = this.stringMap.get(attributeName);\n                this.stringMap.delete(attributeName);\n                if (oldValue)\n                    this.stringMapKeyRemoved(key, attributeName, oldValue);\n            }\n            else {\n                this.stringMap.set(attributeName, value);\n            }\n        }\n    }\n    stringMapKeyAdded(key, attributeName) {\n        if (this.delegate.stringMapKeyAdded) {\n            this.delegate.stringMapKeyAdded(key, attributeName);\n        }\n    }\n    stringMapValueChanged(value, key, oldValue) {\n        if (this.delegate.stringMapValueChanged) {\n            this.delegate.stringMapValueChanged(value, key, oldValue);\n        }\n    }\n    stringMapKeyRemoved(key, attributeName, oldValue) {\n        if (this.delegate.stringMapKeyRemoved) {\n            this.delegate.stringMapKeyRemoved(key, attributeName, oldValue);\n        }\n    }\n    get knownAttributeNames() {\n        return Array.from(new Set(this.currentAttributeNames.concat(this.recordedAttributeNames)));\n    }\n    get currentAttributeNames() {\n        return Array.from(this.element.attributes).map((attribute) => attribute.name);\n    }\n    get recordedAttributeNames() {\n        return Array.from(this.stringMap.keys());\n    }\n}\n\nclass TokenListObserver {\n    constructor(element, attributeName, delegate) {\n        this.attributeObserver = new AttributeObserver(element, attributeName, this);\n        this.delegate = delegate;\n        this.tokensByElement = new Multimap();\n    }\n    get started() {\n        return this.attributeObserver.started;\n    }\n    start() {\n        this.attributeObserver.start();\n    }\n    pause(callback) {\n        this.attributeObserver.pause(callback);\n    }\n    stop() {\n        this.attributeObserver.stop();\n    }\n    refresh() {\n        this.attributeObserver.refresh();\n    }\n    get element() {\n        return this.attributeObserver.element;\n    }\n    get attributeName() {\n        return this.attributeObserver.attributeName;\n    }\n    elementMatchedAttribute(element) {\n        this.tokensMatched(this.readTokensForElement(element));\n    }\n    elementAttributeValueChanged(element) {\n        const [unmatchedTokens, matchedTokens] = this.refreshTokensForElement(element);\n        this.tokensUnmatched(unmatchedTokens);\n        this.tokensMatched(matchedTokens);\n    }\n    elementUnmatchedAttribute(element) {\n        this.tokensUnmatched(this.tokensByElement.getValuesForKey(element));\n    }\n    tokensMatched(tokens) {\n        tokens.forEach((token) => this.tokenMatched(token));\n    }\n    tokensUnmatched(tokens) {\n        tokens.forEach((token) => this.tokenUnmatched(token));\n    }\n    tokenMatched(token) {\n        this.delegate.tokenMatched(token);\n        this.tokensByElement.add(token.element, token);\n    }\n    tokenUnmatched(token) {\n        this.delegate.tokenUnmatched(token);\n        this.tokensByElement.delete(token.element, token);\n    }\n    refreshTokensForElement(element) {\n        const previousTokens = this.tokensByElement.getValuesForKey(element);\n        const currentTokens = this.readTokensForElement(element);\n        const firstDifferingIndex = zip(previousTokens, currentTokens).findIndex(([previousToken, currentToken]) => !tokensAreEqual(previousToken, currentToken));\n        if (firstDifferingIndex == -1) {\n            return [[], []];\n        }\n        else {\n            return [previousTokens.slice(firstDifferingIndex), currentTokens.slice(firstDifferingIndex)];\n        }\n    }\n    readTokensForElement(element) {\n        const attributeName = this.attributeName;\n        const tokenString = element.getAttribute(attributeName) || \"\";\n        return parseTokenString(tokenString, element, attributeName);\n    }\n}\nfunction parseTokenString(tokenString, element, attributeName) {\n    return tokenString\n        .trim()\n        .split(/\\s+/)\n        .filter((content) => content.length)\n        .map((content, index) => ({ element, attributeName, content, index }));\n}\nfunction zip(left, right) {\n    const length = Math.max(left.length, right.length);\n    return Array.from({ length }, (_, index) => [left[index], right[index]]);\n}\nfunction tokensAreEqual(left, right) {\n    return left && right && left.index == right.index && left.content == right.content;\n}\n\nclass ValueListObserver {\n    constructor(element, attributeName, delegate) {\n        this.tokenListObserver = new TokenListObserver(element, attributeName, this);\n        this.delegate = delegate;\n        this.parseResultsByToken = new WeakMap();\n        this.valuesByTokenByElement = new WeakMap();\n    }\n    get started() {\n        return this.tokenListObserver.started;\n    }\n    start() {\n        this.tokenListObserver.start();\n    }\n    stop() {\n        this.tokenListObserver.stop();\n    }\n    refresh() {\n        this.tokenListObserver.refresh();\n    }\n    get element() {\n        return this.tokenListObserver.element;\n    }\n    get attributeName() {\n        return this.tokenListObserver.attributeName;\n    }\n    tokenMatched(token) {\n        const { element } = token;\n        const { value } = this.fetchParseResultForToken(token);\n        if (value) {\n            this.fetchValuesByTokenForElement(element).set(token, value);\n            this.delegate.elementMatchedValue(element, value);\n        }\n    }\n    tokenUnmatched(token) {\n        const { element } = token;\n        const { value } = this.fetchParseResultForToken(token);\n        if (value) {\n            this.fetchValuesByTokenForElement(element).delete(token);\n            this.delegate.elementUnmatchedValue(element, value);\n        }\n    }\n    fetchParseResultForToken(token) {\n        let parseResult = this.parseResultsByToken.get(token);\n        if (!parseResult) {\n            parseResult = this.parseToken(token);\n            this.parseResultsByToken.set(token, parseResult);\n        }\n        return parseResult;\n    }\n    fetchValuesByTokenForElement(element) {\n        let valuesByToken = this.valuesByTokenByElement.get(element);\n        if (!valuesByToken) {\n            valuesByToken = new Map();\n            this.valuesByTokenByElement.set(element, valuesByToken);\n        }\n        return valuesByToken;\n    }\n    parseToken(token) {\n        try {\n            const value = this.delegate.parseValueForToken(token);\n            return { value };\n        }\n        catch (error) {\n            return { error };\n        }\n    }\n}\n\nclass BindingObserver {\n    constructor(context, delegate) {\n        this.context = context;\n        this.delegate = delegate;\n        this.bindingsByAction = new Map();\n    }\n    start() {\n        if (!this.valueListObserver) {\n            this.valueListObserver = new ValueListObserver(this.element, this.actionAttribute, this);\n            this.valueListObserver.start();\n        }\n    }\n    stop() {\n        if (this.valueListObserver) {\n            this.valueListObserver.stop();\n            delete this.valueListObserver;\n            this.disconnectAllActions();\n        }\n    }\n    get element() {\n        return this.context.element;\n    }\n    get identifier() {\n        return this.context.identifier;\n    }\n    get actionAttribute() {\n        return this.schema.actionAttribute;\n    }\n    get schema() {\n        return this.context.schema;\n    }\n    get bindings() {\n        return Array.from(this.bindingsByAction.values());\n    }\n    connectAction(action) {\n        const binding = new Binding(this.context, action);\n        this.bindingsByAction.set(action, binding);\n        this.delegate.bindingConnected(binding);\n    }\n    disconnectAction(action) {\n        const binding = this.bindingsByAction.get(action);\n        if (binding) {\n            this.bindingsByAction.delete(action);\n            this.delegate.bindingDisconnected(binding);\n        }\n    }\n    disconnectAllActions() {\n        this.bindings.forEach((binding) => this.delegate.bindingDisconnected(binding, true));\n        this.bindingsByAction.clear();\n    }\n    parseValueForToken(token) {\n        const action = Action.forToken(token, this.schema);\n        if (action.identifier == this.identifier) {\n            return action;\n        }\n    }\n    elementMatchedValue(element, action) {\n        this.connectAction(action);\n    }\n    elementUnmatchedValue(element, action) {\n        this.disconnectAction(action);\n    }\n}\n\nclass ValueObserver {\n    constructor(context, receiver) {\n        this.context = context;\n        this.receiver = receiver;\n        this.stringMapObserver = new StringMapObserver(this.element, this);\n        this.valueDescriptorMap = this.controller.valueDescriptorMap;\n    }\n    start() {\n        this.stringMapObserver.start();\n        this.invokeChangedCallbacksForDefaultValues();\n    }\n    stop() {\n        this.stringMapObserver.stop();\n    }\n    get element() {\n        return this.context.element;\n    }\n    get controller() {\n        return this.context.controller;\n    }\n    getStringMapKeyForAttribute(attributeName) {\n        if (attributeName in this.valueDescriptorMap) {\n            return this.valueDescriptorMap[attributeName].name;\n        }\n    }\n    stringMapKeyAdded(key, attributeName) {\n        const descriptor = this.valueDescriptorMap[attributeName];\n        if (!this.hasValue(key)) {\n            this.invokeChangedCallback(key, descriptor.writer(this.receiver[key]), descriptor.writer(descriptor.defaultValue));\n        }\n    }\n    stringMapValueChanged(value, name, oldValue) {\n        const descriptor = this.valueDescriptorNameMap[name];\n        if (value === null)\n            return;\n        if (oldValue === null) {\n            oldValue = descriptor.writer(descriptor.defaultValue);\n        }\n        this.invokeChangedCallback(name, value, oldValue);\n    }\n    stringMapKeyRemoved(key, attributeName, oldValue) {\n        const descriptor = this.valueDescriptorNameMap[key];\n        if (this.hasValue(key)) {\n            this.invokeChangedCallback(key, descriptor.writer(this.receiver[key]), oldValue);\n        }\n        else {\n            this.invokeChangedCallback(key, descriptor.writer(descriptor.defaultValue), oldValue);\n        }\n    }\n    invokeChangedCallbacksForDefaultValues() {\n        for (const { key, name, defaultValue, writer } of this.valueDescriptors) {\n            if (defaultValue != undefined && !this.controller.data.has(key)) {\n                this.invokeChangedCallback(name, writer(defaultValue), undefined);\n            }\n        }\n    }\n    invokeChangedCallback(name, rawValue, rawOldValue) {\n        const changedMethodName = `${name}Changed`;\n        const changedMethod = this.receiver[changedMethodName];\n        if (typeof changedMethod == \"function\") {\n            const descriptor = this.valueDescriptorNameMap[name];\n            try {\n                const value = descriptor.reader(rawValue);\n                let oldValue = rawOldValue;\n                if (rawOldValue) {\n                    oldValue = descriptor.reader(rawOldValue);\n                }\n                changedMethod.call(this.receiver, value, oldValue);\n            }\n            catch (error) {\n                if (error instanceof TypeError) {\n                    error.message = `Stimulus Value \"${this.context.identifier}.${descriptor.name}\" - ${error.message}`;\n                }\n                throw error;\n            }\n        }\n    }\n    get valueDescriptors() {\n        const { valueDescriptorMap } = this;\n        return Object.keys(valueDescriptorMap).map((key) => valueDescriptorMap[key]);\n    }\n    get valueDescriptorNameMap() {\n        const descriptors = {};\n        Object.keys(this.valueDescriptorMap).forEach((key) => {\n            const descriptor = this.valueDescriptorMap[key];\n            descriptors[descriptor.name] = descriptor;\n        });\n        return descriptors;\n    }\n    hasValue(attributeName) {\n        const descriptor = this.valueDescriptorNameMap[attributeName];\n        const hasMethodName = `has${capitalize(descriptor.name)}`;\n        return this.receiver[hasMethodName];\n    }\n}\n\nclass TargetObserver {\n    constructor(context, delegate) {\n        this.context = context;\n        this.delegate = delegate;\n        this.targetsByName = new Multimap();\n    }\n    start() {\n        if (!this.tokenListObserver) {\n            this.tokenListObserver = new TokenListObserver(this.element, this.attributeName, this);\n            this.tokenListObserver.start();\n        }\n    }\n    stop() {\n        if (this.tokenListObserver) {\n            this.disconnectAllTargets();\n            this.tokenListObserver.stop();\n            delete this.tokenListObserver;\n        }\n    }\n    tokenMatched({ element, content: name }) {\n        if (this.scope.containsElement(element)) {\n            this.connectTarget(element, name);\n        }\n    }\n    tokenUnmatched({ element, content: name }) {\n        this.disconnectTarget(element, name);\n    }\n    connectTarget(element, name) {\n        var _a;\n        if (!this.targetsByName.has(name, element)) {\n            this.targetsByName.add(name, element);\n            (_a = this.tokenListObserver) === null || _a === void 0 ? void 0 : _a.pause(() => this.delegate.targetConnected(element, name));\n        }\n    }\n    disconnectTarget(element, name) {\n        var _a;\n        if (this.targetsByName.has(name, element)) {\n            this.targetsByName.delete(name, element);\n            (_a = this.tokenListObserver) === null || _a === void 0 ? void 0 : _a.pause(() => this.delegate.targetDisconnected(element, name));\n        }\n    }\n    disconnectAllTargets() {\n        for (const name of this.targetsByName.keys) {\n            for (const element of this.targetsByName.getValuesForKey(name)) {\n                this.disconnectTarget(element, name);\n            }\n        }\n    }\n    get attributeName() {\n        return `data-${this.context.identifier}-target`;\n    }\n    get element() {\n        return this.context.element;\n    }\n    get scope() {\n        return this.context.scope;\n    }\n}\n\nfunction readInheritableStaticArrayValues(constructor, propertyName) {\n    const ancestors = getAncestorsForConstructor(constructor);\n    return Array.from(ancestors.reduce((values, constructor) => {\n        getOwnStaticArrayValues(constructor, propertyName).forEach((name) => values.add(name));\n        return values;\n    }, new Set()));\n}\nfunction readInheritableStaticObjectPairs(constructor, propertyName) {\n    const ancestors = getAncestorsForConstructor(constructor);\n    return ancestors.reduce((pairs, constructor) => {\n        pairs.push(...getOwnStaticObjectPairs(constructor, propertyName));\n        return pairs;\n    }, []);\n}\nfunction getAncestorsForConstructor(constructor) {\n    const ancestors = [];\n    while (constructor) {\n        ancestors.push(constructor);\n        constructor = Object.getPrototypeOf(constructor);\n    }\n    return ancestors.reverse();\n}\nfunction getOwnStaticArrayValues(constructor, propertyName) {\n    const definition = constructor[propertyName];\n    return Array.isArray(definition) ? definition : [];\n}\nfunction getOwnStaticObjectPairs(constructor, propertyName) {\n    const definition = constructor[propertyName];\n    return definition ? Object.keys(definition).map((key) => [key, definition[key]]) : [];\n}\n\nclass OutletObserver {\n    constructor(context, delegate) {\n        this.started = false;\n        this.context = context;\n        this.delegate = delegate;\n        this.outletsByName = new Multimap();\n        this.outletElementsByName = new Multimap();\n        this.selectorObserverMap = new Map();\n        this.attributeObserverMap = new Map();\n    }\n    start() {\n        if (!this.started) {\n            this.outletDefinitions.forEach((outletName) => {\n                this.setupSelectorObserverForOutlet(outletName);\n                this.setupAttributeObserverForOutlet(outletName);\n            });\n            this.started = true;\n            this.dependentContexts.forEach((context) => context.refresh());\n        }\n    }\n    refresh() {\n        this.selectorObserverMap.forEach((observer) => observer.refresh());\n        this.attributeObserverMap.forEach((observer) => observer.refresh());\n    }\n    stop() {\n        if (this.started) {\n            this.started = false;\n            this.disconnectAllOutlets();\n            this.stopSelectorObservers();\n            this.stopAttributeObservers();\n        }\n    }\n    stopSelectorObservers() {\n        if (this.selectorObserverMap.size > 0) {\n            this.selectorObserverMap.forEach((observer) => observer.stop());\n            this.selectorObserverMap.clear();\n        }\n    }\n    stopAttributeObservers() {\n        if (this.attributeObserverMap.size > 0) {\n            this.attributeObserverMap.forEach((observer) => observer.stop());\n            this.attributeObserverMap.clear();\n        }\n    }\n    selectorMatched(element, _selector, { outletName }) {\n        const outlet = this.getOutlet(element, outletName);\n        if (outlet) {\n            this.connectOutlet(outlet, element, outletName);\n        }\n    }\n    selectorUnmatched(element, _selector, { outletName }) {\n        const outlet = this.getOutletFromMap(element, outletName);\n        if (outlet) {\n            this.disconnectOutlet(outlet, element, outletName);\n        }\n    }\n    selectorMatchElement(element, { outletName }) {\n        const selector = this.selector(outletName);\n        const hasOutlet = this.hasOutlet(element, outletName);\n        const hasOutletController = element.matches(`[${this.schema.controllerAttribute}~=${outletName}]`);\n        if (selector) {\n            return hasOutlet && hasOutletController && element.matches(selector);\n        }\n        else {\n            return false;\n        }\n    }\n    elementMatchedAttribute(_element, attributeName) {\n        const outletName = this.getOutletNameFromOutletAttributeName(attributeName);\n        if (outletName) {\n            this.updateSelectorObserverForOutlet(outletName);\n        }\n    }\n    elementAttributeValueChanged(_element, attributeName) {\n        const outletName = this.getOutletNameFromOutletAttributeName(attributeName);\n        if (outletName) {\n            this.updateSelectorObserverForOutlet(outletName);\n        }\n    }\n    elementUnmatchedAttribute(_element, attributeName) {\n        const outletName = this.getOutletNameFromOutletAttributeName(attributeName);\n        if (outletName) {\n            this.updateSelectorObserverForOutlet(outletName);\n        }\n    }\n    connectOutlet(outlet, element, outletName) {\n        var _a;\n        if (!this.outletElementsByName.has(outletName, element)) {\n            this.outletsByName.add(outletName, outlet);\n            this.outletElementsByName.add(outletName, element);\n            (_a = this.selectorObserverMap.get(outletName)) === null || _a === void 0 ? void 0 : _a.pause(() => this.delegate.outletConnected(outlet, element, outletName));\n        }\n    }\n    disconnectOutlet(outlet, element, outletName) {\n        var _a;\n        if (this.outletElementsByName.has(outletName, element)) {\n            this.outletsByName.delete(outletName, outlet);\n            this.outletElementsByName.delete(outletName, element);\n            (_a = this.selectorObserverMap\n                .get(outletName)) === null || _a === void 0 ? void 0 : _a.pause(() => this.delegate.outletDisconnected(outlet, element, outletName));\n        }\n    }\n    disconnectAllOutlets() {\n        for (const outletName of this.outletElementsByName.keys) {\n            for (const element of this.outletElementsByName.getValuesForKey(outletName)) {\n                for (const outlet of this.outletsByName.getValuesForKey(outletName)) {\n                    this.disconnectOutlet(outlet, element, outletName);\n                }\n            }\n        }\n    }\n    updateSelectorObserverForOutlet(outletName) {\n        const observer = this.selectorObserverMap.get(outletName);\n        if (observer) {\n            observer.selector = this.selector(outletName);\n        }\n    }\n    setupSelectorObserverForOutlet(outletName) {\n        const selector = this.selector(outletName);\n        const selectorObserver = new SelectorObserver(document.body, selector, this, { outletName });\n        this.selectorObserverMap.set(outletName, selectorObserver);\n        selectorObserver.start();\n    }\n    setupAttributeObserverForOutlet(outletName) {\n        const attributeName = this.attributeNameForOutletName(outletName);\n        const attributeObserver = new AttributeObserver(this.scope.element, attributeName, this);\n        this.attributeObserverMap.set(outletName, attributeObserver);\n        attributeObserver.start();\n    }\n    selector(outletName) {\n        return this.scope.outlets.getSelectorForOutletName(outletName);\n    }\n    attributeNameForOutletName(outletName) {\n        return this.scope.schema.outletAttributeForScope(this.identifier, outletName);\n    }\n    getOutletNameFromOutletAttributeName(attributeName) {\n        return this.outletDefinitions.find((outletName) => this.attributeNameForOutletName(outletName) === attributeName);\n    }\n    get outletDependencies() {\n        const dependencies = new Multimap();\n        this.router.modules.forEach((module) => {\n            const constructor = module.definition.controllerConstructor;\n            const outlets = readInheritableStaticArrayValues(constructor, \"outlets\");\n            outlets.forEach((outlet) => dependencies.add(outlet, module.identifier));\n        });\n        return dependencies;\n    }\n    get outletDefinitions() {\n        return this.outletDependencies.getKeysForValue(this.identifier);\n    }\n    get dependentControllerIdentifiers() {\n        return this.outletDependencies.getValuesForKey(this.identifier);\n    }\n    get dependentContexts() {\n        const identifiers = this.dependentControllerIdentifiers;\n        return this.router.contexts.filter((context) => identifiers.includes(context.identifier));\n    }\n    hasOutlet(element, outletName) {\n        return !!this.getOutlet(element, outletName) || !!this.getOutletFromMap(element, outletName);\n    }\n    getOutlet(element, outletName) {\n        return this.application.getControllerForElementAndIdentifier(element, outletName);\n    }\n    getOutletFromMap(element, outletName) {\n        return this.outletsByName.getValuesForKey(outletName).find((outlet) => outlet.element === element);\n    }\n    get scope() {\n        return this.context.scope;\n    }\n    get schema() {\n        return this.context.schema;\n    }\n    get identifier() {\n        return this.context.identifier;\n    }\n    get application() {\n        return this.context.application;\n    }\n    get router() {\n        return this.application.router;\n    }\n}\n\nclass Context {\n    constructor(module, scope) {\n        this.logDebugActivity = (functionName, detail = {}) => {\n            const { identifier, controller, element } = this;\n            detail = Object.assign({ identifier, controller, element }, detail);\n            this.application.logDebugActivity(this.identifier, functionName, detail);\n        };\n        this.module = module;\n        this.scope = scope;\n        this.controller = new module.controllerConstructor(this);\n        this.bindingObserver = new BindingObserver(this, this.dispatcher);\n        this.valueObserver = new ValueObserver(this, this.controller);\n        this.targetObserver = new TargetObserver(this, this);\n        this.outletObserver = new OutletObserver(this, this);\n        try {\n            this.controller.initialize();\n            this.logDebugActivity(\"initialize\");\n        }\n        catch (error) {\n            this.handleError(error, \"initializing controller\");\n        }\n    }\n    connect() {\n        this.bindingObserver.start();\n        this.valueObserver.start();\n        this.targetObserver.start();\n        this.outletObserver.start();\n        try {\n            this.controller.connect();\n            this.logDebugActivity(\"connect\");\n        }\n        catch (error) {\n            this.handleError(error, \"connecting controller\");\n        }\n    }\n    refresh() {\n        this.outletObserver.refresh();\n    }\n    disconnect() {\n        try {\n            this.controller.disconnect();\n            this.logDebugActivity(\"disconnect\");\n        }\n        catch (error) {\n            this.handleError(error, \"disconnecting controller\");\n        }\n        this.outletObserver.stop();\n        this.targetObserver.stop();\n        this.valueObserver.stop();\n        this.bindingObserver.stop();\n    }\n    get application() {\n        return this.module.application;\n    }\n    get identifier() {\n        return this.module.identifier;\n    }\n    get schema() {\n        return this.application.schema;\n    }\n    get dispatcher() {\n        return this.application.dispatcher;\n    }\n    get element() {\n        return this.scope.element;\n    }\n    get parentElement() {\n        return this.element.parentElement;\n    }\n    handleError(error, message, detail = {}) {\n        const { identifier, controller, element } = this;\n        detail = Object.assign({ identifier, controller, element }, detail);\n        this.application.handleError(error, `Error ${message}`, detail);\n    }\n    targetConnected(element, name) {\n        this.invokeControllerMethod(`${name}TargetConnected`, element);\n    }\n    targetDisconnected(element, name) {\n        this.invokeControllerMethod(`${name}TargetDisconnected`, element);\n    }\n    outletConnected(outlet, element, name) {\n        this.invokeControllerMethod(`${namespaceCamelize(name)}OutletConnected`, outlet, element);\n    }\n    outletDisconnected(outlet, element, name) {\n        this.invokeControllerMethod(`${namespaceCamelize(name)}OutletDisconnected`, outlet, element);\n    }\n    invokeControllerMethod(methodName, ...args) {\n        const controller = this.controller;\n        if (typeof controller[methodName] == \"function\") {\n            controller[methodName](...args);\n        }\n    }\n}\n\nfunction bless(constructor) {\n    return shadow(constructor, getBlessedProperties(constructor));\n}\nfunction shadow(constructor, properties) {\n    const shadowConstructor = extend(constructor);\n    const shadowProperties = getShadowProperties(constructor.prototype, properties);\n    Object.defineProperties(shadowConstructor.prototype, shadowProperties);\n    return shadowConstructor;\n}\nfunction getBlessedProperties(constructor) {\n    const blessings = readInheritableStaticArrayValues(constructor, \"blessings\");\n    return blessings.reduce((blessedProperties, blessing) => {\n        const properties = blessing(constructor);\n        for (const key in properties) {\n            const descriptor = blessedProperties[key] || {};\n            blessedProperties[key] = Object.assign(descriptor, properties[key]);\n        }\n        return blessedProperties;\n    }, {});\n}\nfunction getShadowProperties(prototype, properties) {\n    return getOwnKeys(properties).reduce((shadowProperties, key) => {\n        const descriptor = getShadowedDescriptor(prototype, properties, key);\n        if (descriptor) {\n            Object.assign(shadowProperties, { [key]: descriptor });\n        }\n        return shadowProperties;\n    }, {});\n}\nfunction getShadowedDescriptor(prototype, properties, key) {\n    const shadowingDescriptor = Object.getOwnPropertyDescriptor(prototype, key);\n    const shadowedByValue = shadowingDescriptor && \"value\" in shadowingDescriptor;\n    if (!shadowedByValue) {\n        const descriptor = Object.getOwnPropertyDescriptor(properties, key).value;\n        if (shadowingDescriptor) {\n            descriptor.get = shadowingDescriptor.get || descriptor.get;\n            descriptor.set = shadowingDescriptor.set || descriptor.set;\n        }\n        return descriptor;\n    }\n}\nconst getOwnKeys = (() => {\n    if (typeof Object.getOwnPropertySymbols == \"function\") {\n        return (object) => [...Object.getOwnPropertyNames(object), ...Object.getOwnPropertySymbols(object)];\n    }\n    else {\n        return Object.getOwnPropertyNames;\n    }\n})();\nconst extend = (() => {\n    function extendWithReflect(constructor) {\n        function extended() {\n            return Reflect.construct(constructor, arguments, new.target);\n        }\n        extended.prototype = Object.create(constructor.prototype, {\n            constructor: { value: extended },\n        });\n        Reflect.setPrototypeOf(extended, constructor);\n        return extended;\n    }\n    function testReflectExtension() {\n        const a = function () {\n            this.a.call(this);\n        };\n        const b = extendWithReflect(a);\n        b.prototype.a = function () { };\n        return new b();\n    }\n    try {\n        testReflectExtension();\n        return extendWithReflect;\n    }\n    catch (error) {\n        return (constructor) => class extended extends constructor {\n        };\n    }\n})();\n\nfunction blessDefinition(definition) {\n    return {\n        identifier: definition.identifier,\n        controllerConstructor: bless(definition.controllerConstructor),\n    };\n}\n\nclass Module {\n    constructor(application, definition) {\n        this.application = application;\n        this.definition = blessDefinition(definition);\n        this.contextsByScope = new WeakMap();\n        this.connectedContexts = new Set();\n    }\n    get identifier() {\n        return this.definition.identifier;\n    }\n    get controllerConstructor() {\n        return this.definition.controllerConstructor;\n    }\n    get contexts() {\n        return Array.from(this.connectedContexts);\n    }\n    connectContextForScope(scope) {\n        const context = this.fetchContextForScope(scope);\n        this.connectedContexts.add(context);\n        context.connect();\n    }\n    disconnectContextForScope(scope) {\n        const context = this.contextsByScope.get(scope);\n        if (context) {\n            this.connectedContexts.delete(context);\n            context.disconnect();\n        }\n    }\n    fetchContextForScope(scope) {\n        let context = this.contextsByScope.get(scope);\n        if (!context) {\n            context = new Context(this, scope);\n            this.contextsByScope.set(scope, context);\n        }\n        return context;\n    }\n}\n\nclass ClassMap {\n    constructor(scope) {\n        this.scope = scope;\n    }\n    has(name) {\n        return this.data.has(this.getDataKey(name));\n    }\n    get(name) {\n        return this.getAll(name)[0];\n    }\n    getAll(name) {\n        const tokenString = this.data.get(this.getDataKey(name)) || \"\";\n        return tokenize(tokenString);\n    }\n    getAttributeName(name) {\n        return this.data.getAttributeNameForKey(this.getDataKey(name));\n    }\n    getDataKey(name) {\n        return `${name}-class`;\n    }\n    get data() {\n        return this.scope.data;\n    }\n}\n\nclass DataMap {\n    constructor(scope) {\n        this.scope = scope;\n    }\n    get element() {\n        return this.scope.element;\n    }\n    get identifier() {\n        return this.scope.identifier;\n    }\n    get(key) {\n        const name = this.getAttributeNameForKey(key);\n        return this.element.getAttribute(name);\n    }\n    set(key, value) {\n        const name = this.getAttributeNameForKey(key);\n        this.element.setAttribute(name, value);\n        return this.get(key);\n    }\n    has(key) {\n        const name = this.getAttributeNameForKey(key);\n        return this.element.hasAttribute(name);\n    }\n    delete(key) {\n        if (this.has(key)) {\n            const name = this.getAttributeNameForKey(key);\n            this.element.removeAttribute(name);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    getAttributeNameForKey(key) {\n        return `data-${this.identifier}-${dasherize(key)}`;\n    }\n}\n\nclass Guide {\n    constructor(logger) {\n        this.warnedKeysByObject = new WeakMap();\n        this.logger = logger;\n    }\n    warn(object, key, message) {\n        let warnedKeys = this.warnedKeysByObject.get(object);\n        if (!warnedKeys) {\n            warnedKeys = new Set();\n            this.warnedKeysByObject.set(object, warnedKeys);\n        }\n        if (!warnedKeys.has(key)) {\n            warnedKeys.add(key);\n            this.logger.warn(message, object);\n        }\n    }\n}\n\nfunction attributeValueContainsToken(attributeName, token) {\n    return `[${attributeName}~=\"${token}\"]`;\n}\n\nclass TargetSet {\n    constructor(scope) {\n        this.scope = scope;\n    }\n    get element() {\n        return this.scope.element;\n    }\n    get identifier() {\n        return this.scope.identifier;\n    }\n    get schema() {\n        return this.scope.schema;\n    }\n    has(targetName) {\n        return this.find(targetName) != null;\n    }\n    find(...targetNames) {\n        return targetNames.reduce((target, targetName) => target || this.findTarget(targetName) || this.findLegacyTarget(targetName), undefined);\n    }\n    findAll(...targetNames) {\n        return targetNames.reduce((targets, targetName) => [\n            ...targets,\n            ...this.findAllTargets(targetName),\n            ...this.findAllLegacyTargets(targetName),\n        ], []);\n    }\n    findTarget(targetName) {\n        const selector = this.getSelectorForTargetName(targetName);\n        return this.scope.findElement(selector);\n    }\n    findAllTargets(targetName) {\n        const selector = this.getSelectorForTargetName(targetName);\n        return this.scope.findAllElements(selector);\n    }\n    getSelectorForTargetName(targetName) {\n        const attributeName = this.schema.targetAttributeForScope(this.identifier);\n        return attributeValueContainsToken(attributeName, targetName);\n    }\n    findLegacyTarget(targetName) {\n        const selector = this.getLegacySelectorForTargetName(targetName);\n        return this.deprecate(this.scope.findElement(selector), targetName);\n    }\n    findAllLegacyTargets(targetName) {\n        const selector = this.getLegacySelectorForTargetName(targetName);\n        return this.scope.findAllElements(selector).map((element) => this.deprecate(element, targetName));\n    }\n    getLegacySelectorForTargetName(targetName) {\n        const targetDescriptor = `${this.identifier}.${targetName}`;\n        return attributeValueContainsToken(this.schema.targetAttribute, targetDescriptor);\n    }\n    deprecate(element, targetName) {\n        if (element) {\n            const { identifier } = this;\n            const attributeName = this.schema.targetAttribute;\n            const revisedAttributeName = this.schema.targetAttributeForScope(identifier);\n            this.guide.warn(element, `target:${targetName}`, `Please replace ${attributeName}=\"${identifier}.${targetName}\" with ${revisedAttributeName}=\"${targetName}\". ` +\n                `The ${attributeName} attribute is deprecated and will be removed in a future version of Stimulus.`);\n        }\n        return element;\n    }\n    get guide() {\n        return this.scope.guide;\n    }\n}\n\nclass OutletSet {\n    constructor(scope, controllerElement) {\n        this.scope = scope;\n        this.controllerElement = controllerElement;\n    }\n    get element() {\n        return this.scope.element;\n    }\n    get identifier() {\n        return this.scope.identifier;\n    }\n    get schema() {\n        return this.scope.schema;\n    }\n    has(outletName) {\n        return this.find(outletName) != null;\n    }\n    find(...outletNames) {\n        return outletNames.reduce((outlet, outletName) => outlet || this.findOutlet(outletName), undefined);\n    }\n    findAll(...outletNames) {\n        return outletNames.reduce((outlets, outletName) => [...outlets, ...this.findAllOutlets(outletName)], []);\n    }\n    getSelectorForOutletName(outletName) {\n        const attributeName = this.schema.outletAttributeForScope(this.identifier, outletName);\n        return this.controllerElement.getAttribute(attributeName);\n    }\n    findOutlet(outletName) {\n        const selector = this.getSelectorForOutletName(outletName);\n        if (selector)\n            return this.findElement(selector, outletName);\n    }\n    findAllOutlets(outletName) {\n        const selector = this.getSelectorForOutletName(outletName);\n        return selector ? this.findAllElements(selector, outletName) : [];\n    }\n    findElement(selector, outletName) {\n        const elements = this.scope.queryElements(selector);\n        return elements.filter((element) => this.matchesElement(element, selector, outletName))[0];\n    }\n    findAllElements(selector, outletName) {\n        const elements = this.scope.queryElements(selector);\n        return elements.filter((element) => this.matchesElement(element, selector, outletName));\n    }\n    matchesElement(element, selector, outletName) {\n        const controllerAttribute = element.getAttribute(this.scope.schema.controllerAttribute) || \"\";\n        return element.matches(selector) && controllerAttribute.split(\" \").includes(outletName);\n    }\n}\n\nclass Scope {\n    constructor(schema, element, identifier, logger) {\n        this.targets = new TargetSet(this);\n        this.classes = new ClassMap(this);\n        this.data = new DataMap(this);\n        this.containsElement = (element) => {\n            return element.closest(this.controllerSelector) === this.element;\n        };\n        this.schema = schema;\n        this.element = element;\n        this.identifier = identifier;\n        this.guide = new Guide(logger);\n        this.outlets = new OutletSet(this.documentScope, element);\n    }\n    findElement(selector) {\n        return this.element.matches(selector) ? this.element : this.queryElements(selector).find(this.containsElement);\n    }\n    findAllElements(selector) {\n        return [\n            ...(this.element.matches(selector) ? [this.element] : []),\n            ...this.queryElements(selector).filter(this.containsElement),\n        ];\n    }\n    queryElements(selector) {\n        return Array.from(this.element.querySelectorAll(selector));\n    }\n    get controllerSelector() {\n        return attributeValueContainsToken(this.schema.controllerAttribute, this.identifier);\n    }\n    get isDocumentScope() {\n        return this.element === document.documentElement;\n    }\n    get documentScope() {\n        return this.isDocumentScope\n            ? this\n            : new Scope(this.schema, document.documentElement, this.identifier, this.guide.logger);\n    }\n}\n\nclass ScopeObserver {\n    constructor(element, schema, delegate) {\n        this.element = element;\n        this.schema = schema;\n        this.delegate = delegate;\n        this.valueListObserver = new ValueListObserver(this.element, this.controllerAttribute, this);\n        this.scopesByIdentifierByElement = new WeakMap();\n        this.scopeReferenceCounts = new WeakMap();\n    }\n    start() {\n        this.valueListObserver.start();\n    }\n    stop() {\n        this.valueListObserver.stop();\n    }\n    get controllerAttribute() {\n        return this.schema.controllerAttribute;\n    }\n    parseValueForToken(token) {\n        const { element, content: identifier } = token;\n        return this.parseValueForElementAndIdentifier(element, identifier);\n    }\n    parseValueForElementAndIdentifier(element, identifier) {\n        const scopesByIdentifier = this.fetchScopesByIdentifierForElement(element);\n        let scope = scopesByIdentifier.get(identifier);\n        if (!scope) {\n            scope = this.delegate.createScopeForElementAndIdentifier(element, identifier);\n            scopesByIdentifier.set(identifier, scope);\n        }\n        return scope;\n    }\n    elementMatchedValue(element, value) {\n        const referenceCount = (this.scopeReferenceCounts.get(value) || 0) + 1;\n        this.scopeReferenceCounts.set(value, referenceCount);\n        if (referenceCount == 1) {\n            this.delegate.scopeConnected(value);\n        }\n    }\n    elementUnmatchedValue(element, value) {\n        const referenceCount = this.scopeReferenceCounts.get(value);\n        if (referenceCount) {\n            this.scopeReferenceCounts.set(value, referenceCount - 1);\n            if (referenceCount == 1) {\n                this.delegate.scopeDisconnected(value);\n            }\n        }\n    }\n    fetchScopesByIdentifierForElement(element) {\n        let scopesByIdentifier = this.scopesByIdentifierByElement.get(element);\n        if (!scopesByIdentifier) {\n            scopesByIdentifier = new Map();\n            this.scopesByIdentifierByElement.set(element, scopesByIdentifier);\n        }\n        return scopesByIdentifier;\n    }\n}\n\nclass Router {\n    constructor(application) {\n        this.application = application;\n        this.scopeObserver = new ScopeObserver(this.element, this.schema, this);\n        this.scopesByIdentifier = new Multimap();\n        this.modulesByIdentifier = new Map();\n    }\n    get element() {\n        return this.application.element;\n    }\n    get schema() {\n        return this.application.schema;\n    }\n    get logger() {\n        return this.application.logger;\n    }\n    get controllerAttribute() {\n        return this.schema.controllerAttribute;\n    }\n    get modules() {\n        return Array.from(this.modulesByIdentifier.values());\n    }\n    get contexts() {\n        return this.modules.reduce((contexts, module) => contexts.concat(module.contexts), []);\n    }\n    start() {\n        this.scopeObserver.start();\n    }\n    stop() {\n        this.scopeObserver.stop();\n    }\n    loadDefinition(definition) {\n        this.unloadIdentifier(definition.identifier);\n        const module = new Module(this.application, definition);\n        this.connectModule(module);\n        const afterLoad = definition.controllerConstructor.afterLoad;\n        if (afterLoad) {\n            afterLoad.call(definition.controllerConstructor, definition.identifier, this.application);\n        }\n    }\n    unloadIdentifier(identifier) {\n        const module = this.modulesByIdentifier.get(identifier);\n        if (module) {\n            this.disconnectModule(module);\n        }\n    }\n    getContextForElementAndIdentifier(element, identifier) {\n        const module = this.modulesByIdentifier.get(identifier);\n        if (module) {\n            return module.contexts.find((context) => context.element == element);\n        }\n    }\n    proposeToConnectScopeForElementAndIdentifier(element, identifier) {\n        const scope = this.scopeObserver.parseValueForElementAndIdentifier(element, identifier);\n        if (scope) {\n            this.scopeObserver.elementMatchedValue(scope.element, scope);\n        }\n        else {\n            console.error(`Couldn't find or create scope for identifier: \"${identifier}\" and element:`, element);\n        }\n    }\n    handleError(error, message, detail) {\n        this.application.handleError(error, message, detail);\n    }\n    createScopeForElementAndIdentifier(element, identifier) {\n        return new Scope(this.schema, element, identifier, this.logger);\n    }\n    scopeConnected(scope) {\n        this.scopesByIdentifier.add(scope.identifier, scope);\n        const module = this.modulesByIdentifier.get(scope.identifier);\n        if (module) {\n            module.connectContextForScope(scope);\n        }\n    }\n    scopeDisconnected(scope) {\n        this.scopesByIdentifier.delete(scope.identifier, scope);\n        const module = this.modulesByIdentifier.get(scope.identifier);\n        if (module) {\n            module.disconnectContextForScope(scope);\n        }\n    }\n    connectModule(module) {\n        this.modulesByIdentifier.set(module.identifier, module);\n        const scopes = this.scopesByIdentifier.getValuesForKey(module.identifier);\n        scopes.forEach((scope) => module.connectContextForScope(scope));\n    }\n    disconnectModule(module) {\n        this.modulesByIdentifier.delete(module.identifier);\n        const scopes = this.scopesByIdentifier.getValuesForKey(module.identifier);\n        scopes.forEach((scope) => module.disconnectContextForScope(scope));\n    }\n}\n\nconst defaultSchema = {\n    controllerAttribute: \"data-controller\",\n    actionAttribute: \"data-action\",\n    targetAttribute: \"data-target\",\n    targetAttributeForScope: (identifier) => `data-${identifier}-target`,\n    outletAttributeForScope: (identifier, outlet) => `data-${identifier}-${outlet}-outlet`,\n    keyMappings: Object.assign(Object.assign({ enter: \"Enter\", tab: \"Tab\", esc: \"Escape\", space: \" \", up: \"ArrowUp\", down: \"ArrowDown\", left: \"ArrowLeft\", right: \"ArrowRight\", home: \"Home\", end: \"End\", page_up: \"PageUp\", page_down: \"PageDown\" }, objectFromEntries(\"abcdefghijklmnopqrstuvwxyz\".split(\"\").map((c) => [c, c]))), objectFromEntries(\"0123456789\".split(\"\").map((n) => [n, n]))),\n};\nfunction objectFromEntries(array) {\n    return array.reduce((memo, [k, v]) => (Object.assign(Object.assign({}, memo), { [k]: v })), {});\n}\n\nclass Application {\n    constructor(element = document.documentElement, schema = defaultSchema) {\n        this.logger = console;\n        this.debug = false;\n        this.logDebugActivity = (identifier, functionName, detail = {}) => {\n            if (this.debug) {\n                this.logFormattedMessage(identifier, functionName, detail);\n            }\n        };\n        this.element = element;\n        this.schema = schema;\n        this.dispatcher = new Dispatcher(this);\n        this.router = new Router(this);\n        this.actionDescriptorFilters = Object.assign({}, defaultActionDescriptorFilters);\n    }\n    static start(element, schema) {\n        const application = new this(element, schema);\n        application.start();\n        return application;\n    }\n    async start() {\n        await domReady();\n        this.logDebugActivity(\"application\", \"starting\");\n        this.dispatcher.start();\n        this.router.start();\n        this.logDebugActivity(\"application\", \"start\");\n    }\n    stop() {\n        this.logDebugActivity(\"application\", \"stopping\");\n        this.dispatcher.stop();\n        this.router.stop();\n        this.logDebugActivity(\"application\", \"stop\");\n    }\n    register(identifier, controllerConstructor) {\n        this.load({ identifier, controllerConstructor });\n    }\n    registerActionOption(name, filter) {\n        this.actionDescriptorFilters[name] = filter;\n    }\n    load(head, ...rest) {\n        const definitions = Array.isArray(head) ? head : [head, ...rest];\n        definitions.forEach((definition) => {\n            if (definition.controllerConstructor.shouldLoad) {\n                this.router.loadDefinition(definition);\n            }\n        });\n    }\n    unload(head, ...rest) {\n        const identifiers = Array.isArray(head) ? head : [head, ...rest];\n        identifiers.forEach((identifier) => this.router.unloadIdentifier(identifier));\n    }\n    get controllers() {\n        return this.router.contexts.map((context) => context.controller);\n    }\n    getControllerForElementAndIdentifier(element, identifier) {\n        const context = this.router.getContextForElementAndIdentifier(element, identifier);\n        return context ? context.controller : null;\n    }\n    handleError(error, message, detail) {\n        var _a;\n        this.logger.error(`%s\\n\\n%o\\n\\n%o`, message, error, detail);\n        (_a = window.onerror) === null || _a === void 0 ? void 0 : _a.call(window, message, \"\", 0, 0, error);\n    }\n    logFormattedMessage(identifier, functionName, detail = {}) {\n        detail = Object.assign({ application: this }, detail);\n        this.logger.groupCollapsed(`${identifier} #${functionName}`);\n        this.logger.log(\"details:\", Object.assign({}, detail));\n        this.logger.groupEnd();\n    }\n}\nfunction domReady() {\n    return new Promise((resolve) => {\n        if (document.readyState == \"loading\") {\n            document.addEventListener(\"DOMContentLoaded\", () => resolve());\n        }\n        else {\n            resolve();\n        }\n    });\n}\n\nfunction ClassPropertiesBlessing(constructor) {\n    const classes = readInheritableStaticArrayValues(constructor, \"classes\");\n    return classes.reduce((properties, classDefinition) => {\n        return Object.assign(properties, propertiesForClassDefinition(classDefinition));\n    }, {});\n}\nfunction propertiesForClassDefinition(key) {\n    return {\n        [`${key}Class`]: {\n            get() {\n                const { classes } = this;\n                if (classes.has(key)) {\n                    return classes.get(key);\n                }\n                else {\n                    const attribute = classes.getAttributeName(key);\n                    throw new Error(`Missing attribute \"${attribute}\"`);\n                }\n            },\n        },\n        [`${key}Classes`]: {\n            get() {\n                return this.classes.getAll(key);\n            },\n        },\n        [`has${capitalize(key)}Class`]: {\n            get() {\n                return this.classes.has(key);\n            },\n        },\n    };\n}\n\nfunction OutletPropertiesBlessing(constructor) {\n    const outlets = readInheritableStaticArrayValues(constructor, \"outlets\");\n    return outlets.reduce((properties, outletDefinition) => {\n        return Object.assign(properties, propertiesForOutletDefinition(outletDefinition));\n    }, {});\n}\nfunction getOutletController(controller, element, identifier) {\n    return controller.application.getControllerForElementAndIdentifier(element, identifier);\n}\nfunction getControllerAndEnsureConnectedScope(controller, element, outletName) {\n    let outletController = getOutletController(controller, element, outletName);\n    if (outletController)\n        return outletController;\n    controller.application.router.proposeToConnectScopeForElementAndIdentifier(element, outletName);\n    outletController = getOutletController(controller, element, outletName);\n    if (outletController)\n        return outletController;\n}\nfunction propertiesForOutletDefinition(name) {\n    const camelizedName = namespaceCamelize(name);\n    return {\n        [`${camelizedName}Outlet`]: {\n            get() {\n                const outletElement = this.outlets.find(name);\n                const selector = this.outlets.getSelectorForOutletName(name);\n                if (outletElement) {\n                    const outletController = getControllerAndEnsureConnectedScope(this, outletElement, name);\n                    if (outletController)\n                        return outletController;\n                    throw new Error(`The provided outlet element is missing an outlet controller \"${name}\" instance for host controller \"${this.identifier}\"`);\n                }\n                throw new Error(`Missing outlet element \"${name}\" for host controller \"${this.identifier}\". Stimulus couldn't find a matching outlet element using selector \"${selector}\".`);\n            },\n        },\n        [`${camelizedName}Outlets`]: {\n            get() {\n                const outlets = this.outlets.findAll(name);\n                if (outlets.length > 0) {\n                    return outlets\n                        .map((outletElement) => {\n                        const outletController = getControllerAndEnsureConnectedScope(this, outletElement, name);\n                        if (outletController)\n                            return outletController;\n                        console.warn(`The provided outlet element is missing an outlet controller \"${name}\" instance for host controller \"${this.identifier}\"`, outletElement);\n                    })\n                        .filter((controller) => controller);\n                }\n                return [];\n            },\n        },\n        [`${camelizedName}OutletElement`]: {\n            get() {\n                const outletElement = this.outlets.find(name);\n                const selector = this.outlets.getSelectorForOutletName(name);\n                if (outletElement) {\n                    return outletElement;\n                }\n                else {\n                    throw new Error(`Missing outlet element \"${name}\" for host controller \"${this.identifier}\". Stimulus couldn't find a matching outlet element using selector \"${selector}\".`);\n                }\n            },\n        },\n        [`${camelizedName}OutletElements`]: {\n            get() {\n                return this.outlets.findAll(name);\n            },\n        },\n        [`has${capitalize(camelizedName)}Outlet`]: {\n            get() {\n                return this.outlets.has(name);\n            },\n        },\n    };\n}\n\nfunction TargetPropertiesBlessing(constructor) {\n    const targets = readInheritableStaticArrayValues(constructor, \"targets\");\n    return targets.reduce((properties, targetDefinition) => {\n        return Object.assign(properties, propertiesForTargetDefinition(targetDefinition));\n    }, {});\n}\nfunction propertiesForTargetDefinition(name) {\n    return {\n        [`${name}Target`]: {\n            get() {\n                const target = this.targets.find(name);\n                if (target) {\n                    return target;\n                }\n                else {\n                    throw new Error(`Missing target element \"${name}\" for \"${this.identifier}\" controller`);\n                }\n            },\n        },\n        [`${name}Targets`]: {\n            get() {\n                return this.targets.findAll(name);\n            },\n        },\n        [`has${capitalize(name)}Target`]: {\n            get() {\n                return this.targets.has(name);\n            },\n        },\n    };\n}\n\nfunction ValuePropertiesBlessing(constructor) {\n    const valueDefinitionPairs = readInheritableStaticObjectPairs(constructor, \"values\");\n    const propertyDescriptorMap = {\n        valueDescriptorMap: {\n            get() {\n                return valueDefinitionPairs.reduce((result, valueDefinitionPair) => {\n                    const valueDescriptor = parseValueDefinitionPair(valueDefinitionPair, this.identifier);\n                    const attributeName = this.data.getAttributeNameForKey(valueDescriptor.key);\n                    return Object.assign(result, { [attributeName]: valueDescriptor });\n                }, {});\n            },\n        },\n    };\n    return valueDefinitionPairs.reduce((properties, valueDefinitionPair) => {\n        return Object.assign(properties, propertiesForValueDefinitionPair(valueDefinitionPair));\n    }, propertyDescriptorMap);\n}\nfunction propertiesForValueDefinitionPair(valueDefinitionPair, controller) {\n    const definition = parseValueDefinitionPair(valueDefinitionPair, controller);\n    const { key, name, reader: read, writer: write } = definition;\n    return {\n        [name]: {\n            get() {\n                const value = this.data.get(key);\n                if (value !== null) {\n                    return read(value);\n                }\n                else {\n                    return definition.defaultValue;\n                }\n            },\n            set(value) {\n                if (value === undefined) {\n                    this.data.delete(key);\n                }\n                else {\n                    this.data.set(key, write(value));\n                }\n            },\n        },\n        [`has${capitalize(name)}`]: {\n            get() {\n                return this.data.has(key) || definition.hasCustomDefaultValue;\n            },\n        },\n    };\n}\nfunction parseValueDefinitionPair([token, typeDefinition], controller) {\n    return valueDescriptorForTokenAndTypeDefinition({\n        controller,\n        token,\n        typeDefinition,\n    });\n}\nfunction parseValueTypeConstant(constant) {\n    switch (constant) {\n        case Array:\n            return \"array\";\n        case Boolean:\n            return \"boolean\";\n        case Number:\n            return \"number\";\n        case Object:\n            return \"object\";\n        case String:\n            return \"string\";\n    }\n}\nfunction parseValueTypeDefault(defaultValue) {\n    switch (typeof defaultValue) {\n        case \"boolean\":\n            return \"boolean\";\n        case \"number\":\n            return \"number\";\n        case \"string\":\n            return \"string\";\n    }\n    if (Array.isArray(defaultValue))\n        return \"array\";\n    if (Object.prototype.toString.call(defaultValue) === \"[object Object]\")\n        return \"object\";\n}\nfunction parseValueTypeObject(payload) {\n    const { controller, token, typeObject } = payload;\n    const hasType = isSomething(typeObject.type);\n    const hasDefault = isSomething(typeObject.default);\n    const fullObject = hasType && hasDefault;\n    const onlyType = hasType && !hasDefault;\n    const onlyDefault = !hasType && hasDefault;\n    const typeFromObject = parseValueTypeConstant(typeObject.type);\n    const typeFromDefaultValue = parseValueTypeDefault(payload.typeObject.default);\n    if (onlyType)\n        return typeFromObject;\n    if (onlyDefault)\n        return typeFromDefaultValue;\n    if (typeFromObject !== typeFromDefaultValue) {\n        const propertyPath = controller ? `${controller}.${token}` : token;\n        throw new Error(`The specified default value for the Stimulus Value \"${propertyPath}\" must match the defined type \"${typeFromObject}\". The provided default value of \"${typeObject.default}\" is of type \"${typeFromDefaultValue}\".`);\n    }\n    if (fullObject)\n        return typeFromObject;\n}\nfunction parseValueTypeDefinition(payload) {\n    const { controller, token, typeDefinition } = payload;\n    const typeObject = { controller, token, typeObject: typeDefinition };\n    const typeFromObject = parseValueTypeObject(typeObject);\n    const typeFromDefaultValue = parseValueTypeDefault(typeDefinition);\n    const typeFromConstant = parseValueTypeConstant(typeDefinition);\n    const type = typeFromObject || typeFromDefaultValue || typeFromConstant;\n    if (type)\n        return type;\n    const propertyPath = controller ? `${controller}.${typeDefinition}` : token;\n    throw new Error(`Unknown value type \"${propertyPath}\" for \"${token}\" value`);\n}\nfunction defaultValueForDefinition(typeDefinition) {\n    const constant = parseValueTypeConstant(typeDefinition);\n    if (constant)\n        return defaultValuesByType[constant];\n    const hasDefault = hasProperty(typeDefinition, \"default\");\n    const hasType = hasProperty(typeDefinition, \"type\");\n    const typeObject = typeDefinition;\n    if (hasDefault)\n        return typeObject.default;\n    if (hasType) {\n        const { type } = typeObject;\n        const constantFromType = parseValueTypeConstant(type);\n        if (constantFromType)\n            return defaultValuesByType[constantFromType];\n    }\n    return typeDefinition;\n}\nfunction valueDescriptorForTokenAndTypeDefinition(payload) {\n    const { token, typeDefinition } = payload;\n    const key = `${dasherize(token)}-value`;\n    const type = parseValueTypeDefinition(payload);\n    return {\n        type,\n        key,\n        name: camelize(key),\n        get defaultValue() {\n            return defaultValueForDefinition(typeDefinition);\n        },\n        get hasCustomDefaultValue() {\n            return parseValueTypeDefault(typeDefinition) !== undefined;\n        },\n        reader: readers[type],\n        writer: writers[type] || writers.default,\n    };\n}\nconst defaultValuesByType = {\n    get array() {\n        return [];\n    },\n    boolean: false,\n    number: 0,\n    get object() {\n        return {};\n    },\n    string: \"\",\n};\nconst readers = {\n    array(value) {\n        const array = JSON.parse(value);\n        if (!Array.isArray(array)) {\n            throw new TypeError(`expected value of type \"array\" but instead got value \"${value}\" of type \"${parseValueTypeDefault(array)}\"`);\n        }\n        return array;\n    },\n    boolean(value) {\n        return !(value == \"0\" || String(value).toLowerCase() == \"false\");\n    },\n    number(value) {\n        return Number(value.replace(/_/g, \"\"));\n    },\n    object(value) {\n        const object = JSON.parse(value);\n        if (object === null || typeof object != \"object\" || Array.isArray(object)) {\n            throw new TypeError(`expected value of type \"object\" but instead got value \"${value}\" of type \"${parseValueTypeDefault(object)}\"`);\n        }\n        return object;\n    },\n    string(value) {\n        return value;\n    },\n};\nconst writers = {\n    default: writeString,\n    array: writeJSON,\n    object: writeJSON,\n};\nfunction writeJSON(value) {\n    return JSON.stringify(value);\n}\nfunction writeString(value) {\n    return `${value}`;\n}\n\nclass Controller {\n    constructor(context) {\n        this.context = context;\n    }\n    static get shouldLoad() {\n        return true;\n    }\n    static afterLoad(_identifier, _application) {\n        return;\n    }\n    get application() {\n        return this.context.application;\n    }\n    get scope() {\n        return this.context.scope;\n    }\n    get element() {\n        return this.scope.element;\n    }\n    get identifier() {\n        return this.scope.identifier;\n    }\n    get targets() {\n        return this.scope.targets;\n    }\n    get outlets() {\n        return this.scope.outlets;\n    }\n    get classes() {\n        return this.scope.classes;\n    }\n    get data() {\n        return this.scope.data;\n    }\n    initialize() {\n    }\n    connect() {\n    }\n    disconnect() {\n    }\n    dispatch(eventName, { target = this.element, detail = {}, prefix = this.identifier, bubbles = true, cancelable = true, } = {}) {\n        const type = prefix ? `${prefix}:${eventName}` : eventName;\n        const event = new CustomEvent(type, { detail, bubbles, cancelable });\n        target.dispatchEvent(event);\n        return event;\n    }\n}\nController.blessings = [\n    ClassPropertiesBlessing,\n    TargetPropertiesBlessing,\n    ValuePropertiesBlessing,\n    OutletPropertiesBlessing,\n];\nController.targets = [];\nController.outlets = [];\nController.values = {};\n\nexport { Application, AttributeObserver, Context, Controller, ElementObserver, IndexedMultimap, Multimap, SelectorObserver, StringMapObserver, TokenListObserver, ValueListObserver, add, defaultSchema, del, fetch, prune };\n", "import { Application } from \"@hotwired/stimulus\"\n\nconst application = Application.start()\n\n// Configure Stimulus development experience\napplication.debug = false\nwindow.Stimulus   = application\n\nexport { application }\n", "import { Controller } from \"@hotwired/stimulus\"\n\nexport default class extends Controller {\n  connect() {\n    this.element.textContent = \"Hello World!\"\n  }\n}\n", "// This file is auto-generated by ./bin/rails stimulus:manifest:update\n// Run that command whenever you add a new controller or create them with\n// ./bin/rails generate stimulus controllerName\n\nimport { application } from \"./application\"\n\nimport HelloController from \"./hello_controller\"\napplication.register(\"hello\", HelloController)\n", "// Entry point for the build script in your package.json\nimport \"@hotwired/turbo-rails\"\nimport \"./controllers\"\nimport { Application } from \"@hotwired/stimulus\"\nimport { Terminal } from 'xterm';\n\n\nimport Rails from \"@rails/ujs\";\nRails.start();\n\nrequire(\"@rails/activestorage\").start();\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const terminal = new Terminal();\n    terminal.open(document.getElementById('terminal-container'));\n    terminal.write('Bienvenido a tu Terminal\\n');\n  });", "/*\nUnobtrusive JavaScript\nhttps://github.com/rails/rails/blob/main/actionview/app/javascript\nReleased under the MIT license\n */\nconst linkClickSelector = \"a[data-confirm], a[data-method], a[data-remote]:not([disabled]), a[data-disable-with], a[data-disable]\";\n\nconst buttonClickSelector = {\n  selector: \"button[data-remote]:not([form]), button[data-confirm]:not([form])\",\n  exclude: \"form button\"\n};\n\nconst inputChangeSelector = \"select[data-remote], input[data-remote], textarea[data-remote]\";\n\nconst formSubmitSelector = \"form:not([data-turbo=true])\";\n\nconst formInputClickSelector = \"form:not([data-turbo=true]) input[type=submit], form:not([data-turbo=true]) input[type=image], form:not([data-turbo=true]) button[type=submit], form:not([data-turbo=true]) button:not([type]), input[type=submit][form], input[type=image][form], button[type=submit][form], button[form]:not([type])\";\n\nconst formDisableSelector = \"input[data-disable-with]:enabled, button[data-disable-with]:enabled, textarea[data-disable-with]:enabled, input[data-disable]:enabled, button[data-disable]:enabled, textarea[data-disable]:enabled\";\n\nconst formEnableSelector = \"input[data-disable-with]:disabled, button[data-disable-with]:disabled, textarea[data-disable-with]:disabled, input[data-disable]:disabled, button[data-disable]:disabled, textarea[data-disable]:disabled\";\n\nconst fileInputSelector = \"input[name][type=file]:not([disabled])\";\n\nconst linkDisableSelector = \"a[data-disable-with], a[data-disable]\";\n\nconst buttonDisableSelector = \"button[data-remote][data-disable-with], button[data-remote][data-disable]\";\n\nlet nonce = null;\n\nconst loadCSPNonce = () => {\n  const metaTag = document.querySelector(\"meta[name=csp-nonce]\");\n  return nonce = metaTag && metaTag.content;\n};\n\nconst cspNonce = () => nonce || loadCSPNonce();\n\nconst m = Element.prototype.matches || Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector;\n\nconst matches = function(element, selector) {\n  if (selector.exclude) {\n    return m.call(element, selector.selector) && !m.call(element, selector.exclude);\n  } else {\n    return m.call(element, selector);\n  }\n};\n\nconst EXPANDO = \"_ujsData\";\n\nconst getData = (element, key) => element[EXPANDO] ? element[EXPANDO][key] : undefined;\n\nconst setData = function(element, key, value) {\n  if (!element[EXPANDO]) {\n    element[EXPANDO] = {};\n  }\n  return element[EXPANDO][key] = value;\n};\n\nconst $ = selector => Array.prototype.slice.call(document.querySelectorAll(selector));\n\nconst isContentEditable = function(element) {\n  var isEditable = false;\n  do {\n    if (element.isContentEditable) {\n      isEditable = true;\n      break;\n    }\n    element = element.parentElement;\n  } while (element);\n  return isEditable;\n};\n\nconst csrfToken = () => {\n  const meta = document.querySelector(\"meta[name=csrf-token]\");\n  return meta && meta.content;\n};\n\nconst csrfParam = () => {\n  const meta = document.querySelector(\"meta[name=csrf-param]\");\n  return meta && meta.content;\n};\n\nconst CSRFProtection = xhr => {\n  const token = csrfToken();\n  if (token) {\n    return xhr.setRequestHeader(\"X-CSRF-Token\", token);\n  }\n};\n\nconst refreshCSRFTokens = () => {\n  const token = csrfToken();\n  const param = csrfParam();\n  if (token && param) {\n    return $('form input[name=\"' + param + '\"]').forEach((input => input.value = token));\n  }\n};\n\nconst AcceptHeaders = {\n  \"*\": \"*/*\",\n  text: \"text/plain\",\n  html: \"text/html\",\n  xml: \"application/xml, text/xml\",\n  json: \"application/json, text/javascript\",\n  script: \"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"\n};\n\nconst ajax = options => {\n  options = prepareOptions(options);\n  var xhr = createXHR(options, (function() {\n    const response = processResponse(xhr.response != null ? xhr.response : xhr.responseText, xhr.getResponseHeader(\"Content-Type\"));\n    if (Math.floor(xhr.status / 100) === 2) {\n      if (typeof options.success === \"function\") {\n        options.success(response, xhr.statusText, xhr);\n      }\n    } else {\n      if (typeof options.error === \"function\") {\n        options.error(response, xhr.statusText, xhr);\n      }\n    }\n    return typeof options.complete === \"function\" ? options.complete(xhr, xhr.statusText) : undefined;\n  }));\n  if (options.beforeSend && !options.beforeSend(xhr, options)) {\n    return false;\n  }\n  if (xhr.readyState === XMLHttpRequest.OPENED) {\n    return xhr.send(options.data);\n  }\n};\n\nvar prepareOptions = function(options) {\n  options.url = options.url || location.href;\n  options.type = options.type.toUpperCase();\n  if (options.type === \"GET\" && options.data) {\n    if (options.url.indexOf(\"?\") < 0) {\n      options.url += \"?\" + options.data;\n    } else {\n      options.url += \"&\" + options.data;\n    }\n  }\n  if (!(options.dataType in AcceptHeaders)) {\n    options.dataType = \"*\";\n  }\n  options.accept = AcceptHeaders[options.dataType];\n  if (options.dataType !== \"*\") {\n    options.accept += \", */*; q=0.01\";\n  }\n  return options;\n};\n\nvar createXHR = function(options, done) {\n  const xhr = new XMLHttpRequest;\n  xhr.open(options.type, options.url, true);\n  xhr.setRequestHeader(\"Accept\", options.accept);\n  if (typeof options.data === \"string\") {\n    xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\n  }\n  if (!options.crossDomain) {\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n    CSRFProtection(xhr);\n  }\n  xhr.withCredentials = !!options.withCredentials;\n  xhr.onreadystatechange = function() {\n    if (xhr.readyState === XMLHttpRequest.DONE) {\n      return done(xhr);\n    }\n  };\n  return xhr;\n};\n\nvar processResponse = function(response, type) {\n  if (typeof response === \"string\" && typeof type === \"string\") {\n    if (type.match(/\\bjson\\b/)) {\n      try {\n        response = JSON.parse(response);\n      } catch (error) {}\n    } else if (type.match(/\\b(?:java|ecma)script\\b/)) {\n      const script = document.createElement(\"script\");\n      script.setAttribute(\"nonce\", cspNonce());\n      script.text = response;\n      document.head.appendChild(script).parentNode.removeChild(script);\n    } else if (type.match(/\\b(xml|html|svg)\\b/)) {\n      const parser = new DOMParser;\n      type = type.replace(/;.+/, \"\");\n      try {\n        response = parser.parseFromString(response, type);\n      } catch (error1) {}\n    }\n  }\n  return response;\n};\n\nconst href = element => element.href;\n\nconst isCrossDomain = function(url) {\n  const originAnchor = document.createElement(\"a\");\n  originAnchor.href = location.href;\n  const urlAnchor = document.createElement(\"a\");\n  try {\n    urlAnchor.href = url;\n    return !((!urlAnchor.protocol || urlAnchor.protocol === \":\") && !urlAnchor.host || originAnchor.protocol + \"//\" + originAnchor.host === urlAnchor.protocol + \"//\" + urlAnchor.host);\n  } catch (e) {\n    return true;\n  }\n};\n\nlet preventDefault;\n\nlet {CustomEvent: CustomEvent} = window;\n\nif (typeof CustomEvent !== \"function\") {\n  CustomEvent = function(event, params) {\n    const evt = document.createEvent(\"CustomEvent\");\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    return evt;\n  };\n  CustomEvent.prototype = window.Event.prototype;\n  ({preventDefault: preventDefault} = CustomEvent.prototype);\n  CustomEvent.prototype.preventDefault = function() {\n    const result = preventDefault.call(this);\n    if (this.cancelable && !this.defaultPrevented) {\n      Object.defineProperty(this, \"defaultPrevented\", {\n        get() {\n          return true;\n        }\n      });\n    }\n    return result;\n  };\n}\n\nconst fire = (obj, name, data) => {\n  const event = new CustomEvent(name, {\n    bubbles: true,\n    cancelable: true,\n    detail: data\n  });\n  obj.dispatchEvent(event);\n  return !event.defaultPrevented;\n};\n\nconst stopEverything = e => {\n  fire(e.target, \"ujs:everythingStopped\");\n  e.preventDefault();\n  e.stopPropagation();\n  e.stopImmediatePropagation();\n};\n\nconst delegate = (element, selector, eventType, handler) => element.addEventListener(eventType, (function(e) {\n  let {target: target} = e;\n  while (!!(target instanceof Element) && !matches(target, selector)) {\n    target = target.parentNode;\n  }\n  if (target instanceof Element && handler.call(target, e) === false) {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n}));\n\nconst toArray = e => Array.prototype.slice.call(e);\n\nconst serializeElement = (element, additionalParam) => {\n  let inputs = [ element ];\n  if (matches(element, \"form\")) {\n    inputs = toArray(element.elements);\n  }\n  const params = [];\n  inputs.forEach((function(input) {\n    if (!input.name || input.disabled) {\n      return;\n    }\n    if (matches(input, \"fieldset[disabled] *\")) {\n      return;\n    }\n    if (matches(input, \"select\")) {\n      toArray(input.options).forEach((function(option) {\n        if (option.selected) {\n          params.push({\n            name: input.name,\n            value: option.value\n          });\n        }\n      }));\n    } else if (input.checked || [ \"radio\", \"checkbox\", \"submit\" ].indexOf(input.type) === -1) {\n      params.push({\n        name: input.name,\n        value: input.value\n      });\n    }\n  }));\n  if (additionalParam) {\n    params.push(additionalParam);\n  }\n  return params.map((function(param) {\n    if (param.name) {\n      return `${encodeURIComponent(param.name)}=${encodeURIComponent(param.value)}`;\n    } else {\n      return param;\n    }\n  })).join(\"&\");\n};\n\nconst formElements = (form, selector) => {\n  if (matches(form, \"form\")) {\n    return toArray(form.elements).filter((el => matches(el, selector)));\n  } else {\n    return toArray(form.querySelectorAll(selector));\n  }\n};\n\nconst handleConfirmWithRails = rails => function(e) {\n  if (!allowAction(this, rails)) {\n    stopEverything(e);\n  }\n};\n\nconst confirm = (message, element) => window.confirm(message);\n\nvar allowAction = function(element, rails) {\n  let callback;\n  const message = element.getAttribute(\"data-confirm\");\n  if (!message) {\n    return true;\n  }\n  let answer = false;\n  if (fire(element, \"confirm\")) {\n    try {\n      answer = rails.confirm(message, element);\n    } catch (error) {}\n    callback = fire(element, \"confirm:complete\", [ answer ]);\n  }\n  return answer && callback;\n};\n\nconst handleDisabledElement = function(e) {\n  const element = this;\n  if (element.disabled) {\n    stopEverything(e);\n  }\n};\n\nconst enableElement = e => {\n  let element;\n  if (e instanceof Event) {\n    if (isXhrRedirect(e)) {\n      return;\n    }\n    element = e.target;\n  } else {\n    element = e;\n  }\n  if (isContentEditable(element)) {\n    return;\n  }\n  if (matches(element, linkDisableSelector)) {\n    return enableLinkElement(element);\n  } else if (matches(element, buttonDisableSelector) || matches(element, formEnableSelector)) {\n    return enableFormElement(element);\n  } else if (matches(element, formSubmitSelector)) {\n    return enableFormElements(element);\n  }\n};\n\nconst disableElement = e => {\n  const element = e instanceof Event ? e.target : e;\n  if (isContentEditable(element)) {\n    return;\n  }\n  if (matches(element, linkDisableSelector)) {\n    return disableLinkElement(element);\n  } else if (matches(element, buttonDisableSelector) || matches(element, formDisableSelector)) {\n    return disableFormElement(element);\n  } else if (matches(element, formSubmitSelector)) {\n    return disableFormElements(element);\n  }\n};\n\nvar disableLinkElement = function(element) {\n  if (getData(element, \"ujs:disabled\")) {\n    return;\n  }\n  const replacement = element.getAttribute(\"data-disable-with\");\n  if (replacement != null) {\n    setData(element, \"ujs:enable-with\", element.innerHTML);\n    element.innerHTML = replacement;\n  }\n  element.addEventListener(\"click\", stopEverything);\n  return setData(element, \"ujs:disabled\", true);\n};\n\nvar enableLinkElement = function(element) {\n  const originalText = getData(element, \"ujs:enable-with\");\n  if (originalText != null) {\n    element.innerHTML = originalText;\n    setData(element, \"ujs:enable-with\", null);\n  }\n  element.removeEventListener(\"click\", stopEverything);\n  return setData(element, \"ujs:disabled\", null);\n};\n\nvar disableFormElements = form => formElements(form, formDisableSelector).forEach(disableFormElement);\n\nvar disableFormElement = function(element) {\n  if (getData(element, \"ujs:disabled\")) {\n    return;\n  }\n  const replacement = element.getAttribute(\"data-disable-with\");\n  if (replacement != null) {\n    if (matches(element, \"button\")) {\n      setData(element, \"ujs:enable-with\", element.innerHTML);\n      element.innerHTML = replacement;\n    } else {\n      setData(element, \"ujs:enable-with\", element.value);\n      element.value = replacement;\n    }\n  }\n  element.disabled = true;\n  return setData(element, \"ujs:disabled\", true);\n};\n\nvar enableFormElements = form => formElements(form, formEnableSelector).forEach((element => enableFormElement(element)));\n\nvar enableFormElement = function(element) {\n  const originalText = getData(element, \"ujs:enable-with\");\n  if (originalText != null) {\n    if (matches(element, \"button\")) {\n      element.innerHTML = originalText;\n    } else {\n      element.value = originalText;\n    }\n    setData(element, \"ujs:enable-with\", null);\n  }\n  element.disabled = false;\n  return setData(element, \"ujs:disabled\", null);\n};\n\nvar isXhrRedirect = function(event) {\n  const xhr = event.detail ? event.detail[0] : undefined;\n  return xhr && xhr.getResponseHeader(\"X-Xhr-Redirect\");\n};\n\nconst handleMethodWithRails = rails => function(e) {\n  const link = this;\n  const method = link.getAttribute(\"data-method\");\n  if (!method) {\n    return;\n  }\n  if (isContentEditable(this)) {\n    return;\n  }\n  const href = rails.href(link);\n  const csrfToken$1 = csrfToken();\n  const csrfParam$1 = csrfParam();\n  const form = document.createElement(\"form\");\n  let formContent = `<input name='_method' value='${method}' type='hidden' />`;\n  if (csrfParam$1 && csrfToken$1 && !isCrossDomain(href)) {\n    formContent += `<input name='${csrfParam$1}' value='${csrfToken$1}' type='hidden' />`;\n  }\n  formContent += '<input type=\"submit\" />';\n  form.method = \"post\";\n  form.action = href;\n  form.target = link.target;\n  form.innerHTML = formContent;\n  form.style.display = \"none\";\n  document.body.appendChild(form);\n  form.querySelector('[type=\"submit\"]').click();\n  stopEverything(e);\n};\n\nconst isRemote = function(element) {\n  const value = element.getAttribute(\"data-remote\");\n  return value != null && value !== \"false\";\n};\n\nconst handleRemoteWithRails = rails => function(e) {\n  let data, method, url;\n  const element = this;\n  if (!isRemote(element)) {\n    return true;\n  }\n  if (!fire(element, \"ajax:before\")) {\n    fire(element, \"ajax:stopped\");\n    return false;\n  }\n  if (isContentEditable(element)) {\n    fire(element, \"ajax:stopped\");\n    return false;\n  }\n  const withCredentials = element.getAttribute(\"data-with-credentials\");\n  const dataType = element.getAttribute(\"data-type\") || \"script\";\n  if (matches(element, formSubmitSelector)) {\n    const button = getData(element, \"ujs:submit-button\");\n    method = getData(element, \"ujs:submit-button-formmethod\") || element.getAttribute(\"method\") || \"get\";\n    url = getData(element, \"ujs:submit-button-formaction\") || element.getAttribute(\"action\") || location.href;\n    if (method.toUpperCase() === \"GET\") {\n      url = url.replace(/\\?.*$/, \"\");\n    }\n    if (element.enctype === \"multipart/form-data\") {\n      data = new FormData(element);\n      if (button != null) {\n        data.append(button.name, button.value);\n      }\n    } else {\n      data = serializeElement(element, button);\n    }\n    setData(element, \"ujs:submit-button\", null);\n    setData(element, \"ujs:submit-button-formmethod\", null);\n    setData(element, \"ujs:submit-button-formaction\", null);\n  } else if (matches(element, buttonClickSelector) || matches(element, inputChangeSelector)) {\n    method = element.getAttribute(\"data-method\");\n    url = element.getAttribute(\"data-url\");\n    data = serializeElement(element, element.getAttribute(\"data-params\"));\n  } else {\n    method = element.getAttribute(\"data-method\");\n    url = rails.href(element);\n    data = element.getAttribute(\"data-params\");\n  }\n  ajax({\n    type: method || \"GET\",\n    url: url,\n    data: data,\n    dataType: dataType,\n    beforeSend(xhr, options) {\n      if (fire(element, \"ajax:beforeSend\", [ xhr, options ])) {\n        return fire(element, \"ajax:send\", [ xhr ]);\n      } else {\n        fire(element, \"ajax:stopped\");\n        return false;\n      }\n    },\n    success(...args) {\n      return fire(element, \"ajax:success\", args);\n    },\n    error(...args) {\n      return fire(element, \"ajax:error\", args);\n    },\n    complete(...args) {\n      return fire(element, \"ajax:complete\", args);\n    },\n    crossDomain: isCrossDomain(url),\n    withCredentials: withCredentials != null && withCredentials !== \"false\"\n  });\n  stopEverything(e);\n};\n\nconst formSubmitButtonClick = function(e) {\n  const button = this;\n  const {form: form} = button;\n  if (!form) {\n    return;\n  }\n  if (button.name) {\n    setData(form, \"ujs:submit-button\", {\n      name: button.name,\n      value: button.value\n    });\n  }\n  setData(form, \"ujs:formnovalidate-button\", button.formNoValidate);\n  setData(form, \"ujs:submit-button-formaction\", button.getAttribute(\"formaction\"));\n  return setData(form, \"ujs:submit-button-formmethod\", button.getAttribute(\"formmethod\"));\n};\n\nconst preventInsignificantClick = function(e) {\n  const link = this;\n  const method = (link.getAttribute(\"data-method\") || \"GET\").toUpperCase();\n  const data = link.getAttribute(\"data-params\");\n  const metaClick = e.metaKey || e.ctrlKey;\n  const insignificantMetaClick = metaClick && method === \"GET\" && !data;\n  const nonPrimaryMouseClick = e.button != null && e.button !== 0;\n  if (nonPrimaryMouseClick || insignificantMetaClick) {\n    e.stopImmediatePropagation();\n  }\n};\n\nconst Rails = {\n  $: $,\n  ajax: ajax,\n  buttonClickSelector: buttonClickSelector,\n  buttonDisableSelector: buttonDisableSelector,\n  confirm: confirm,\n  cspNonce: cspNonce,\n  csrfToken: csrfToken,\n  csrfParam: csrfParam,\n  CSRFProtection: CSRFProtection,\n  delegate: delegate,\n  disableElement: disableElement,\n  enableElement: enableElement,\n  fileInputSelector: fileInputSelector,\n  fire: fire,\n  formElements: formElements,\n  formEnableSelector: formEnableSelector,\n  formDisableSelector: formDisableSelector,\n  formInputClickSelector: formInputClickSelector,\n  formSubmitButtonClick: formSubmitButtonClick,\n  formSubmitSelector: formSubmitSelector,\n  getData: getData,\n  handleDisabledElement: handleDisabledElement,\n  href: href,\n  inputChangeSelector: inputChangeSelector,\n  isCrossDomain: isCrossDomain,\n  linkClickSelector: linkClickSelector,\n  linkDisableSelector: linkDisableSelector,\n  loadCSPNonce: loadCSPNonce,\n  matches: matches,\n  preventInsignificantClick: preventInsignificantClick,\n  refreshCSRFTokens: refreshCSRFTokens,\n  serializeElement: serializeElement,\n  setData: setData,\n  stopEverything: stopEverything\n};\n\nconst handleConfirm = handleConfirmWithRails(Rails);\n\nRails.handleConfirm = handleConfirm;\n\nconst handleMethod = handleMethodWithRails(Rails);\n\nRails.handleMethod = handleMethod;\n\nconst handleRemote = handleRemoteWithRails(Rails);\n\nRails.handleRemote = handleRemote;\n\nconst start = function() {\n  if (window._rails_loaded) {\n    throw new Error(\"rails-ujs has already been loaded!\");\n  }\n  window.addEventListener(\"pageshow\", (function() {\n    $(formEnableSelector).forEach((function(el) {\n      if (getData(el, \"ujs:disabled\")) {\n        enableElement(el);\n      }\n    }));\n    $(linkDisableSelector).forEach((function(el) {\n      if (getData(el, \"ujs:disabled\")) {\n        enableElement(el);\n      }\n    }));\n  }));\n  delegate(document, linkDisableSelector, \"ajax:complete\", enableElement);\n  delegate(document, linkDisableSelector, \"ajax:stopped\", enableElement);\n  delegate(document, buttonDisableSelector, \"ajax:complete\", enableElement);\n  delegate(document, buttonDisableSelector, \"ajax:stopped\", enableElement);\n  delegate(document, linkClickSelector, \"click\", preventInsignificantClick);\n  delegate(document, linkClickSelector, \"click\", handleDisabledElement);\n  delegate(document, linkClickSelector, \"click\", handleConfirm);\n  delegate(document, linkClickSelector, \"click\", disableElement);\n  delegate(document, linkClickSelector, \"click\", handleRemote);\n  delegate(document, linkClickSelector, \"click\", handleMethod);\n  delegate(document, buttonClickSelector, \"click\", preventInsignificantClick);\n  delegate(document, buttonClickSelector, \"click\", handleDisabledElement);\n  delegate(document, buttonClickSelector, \"click\", handleConfirm);\n  delegate(document, buttonClickSelector, \"click\", disableElement);\n  delegate(document, buttonClickSelector, \"click\", handleRemote);\n  delegate(document, inputChangeSelector, \"change\", handleDisabledElement);\n  delegate(document, inputChangeSelector, \"change\", handleConfirm);\n  delegate(document, inputChangeSelector, \"change\", handleRemote);\n  delegate(document, formSubmitSelector, \"submit\", handleDisabledElement);\n  delegate(document, formSubmitSelector, \"submit\", handleConfirm);\n  delegate(document, formSubmitSelector, \"submit\", handleRemote);\n  delegate(document, formSubmitSelector, \"submit\", (e => setTimeout((() => disableElement(e)), 13)));\n  delegate(document, formSubmitSelector, \"ajax:send\", disableElement);\n  delegate(document, formSubmitSelector, \"ajax:complete\", enableElement);\n  delegate(document, formInputClickSelector, \"click\", preventInsignificantClick);\n  delegate(document, formInputClickSelector, \"click\", handleDisabledElement);\n  delegate(document, formInputClickSelector, \"click\", handleConfirm);\n  delegate(document, formInputClickSelector, \"click\", formSubmitButtonClick);\n  document.addEventListener(\"DOMContentLoaded\", refreshCSRFTokens);\n  document.addEventListener(\"DOMContentLoaded\", loadCSPNonce);\n  return window._rails_loaded = true;\n};\n\nRails.start = start;\n\nif (typeof jQuery !== \"undefined\" && jQuery && jQuery.ajax) {\n  if (jQuery.rails) {\n    throw new Error(\"If you load both jquery_ujs and rails-ujs, use rails-ujs only.\");\n  }\n  jQuery.rails = Rails;\n  jQuery.ajaxPrefilter((function(options, originalOptions, xhr) {\n    if (!options.crossDomain) {\n      return CSRFProtection(xhr);\n    }\n  }));\n}\n\nexport { Rails as default };\n"],
  "mappings": "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AAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,C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",
  "names": ["consumer", "error", "consumer", "consumer", "subscription", "root", "factory", "exports", "module", "define", "amd", "a", "i", "self", "e", "t", "s", "r", "n", "o", "AccessibilityManager", "Disposable", "_terminal", "super", "_renderService", "_liveRegionLineCount", "_charsToConsume", "_charsToAnnounce", "this", "_accessibilityContainer", "document", "createElement", "classList", "add", "_rowContainer", "setAttribute", "_rowElements", "rows", "_createAccessibilityTreeNode", "appendChild", "_topBoundaryFocusListener", "_handleBoundaryFocus", "_bottomBoundaryFocusListener", "addEventListener", "length", "_refreshRowsDimensions", "_liveRegion", "_liveRegionDebouncer", "register", "TimeBasedDebouncer", "_renderRows", "bind", "element", "Error", "insertAdjacentElement", "onResize", "_handleResize", "onRender", "_refreshRows", "start", "end", "onScroll", "onA11yChar", "char", "_handleChar", "onLineFeed", "onA11yTab", "spaceCount", "_handleTab", "onKey", "_handleKey", "key", "onBlur", "_clearLiveRegion", "onDimensionsChange", "_screenDprMonitor", "ScreenDprMonitor", "window", "setListener", "addDisposableDomListener", "toDisposable", "remove", "MAX_ROWS_TO_READ", "shift", "textContent", "Strings", "tooMuchOutput", "isMac", "parentNode", "setTimeout", "keyChar", "test", "push", "refresh", "buffer", "setSize", "lines", "toString", "lineData", "translateBufferLineToString", "ydisp", "posInSet", "innerText", "_announceCharacters", "position", "boundaryElement", "target", "beforeBoundaryElement", "getAttribute", "relatedTarget", "topBoundaryElement", "bottomBoundaryElement", "pop", "removeChild", "removeEventListener", "newElement", "unshift", "scrollLines", "focus", "preventDefault", "stopImmediatePropagation", "children", "tabIndex", "_refreshRowDimensions", "dimensions", "css", "cell", "height", "style", "width", "canvas", "IRenderService", "prepareTextForTerminal", "text", "replace", "bracketTextForPaste", "bracketedPasteMode", "paste", "textarea", "coreService", "optionsService", "decPrivateModes", "rawOptions", "ignoreBracketedPasteMode", "triggerDataEvent", "value", "moveTextAreaUnderMouseCursor", "ev", "screenElement", "pos", "getBoundingClientRect", "left", "clientX", "top", "clientY", "zIndex", "selectionService", "clipboardData", "setData", "selectionText", "stopPropagation", "getData", "shouldSelectWord", "rightClickSelect", "select", "_color", "TwoKeyMap", "_css", "bg", "fg", "set", "get", "clear", "node", "type", "handler", "options", "disposed", "dispose", "Linkifier2", "currentLink", "_currentLink", "_bufferService", "_linkProviders", "_linkCacheDisposables", "_isMouseOut", "_wasResized", "_activeLine", "_onShowLinkUnderline", "EventEmitter", "onShowLinkUnderline", "event", "_onHideLinkUnderline", "onHideLinkUnderline", "getDisposeArrayDisposable", "_lastMouseEvent", "_clearCurrentLink", "linkProvider", "providerIndex", "indexOf", "splice", "mouseService", "renderService", "_element", "_mouseService", "_handleMouseMove", "_handleMouseDown", "_handleMouseUp", "_positionFromMouseEvent", "composedPath", "contains", "_lastBufferCell", "x", "y", "_handleHover", "_askForLink", "_linkAtPosition", "link", "useLineCache", "_activeProviderReplies", "forEach", "reply", "linkWithState", "Map", "linkProvided", "entries", "_checkLinkProviderResult", "provideLinks", "links", "linksWithState", "map", "size", "_removeIntersectingLinks", "replies", "occupiedCells", "Set", "providerReply", "startX", "range", "endX", "cols", "has", "index", "hasLinkBefore", "j", "linkAtPosition", "find", "_handleNewLink", "_mouseDownLink", "activate", "startRow", "endRow", "_linkLeave", "disposeArray", "state", "decorations", "underline", "pointerCursor", "isHovered", "_linkHover", "Object", "defineProperties", "v", "toggle", "_fireUnderlineEvent", "onRenderedViewportChange", "hover", "showEvent", "scrollOffset", "_createLinkUnderlineEvent", "undefined", "fire", "leave", "lower", "upper", "current", "coords", "getCoords", "x1", "y1", "x2", "y2", "IBufferService", "promptLabel", "OscLinkProvider", "_optionsService", "_oscLinkService", "callback", "line", "result", "linkHandler", "CellData", "lineLength", "getTrimmedLength", "currentLinkId", "currentStart", "finishLink", "hasContent", "loadCell", "hasExtendedAttrs", "extended", "urlId", "getLinkData", "uri", "ignoreLink", "allowNonHttpProtocols", "parsed", "URL", "includes", "protocol", "defaultActivate", "confirm", "newWindow", "open", "opener", "location", "href", "console", "warn", "IOptionsService", "IOscLinkService", "_parentWindow", "_renderCallback", "_refreshCallbacks", "_animationFrame", "cancelAnimationFrame", "requestAnimationFrame", "_innerRefresh", "rowStart", "rowEnd", "rowCount", "_rowCount", "_rowStart", "Math", "min", "_rowEnd", "max", "_runRefreshCallbacks", "_currentDevicePixelRatio", "devicePixelRatio", "clearListener", "listener", "_listener", "_outerListener", "_updateDpr", "_resolutionMediaMatchList", "removeListener", "matchMedia", "addListener", "m", "Terminal", "CoreTerminal", "onFocus", "_onFocus", "_onBlur", "_onA11yCharEmitter", "_onA11yTabEmitter", "onWillOpen", "_onWillOpen", "browser", "Browser", "_keyDownHandled", "_keyDownSeen", "_keyPressHandled", "_unprocessedDeadKey", "_accessibilityManager", "MutableDisposable", "_onCursorMove", "onCursorMove", "_onKey", "_onRender", "_onSelectionChange", "onSelectionChange", "_onTitleChange", "onTitleChange", "_onBell", "onBell", "_setup", "linkifier2", "_instantiationService", "createInstance", "registerLinkProvider", "_decorationService", "DecorationService", "setService", "IDecorationService", "_inputHandler", "onRequestBell", "onRequestRefreshRows", "onRequestSendFocus", "_reportFocus", "onRequestReset", "reset", "onRequestWindowsOptionsReport", "_reportWindowsOptions", "onColor", "_handleColorEvent", "forwardEvent", "_afterResize", "_customKeyEventHandler", "_themeService", "req", "acc", "ident", "channels", "color", "toColorRGB", "colors", "ansi", "C0", "ESC", "toRgbString", "C1_ESCAPED", "ST", "modifyColors", "rgba", "toColor", "narrowedAcc", "restoreColor", "buffers", "active", "preventScroll", "sendFocus", "updateCursorStyle", "_showCursor", "blur", "_handleTextAreaBlur", "_syncTextArea", "isCursorInViewport", "_compositionHelper", "isComposing", "cursorY", "ybase", "bufferLine", "cursorX", "cellHeight", "getWidth", "cellWidth", "cursorTop", "cursorLeft", "lineHeight", "_initGlobal", "_bindKeys", "hasSelection", "copyHandler", "_selectionService", "pasteHandlerWrapper", "handlePasteEvent", "isFirefox", "button", "rightClickHandler", "rightClickSelectsWord", "isLinux", "_keyUp", "_keyDown", "_keyPress", "compositionstart", "compositionupdate", "compositionend", "_inputEvent", "updateCompositionElements", "parent", "isConnected", "_logService", "debug", "_document", "ownerDocument", "dir", "fragment", "createDocumentFragment", "_viewportElement", "_viewportScrollArea", "_helperContainer", "isChromeOS", "_coreBrowserService", "CoreBrowserService", "defaultView", "ICoreBrowserService", "_handleTextAreaFocus", "_charSizeService", "CharSizeService", "ICharSizeService", "ThemeService", "IThemeService", "_characterJoinerService", "CharacterJoinerService", "ICharacterJoinerService", "RenderService", "resize", "_compositionView", "CompositionHelper", "hasRenderer", "setRenderer", "_createRenderer", "MouseService", "IMouseService", "viewport", "Viewport", "onRequestScrollLines", "amount", "suppressScrollEvent", "onRequestSyncScrollBar", "syncScrollArea", "handleCursorMove", "handleResize", "handleBlur", "handleFocus", "SelectionService", "ISelectionService", "onRequestRedraw", "handleSelectionChanged", "columnSelectMode", "onLinuxMouseSelection", "_onScroll", "attachToDom", "BufferDecorationRenderer", "handleMouseDown", "coreMouseService", "areMouseEventsActive", "disable", "enable", "screenReaderMode", "onSpecificOptionChange", "_handleScreenReaderModeOptionChange", "overviewRulerWidth", "_overviewRulerRenderer", "OverviewRulerRenderer", "measure", "bindMouse", "DomRenderer", "el", "sendEvent", "getMouseReportCoords", "but", "action", "overrideType", "buttons", "getLinesScrolled", "deltaY", "triggerMouseEvent", "col", "row", "ctrl", "ctrlKey", "alt", "altKey", "shiftKey", "requestedEvents", "mouseup", "wheel", "mousedrag", "mousemove", "eventListeners", "cancel", "onProtocolChange", "events", "logLevel", "explainEvents", "passive", "activeProtocol", "shouldForceSelection", "hasScrollback", "sequence", "applicationCursorKeys", "data", "abs", "handleWheel", "handleTouchStart", "handleTouchMove", "refreshRows", "shouldColumnSelect", "isCursorInitialized", "disp", "source", "customKeyEventHandler", "joinerId", "deregister", "markers", "cursorYOffset", "addMarker", "decorationOptions", "registerDecoration", "column", "setSelection", "getSelection", "getSelectionPosition", "selectionStart", "selectionEnd", "clearSelection", "selectAll", "selectLines", "shouldIgnoreComposition", "macOptionIsMeta", "keydown", "scrollOnUserInput", "scrollToBottom", "evaluateKeyboardEvent", "scrollCount", "_isThirdLevelShift", "metaKey", "charCodeAt", "ETX", "CR", "domEvent", "thirdLevelKey", "isWindows", "getModifierState", "keyCode", "charCode", "which", "String", "fromCharCode", "inputType", "composed", "hasValidSize", "clearAllMarkers", "getBlankLine", "DEFAULT_ATTR_DATA", "clearTextureAtlas", "WindowsOptionsReportType", "GET_WIN_SIZE_PIXELS", "canvasWidth", "toFixed", "canvasHeight", "GET_CELL_SIZE_PIXELS", "force", "cancelEvents", "_debounceThresholdMS", "_lastRefreshMs", "_additionalRefreshRequested", "_refreshTimeoutID", "clearTimeout", "refreshRequestTime", "Date", "now", "elapsed", "waitPeriodBeforeTrailingRefresh", "_scrollArea", "h", "themeService", "scrollBarWidth", "_currentRowHeight", "_currentDeviceCellHeight", "_lastRecordedBufferLength", "_lastRecordedViewportHeight", "_lastRecordedBufferHeight", "_lastTouchY", "_lastScrollTop", "_wheelPartialScroll", "_refreshAnimationFrame", "_ignoreNextScrollEvent", "_smoothScrollState", "startTime", "origin", "_onRequestScrollLines", "offsetWidth", "_handleScroll", "_activeBuffer", "onBufferActivate", "activeBuffer", "_renderDimensions", "_handleThemeChange", "onChangeColors", "backgroundColor", "background", "immediate", "device", "dpr", "offsetHeight", "newBufferHeight", "round", "scrollTop", "_refresh", "offsetParent", "diff", "_smoothScroll", "_isDisposed", "percent", "_smoothScrollPercent", "_clearSmoothScrollState", "smoothScrollDuration", "scrollPosFromTop", "cancelable", "_getPixelsScrolled", "scrollHeight", "_bubbleScroll", "_applyScrollModifier", "deltaMode", "WheelEvent", "DOM_DELTA_LINE", "DOM_DELTA_PAGE", "startLine", "endLine", "cursorElement", "currentLine", "bufferElements", "isWrapped", "translateToString", "div", "DOM_DELTA_PIXEL", "floor", "modifier", "fastScrollModifier", "fastScrollSensitivity", "scrollSensitivity", "touches", "pageY", "_screenElement", "_decorationElements", "_altBufferIsActive", "_dimensionsChanged", "_container", "_doRefreshDecorations", "_queueRefresh", "onDecorationRegistered", "onDecorationRemoved", "decoration", "_removeDecoration", "addRefreshCallback", "_renderDecoration", "_refreshStyle", "_refreshXPosition", "layer", "marker", "display", "onRenderEmitter", "_createElement", "onDispose", "delete", "anchor", "right", "_zones", "_zonePool", "_zonePoolIndex", "_linePadding", "full", "center", "zones", "overviewRulerOptions", "z", "_lineIntersectsZone", "_lineAdjacentToZone", "_addLineToZone", "startBufferLine", "endBufferLine", "padding", "zone", "drawHeight", "drawWidth", "drawX", "_width", "c", "_coreBrowseService", "_colorZoneStore", "ColorZoneStore", "_shouldUpdateDimensions", "_shouldUpdateAnchor", "_lastKnownBufferLength", "_canvas", "_refreshCanvasDimensions", "parentElement", "insertBefore", "ctx", "getContext", "_ctx", "_registerDecorationListeners", "_registerBufferChangeListeners", "_registerDimensionChangeListeners", "normal", "_refreshDrawHeightConstants", "_refreshColorZonePadding", "_containerHeight", "clientHeight", "_refreshDrawConstants", "outerWidth", "innerWidth", "ceil", "pixelsPerLine", "nonFullHeight", "setPadding", "_refreshDecorations", "clearRect", "addDecoration", "lineWidth", "_renderColorZone", "fillStyle", "fillRect", "updateCanvasDimensions", "updateAnchor", "_isComposing", "_textarea", "_coreService", "_isSendingComposition", "_compositionPosition", "_dataAlreadySent", "_finalizeComposition", "_handleAnyTextareaChanges", "waitForPropagation", "currentCompositionPosition", "input", "substring", "oldValue", "newValue", "DEL", "dontRecurse", "fontFamily", "fontSize", "compositionViewBounds", "ICoreService", "getCoordsRelativeToElement", "rect", "elementStyle", "getComputedStyle", "leftPadding", "parseInt", "getPropertyValue", "topPadding", "colCount", "hasValidCharSize", "cssCellWidth", "cssCellHeight", "isSelection", "moveToRequestedRow", "startY", "targetY", "bufferService", "applicationCursor", "wrappedRowsForRow", "rowsToMove", "wrappedRows", "direction", "verticalDirection", "repeat", "currentRow", "lineWraps", "startCol", "endCol", "forward", "currentCol", "bufferStr", "mod", "count", "str", "rpt", "targetX", "rowDifference", "currX", "TERMINAL_CLASS_PREFIX", "ROW_CONTAINER_CLASS", "FG_CLASS_PREFIX", "BG_CLASS_PREFIX", "FOCUS_CLASS", "SELECTION_CLASS", "nextTerminalId", "_linkifier2", "instantiationService", "l", "u", "p", "_terminalClass", "_refreshRowElements", "_selectionContainer", "createRenderDimensions", "_updateDimensions", "onOptionChange", "_handleOptionsChanged", "_injectCss", "_rowFactory", "DomRendererRowFactory", "_handleLinkHover", "_handleLinkLeave", "_widthCache", "_themeStyleElement", "_dimensionsStyleElement", "WidthCache", "setFont", "fontWeight", "fontWeightBold", "_setDefaultSpacing", "letterSpacing", "overflow", "styles", "_terminalSelector", "foreground", "multiplyOpacity", "cursor", "cursorAccent", "cursorWidth", "selectionBackgroundOpaque", "selectionInactiveBackgroundOpaque", "INVERTED_DEFAULT_COLOR", "opaque", "spacing", "defaultSpacing", "handleDevicePixelRatioChange", "handleCharSizeChanged", "renderRows", "replaceChildren", "viewportStartRow", "viewportEndRow", "viewportCappedStartRow", "viewportCappedEndRow", "documentFragment", "isXFlipped", "_createSelectionElement", "middleRowsCount", "colStart", "colEnd", "cursorAbsoluteY", "cursorBlink", "cursorStyle", "cursorInactiveStyle", "rowElement", "createRow", "_setCellUnderline", "enabled", "maxY", "bufferline", "IInstantiationService", "_workCell", "_columnSelectMode", "_selectionStart", "_selectionEnd", "isCursorRow", "widthCache", "linkStart", "linkEnd", "elements", "joinedRanges", "getJoinedCharacters", "charElement", "getNoBgTrimmedLength", "cellAmount", "oldBg", "oldFg", "oldExt", "oldLinkHover", "oldSpacing", "oldIsInSelection", "classes", "hasHover", "isJoined", "lastCharX", "JoinedCellData", "isInSelection", "_isCellInSelection", "isCursorCell", "isLinkHover", "isDecorated", "forEachDecorationAtCell", "d", "chars", "getChars", "WHITESPACE_CELL_CHAR", "isUnderline", "isOverline", "isBold", "isItalic", "selectionForeground", "ext", "isCursorHidden", "isFocused", "isDim", "isInvisible", "underlineStyle", "isUnderlineColorDefault", "isUnderlineColorRGB", "textDecorationColor", "AttributeData", "getUnderlineColor", "join", "drawBoldTextInBrightColors", "isStrikethrough", "textDecoration", "getFgColor", "fgColorMode", "getFgColorMode", "getBgColor", "bgColorMode", "getBgColorMode", "isInverse", "temp", "temp2", "bgOverride", "fgOverride", "resolvedBg", "isTop", "backgroundColorRGB", "foregroundColorRGB", "_addStyle", "padStart", "_applyMinimumContrast", "$", "className", "minimumContrastRatio", "excludeFromContrastRatioDemands", "getCode", "cache", "_getContrastCache", "adjustedColor", "getColor", "ratio", "ensureContrastRatio", "setColor", "halfContrastCache", "contrastCache", "padChar", "_flat", "Float32Array", "_font", "_fontSize", "_weight", "_weightBold", "_measureElements", "whiteSpace", "fontKerning", "regular", "bold", "italic", "fontStyle", "boldItalic", "body", "_holey", "fill", "font", "weight", "weightBold", "cp", "_measure", "variant", "DIM_OPACITY", "TEXT_BASELINE", "isLegacyEdge", "isPowerlineGlyph", "codepoint", "isSelectAllActive", "selectionStartLength", "finalSelectionStart", "areSelectionValuesReversed", "finalSelectionEnd", "startPlusLength", "_onCharSizeChange", "onCharSizeChange", "_measureStrategy", "DomMeasureStrategy", "onMultipleOptionChange", "_parentElement", "_result", "_measureElement", "geometry", "Number", "firstCell", "content", "combinedData", "isCombined", "getAsCharData", "_characterJoiners", "_nextCharacterJoinerId", "joiner", "id", "ranges", "lineStr", "rangeStartColumn", "currentStringIndex", "rangeStartStringIndex", "rangeAttrFG", "getFg", "rangeAttrBG", "getBg", "_getJoinedRanges", "startIndex", "endIndex", "allJoinedRanges", "error", "joinerRanges", "_mergeRanges", "_stringRangesToCellRanges", "currentRangeIndex", "currentRangeStarted", "currentRange", "getString", "newRange", "inRange", "_isFocused", "_cachedIsFocused", "hasFocus", "queueMicrotask", "_renderer", "decorationService", "coreBrowserService", "_pausedResizeTask", "DebouncedIdleTask", "_isPaused", "_needsFullRefresh", "_isNextRenderRedrawOnly", "_needsSelectionRefresh", "_canvasWidth", "_canvasHeight", "_selectionState", "_onDimensionsChange", "_onRenderedViewportChange", "_onRefreshRequest", "onRefreshRequest", "_renderDebouncer", "RenderDebouncer", "_fullRefresh", "observer", "IntersectionObserver", "_handleIntersectionChange", "threshold", "observe", "disconnect", "entry", "isIntersecting", "intersectionRatio", "flush", "isRedrawOnly", "_fireOnCanvasResize", "renderer", "NON_BREAKING_SPACE_CHAR", "ALL_NON_BREAKING_SPACE_REGEX", "RegExp", "_linkifier", "_dragScrollAmount", "_enabled", "_mouseDownTimeStamp", "_oldHasSelection", "_oldSelectionStart", "_oldSelectionEnd", "_onLinuxMouseSelection", "_onRedrawRequest", "_mouseMoveListener", "_mouseUpListener", "onUserInput", "_trimListener", "onTrim", "_handleTrim", "_handleBufferActivate", "_model", "SelectionModel", "_activeSelectionMode", "_removeMouseDownListeners", "lineText", "startRowEndCol", "isLinuxMouseSelection", "_getMouseBufferCoords", "_areCoordsInSelection", "allowWhitespaceOnlySelection", "getRangeLength", "_selectWordAt", "handleTrim", "offset", "terminalHeight", "macOptionClickForcesSelection", "timeStamp", "_handleIncrementalClick", "detail", "_handleSingleClick", "_handleDoubleClick", "_handleTripleClick", "_addMouseDownListeners", "_dragScrollIntervalTimer", "setInterval", "_dragScroll", "clearInterval", "hasWidth", "_selectWordAtCursor", "_selectLineAt", "previousSelectionEnd", "_selectToWordAt", "_getMouseEventScrollAmount", "timeElapsed", "altClickMovesCursor", "coordinates", "moveToCellSequence", "_fireEventIfSelectionChanged", "_fireOnSelectionChange", "charIndex", "_isClickInSelection", "followWrappedLinesAbove", "followWrappedLinesBelow", "_convertViewportColToCharacterIndex", "charOffset", "leftWideCharCount", "rightWideCharCount", "leftLongCharOffset", "rightLongCharOffset", "charAt", "_isCharWordSeparator", "slice", "trim", "getCodePoint", "previousBufferLine", "previousLineWordPosition", "_getWordAt", "nextBufferLine", "nextLineWordPosition", "wordPosition", "wordSeparator", "wrappedRange", "getWrappedRangeForLine", "first", "last", "createDecorator", "DEFAULT_FOREGROUND", "DEFAULT_BACKGROUND", "DEFAULT_CURSOR", "DEFAULT_CURSOR_ACCENT", "DEFAULT_SELECTION", "DEFAULT_ANSI_COLORS", "freeze", "g", "b", "toCss", "toRgba", "_colors", "_contrastCache", "ColorContrastCache", "_halfContrastCache", "_onChangeColors", "selectionBackgroundTransparent", "blend", "selectionInactiveBackgroundTransparent", "_updateRestoreColors", "_setTheme", "theme", "parseColor", "selectionBackground", "selectionInactiveBackground", "NULL_COLOR", "isOpaque", "opacity", "black", "red", "green", "yellow", "blue", "magenta", "cyan", "white", "brightBlack", "brightRed", "brightGreen", "brightYellow", "brightBlue", "brightMagenta", "brightCyan", "brightWhite", "extendedAnsi", "colorCount", "slot", "_restoreColor", "_restoreColors", "cssString", "fallback", "CircularList", "_maxLength", "onDeleteEmitter", "onDelete", "onInsertEmitter", "onInsert", "onTrimEmitter", "_array", "Array", "_startIndex", "_length", "maxLength", "newMaxLength", "newArray", "_getCyclicIndex", "newLength", "recycle", "isFull", "deleteCount", "items", "countToTrim", "expandListBy", "clone", "val", "depth", "clonedObject", "isArray", "$r", "$g", "$b", "$a", "rgb", "toPaddedHex", "contrastRatio", "l1", "l2", "toChannels", "fgR", "fgG", "fgB", "bgR", "bgG", "bgB", "rgbaColor", "factor", "$ctx", "$litmusColor", "isNode", "willReadFrequently", "globalCompositeOperation", "createLinearGradient", "match", "rgbaMatch", "parseFloat", "getImageData", "relativeLuminance2", "rs", "gs", "bs", "pow", "relativeLuminance", "reduceLuminance", "bgRgba", "fgRgba", "cr", "increaseLuminance", "bgL", "fgL", "resultA", "resultARatio", "resultB", "hasWriteSyncWarnHappened", "_onScrollApi", "_windowsWrappingHeuristics", "_onBinary", "onBinary", "_onData", "onData", "_onLineFeed", "_onResize", "_onWriteParsed", "onWriteParsed", "InstantiationService", "OptionsService", "BufferService", "LogService", "ILogService", "CoreService", "CoreMouseService", "ICoreMouseService", "unicodeService", "UnicodeService", "IUnicodeService", "_charsetService", "CharsetService", "ICharsetService", "OscLinkService", "InputHandler", "onRequestScrollToBottom", "_writeBuffer", "handleUserInput", "_handleWindowsPtyOptionChange", "markRangeDirty", "scrollBottom", "WriteBuffer", "promiseResult", "parse", "write", "maxSubsequentCalls", "LogLevelEnum", "WARN", "writeSync", "isNaN", "MINIMUM_COLS", "MINIMUM_ROWS", "eraseAttr", "scroll", "pageCount", "scrollToTop", "scrollAmount", "registerEscHandler", "registerDcsHandler", "registerCsiHandler", "registerOscHandler", "windowsPty", "buildNumber", "backend", "windowsMode", "_enableWindowsWrappingHeuristics", "disposables", "updateWindowsModeWrappedState", "final", "_listeners", "_disposed", "_event", "arg1", "arg2", "queue", "call", "clearListeners", "from", "to", "GLEVEL", "MAX_PARSEBUFFER_LENGTH", "paramToWindowOption", "opts", "setWinLines", "restoreWin", "minimizeWin", "setWinPosition", "setWinSizePixels", "raiseWin", "lowerWin", "refreshWin", "setWinSizeChars", "maximizeWin", "fullscreenWin", "getWinState", "getWinPosition", "getWinSizePixels", "getScreenSizePixels", "getCellSizePixels", "getWinSizeChars", "getScreenSizeChars", "getIconTitle", "getWinTitle", "pushTitle", "popTitle", "$temp", "getAttrData", "_curAttrData", "_coreMouseService", "_unicodeService", "_parser", "EscapeSequenceParser", "_parseBuffer", "Uint32Array", "_stringDecoder", "StringToUtf32", "_utf8Decoder", "Utf8ToUtf32", "_windowTitle", "_iconName", "_windowTitleStack", "_iconNameStack", "_eraseAttrDataInternal", "_onRequestBell", "_onRequestRefreshRows", "_onRequestReset", "_onRequestSendFocus", "_onRequestSyncScrollBar", "_onRequestWindowsOptionsReport", "_onA11yChar", "_onA11yTab", "_onColor", "_parseStack", "paused", "cursorStartX", "cursorStartY", "decodedLength", "_specialColors", "_dirtyRowTracker", "DirtyRowTracker", "setCsiHandlerFallback", "params", "identifier", "identToString", "toArray", "setEscHandlerFallback", "setExecuteHandlerFallback", "code", "setOscHandlerFallback", "setDcsHandlerFallback", "payload", "setPrintHandler", "print", "insertChars", "intermediates", "scrollLeft", "cursorUp", "scrollRight", "cursorDown", "cursorForward", "cursorBackward", "cursorNextLine", "cursorPrecedingLine", "cursorCharAbsolute", "cursorPosition", "cursorForwardTab", "eraseInDisplay", "prefix", "eraseInLine", "insertLines", "deleteLines", "deleteChars", "scrollUp", "scrollDown", "eraseChars", "cursorBackwardTab", "charPosAbsolute", "hPositionRelative", "repeatPrecedingCharacter", "sendDeviceAttributesPrimary", "sendDeviceAttributesSecondary", "linePosAbsolute", "vPositionRelative", "hVPosition", "tabClear", "setMode", "setModePrivate", "resetMode", "resetModePrivate", "charAttributes", "deviceStatus", "deviceStatusPrivate", "softReset", "setCursorStyle", "setScrollRegion", "saveCursor", "windowOptions", "restoreCursor", "insertColumns", "deleteColumns", "selectProtected", "requestMode", "setExecuteHandler", "BEL", "bell", "LF", "lineFeed", "VT", "FF", "carriageReturn", "BS", "backspace", "HT", "tab", "SO", "shiftOut", "SI", "shiftIn", "C1", "IND", "NEL", "nextLine", "HTS", "tabSet", "OscHandler", "setTitle", "setIconName", "setOrReportIndexedColor", "setHyperlink", "setOrReportFgColor", "setOrReportBgColor", "setOrReportCursorColor", "restoreIndexedColor", "restoreFgColor", "restoreBgColor", "restoreCursorColor", "reverseIndex", "keypadApplicationMode", "keypadNumericMode", "fullReset", "setgLevel", "selectDefaultCharset", "flag", "CHARSETS", "selectCharset", "screenAlignmentPattern", "setErrorHandler", "DcsHandler", "requestStatusString", "Promise", "race", "res", "rej", "catch", "err", "_getCurrentLinkId", "wasPaused", "_logSlowResolvingAsync", "DEBUG", "prototype", "split", "clearRange", "len", "decode", "subarray", "_preserveStack", "chWidth", "charset", "wraparoundMode", "wraparound", "insertMode", "modes", "curAttr", "bufferRow", "markDirty", "setCellFromCodePoint", "wcwidth", "ch", "stringFromCodePoint", "addLineToLink", "_eraseAttrData", "insertCells", "getNullCell", "NULL_CELL_CODE", "NULL_CELL_WIDTH", "addCodepointToCell", "precedingCodepoint", "convertEol", "reverseWraparound", "_restrictCursor", "originalX", "nextStop", "maxCol", "_setCursor", "diffToTop", "_moveCursor", "diffToBottom", "param", "tabs", "prevStop", "clearWrap", "respectProtect", "replaceCells", "clearMarkers", "_eraseInBufferLine", "_resetBufferLine", "scrollBackSize", "trimStart", "scrollBottomRowsOffset", "scrollBottomAbsolute", "deleteCells", "_is", "term", "termName", "setgCharset", "DEFAULT_CHARSET", "applicationKeypad", "activeEncoding", "activateAltBuffer", "activateNormalBuffer", "dm", "mouseProtocol", "mouseEncoding", "cs", "b2v", "mode", "c1", "c2", "c3", "fromColorRGB", "attr", "accu", "cSpace", "advance", "hasSubParams", "subparams", "getSubParams", "_updateAttrColor", "underlineColor", "updateExtended", "_processSGR0", "_processUnderline", "_extractColor", "savedX", "savedY", "savedCurAttrData", "savedCharset", "isBlinking", "bottom", "second", "_savedCharset", "slots", "idx", "spec", "exec", "isValidColorIndex", "args", "_createHyperlink", "_finishHyperlink", "parsedParams", "idParamIndex", "findIndex", "startsWith", "registerLink", "_setOrReportSpecialColor", "collectAndFlag", "scrollRegionHeight", "shiftElements", "level", "yOffset", "markAllDirty", "isProtected", "_disposables", "_value", "f", "array", "_data", "third", "fourth", "navigator", "userAgent", "platform", "isSafari", "majorVersion", "isIpad", "isIphone", "_getKey", "_search", "values", "mid", "midKey", "TaskQueue", "_tasks", "_i", "task", "_start", "_idleCallback", "_cancelCallback", "_requestCallback", "_process", "deadline", "taskDuration", "longestTask", "lastDeadlineRemaining", "timeRemaining", "deadlineRemaining", "PriorityTaskQueue", "_createDeadline", "duration", "IdleTaskQueue", "requestIdleCallback", "cancelIdleCallback", "constructor", "_queue", "enqueue", "lastChar", "CHAR_DATA_CODE_INDEX", "WHITESPACE_CELL_CODE", "ExtendedAttrs", "newObj", "isBlink", "isFgRGB", "isBgRGB", "isFgPalette", "isBgPalette", "isFgDefault", "isBgDefault", "isAttributeDefault", "isEmpty", "getUnderlineColorMode", "isUnderlineColorPalette", "getUnderlineStyle", "_urlId", "_ext", "MAX_BUFFER_SIZE", "_hasScrollback", "_nullCell", "fromCharData", "NULL_CELL_CHAR", "_whitespaceCell", "WHITESPACE_CELL_WIDTH", "_isClearing", "_memoryCleanupQueue", "_memoryCleanupPosition", "_cols", "_rows", "_getCorrectBufferLength", "setupTabStops", "BufferLine", "relativeY", "correctBufferLength", "scrollback", "fillAttr", "newCols", "newRows", "nullCell", "dirtyMemoryLines", "addToY", "amountToTrim", "_isReflowEnabled", "_reflow", "_batchedMemoryCleanup", "normalRun", "counted", "cleanupMemory", "_reflowLarger", "_reflowSmaller", "toRemove", "reflowLargerGetLinesToRemove", "newLayoutResult", "reflowLargerCreateNewLayout", "reflowLargerApplyNewLayout", "layout", "_reflowLargerAdjustViewport", "countRemoved", "viewportAdjustments", "toInsert", "countToInsert", "wrappedLines", "absoluteY", "lastLineLength", "destLineLengths", "reflowSmallerGetNewLineLengths", "linesToAdd", "trimmedLines", "newLines", "newLine", "destLineIndex", "destCol", "srcLineIndex", "srcCol", "cellsToCopy", "copyCellsFrom", "wrappedLinesIndex", "getWrappedLineTrimmedLength", "setCell", "insertEvents", "originalLines", "originalLinesLength", "originalLineIndex", "nextToInsertIndex", "nextToInsert", "countInsertedSoFar", "nextI", "insertCountEmitted", "lineIndex", "trimRight", "tabStopWidth", "Marker", "_removeMarker", "$startIndex", "fillCellData", "_combined", "_extendedAttrs", "CHAR_DATA_ATTR_INDEX", "CHAR_DATA_CHAR_INDEX", "CHAR_DATA_WIDTH_INDEX", "codePoint", "eAttrs", "byteLength", "uint32Cells", "keys", "extKeys", "src", "applyInReverse", "srcData", "srcCombinedKeys", "bufferCols", "endsInNull", "followingLineStartsWithWide", "oldCols", "bufferAbsoluteY", "srcTrimmedTineLength", "srcRemainingCells", "destRemainingCells", "countToRemove", "nextToRemoveIndex", "nextToRemoveStart", "countRemovedSoFar", "newLayout", "newLayoutLines", "newLineLengths", "cellsNeeded", "reduce", "srcLine", "cellsAvailable", "oldTrimmedLength", "endsWithWide", "BufferSet", "_onBufferActivate", "_normal", "Buffer", "fillViewportRows", "_alt", "inactiveBuffer", "obj", "setFromCharData", "combined", "DEFAULT_COLOR", "DEFAULT_ATTR", "DEFAULT_EXT", "_id", "isDisposed", "_nextId", "_onDispose", "disposable", "C", "NUL", "SOH", "STX", "EOT", "ENQ", "ACK", "DLE", "DC1", "DC2", "DC3", "DC4", "NAK", "SYN", "ETB", "CAN", "EM", "SUB", "FS", "GS", "RS", "US", "SP", "PAD", "HOP", "BPH", "NBH", "SSA", "ESA", "HTJ", "VTS", "PLD", "PLU", "RI", "SS2", "SS3", "DCS", "PU1", "PU2", "STS", "CCH", "MW", "SPA", "EPA", "SOS", "SGCI", "SCI", "CSI", "OSC", "PM", "APC", "KEYCODE_KEY_MAPPINGS", "applicationCursorMode", "modifiers", "keyMapping", "keyString", "toUpperCase", "toLowerCase", "_interim", "startPos", "interim", "Uint8Array", "byte1", "byte2", "byte3", "byte4", "discardInterim", "tmp", "missing", "fourStop", "BMP_COMBINING", "HIGH_COMBINING", "table", "version", "num", "ucs", "_action", "_callbacks", "_pendingData", "_bufferOffset", "_isSyncWriting", "_syncCalls", "_didUserInput", "chunk", "cb", "_innerWrite", "lastTime", "continuation", "resolve", "then", "RGB_REX", "HASH_REX", "pad", "bits", "s2", "low", "base", "adv", "PAYLOAD_LIMIT", "EMPTY_HANDLERS", "_handlers", "create", "_active", "_ident", "_handlerFb", "_stack", "loopPosition", "fallThrough", "handlerList", "handlerIndex", "unhook", "hook", "put", "utf32ToString", "success", "handlerResult", "EMPTY_PARAMS", "Params", "addParam", "_handler", "_params", "_hitLimit", "ret", "TransitionTable", "next", "codes", "NON_ASCII_PRINTABLE", "VT500_TRANSITION_TABLE", "blueprint", "apply", "unused", "PRINTABLES", "EXECUTABLES", "states", "setDefault", "addMany", "_transitions", "handlers", "handlerPos", "transition", "chunkPos", "initialState", "currentState", "_collect", "_printHandlerFb", "_executeHandlerFb", "_csiHandlerFb", "_escHandlerFb", "_errorHandlerFb", "_printHandler", "_executeHandlers", "_csiHandlers", "_escHandlers", "_oscParser", "OscParser", "_dcsParser", "DcsParser", "_errorHandler", "finalRange", "intermediate", "finalCode", "reverse", "clearPrintHandler", "_identifier", "registerHandler", "clearHandler", "setHandlerFallback", "clearErrorHandler", "collect", "abort", "addSubParam", "addDigit", "handlersEsc", "jj", "_state", "_put", "MAX_VALUE", "k", "maxSubParamsLength", "Int32Array", "_subParams", "_subParamsLength", "_subParamsIdx", "Uint16Array", "_rejectDigits", "_rejectSubDigits", "_digitIsSub", "newParams", "getSubParamsAll", "store", "cur", "_addons", "instance", "terminal", "loadedAddon", "_wrappedAddonDispose", "_buffer", "viewportY", "baseY", "BufferLineApiView", "_line", "startColumn", "endColumn", "BufferNamespaceApi", "_core", "_onBufferChange", "onBufferChange", "BufferApiView", "_alternate", "alternate", "init", "provider", "versions", "activeVersion", "isUserScrolling", "_cachedBlankLine", "topRow", "bottomRow", "willBufferBeTrimmed", "copyFrom", "oldYdisp", "glevel", "_charsets", "DEFAULT_PROTOCOLS", "NONE", "restrict", "X10", "VT200", "DRAG", "ANY", "eventCode", "isSGR", "S", "DEFAULT_ENCODINGS", "DEFAULT", "SGR", "SGR_PIXELS", "_protocols", "_encodings", "_activeProtocol", "_activeEncoding", "_lastEvent", "_onProtocolChange", "name", "addProtocol", "addEncoding", "encoding", "_equalEvents", "report", "triggerBinaryEvent", "down", "up", "drag", "move", "e1", "e2", "pixels", "DEFAULT_MODES", "DEFAULT_DEC_PRIVATE_MODES", "_onUserInput", "_onRequestScrollToBottom", "wasUserInput", "disableStdin", "$xmin", "$xmax", "_decorations", "SortedList", "_onDecorationRegistered", "_onDecorationRemoved", "Decoration", "markerDispose", "insert", "xmin", "xmax", "getKeyIterator", "forEachByKey", "_cachedBg", "_cachedFg", "foregroundColor", "ServiceCollection", "_entries", "service", "_services", "ctor", "serviceDependencies", "getServiceDependencies", "sort", "serviceArgs", "dependency", "firstServiceArgPos", "optionsKeyToLogLevel", "trace", "TRACE", "info", "INFO", "ERROR", "off", "OFF", "traceLogger", "_logLevel", "_updateLogLevel", "optionalParams", "message", "_evalLazyOptionalParams", "logger", "_log", "log", "_target", "descriptor", "fn", "JSON", "stringify", "DEFAULT_OPTIONS", "customGlyphs", "allowProposedApi", "allowTransparency", "FONT_WEIGHT_OPTIONS", "_onOptionChange", "defaultOptions", "_sanitizeAndValidateOption", "_setupOptions", "eventKey", "getter", "propName", "setter", "desc", "defineProperty", "_entriesWithId", "_dataByLinkId", "_removeMarkerFromLink", "castData", "_getEntryIdKey", "linkId", "every", "linkData", "DI_TARGET", "DI_DEPENDENCIES", "serviceRegistry", "decorator", "arguments", "_providers", "_onChange", "onChange", "defaultProvider", "UnicodeV6", "_activeProvider", "__webpack_module_cache__", "__webpack_require__", "moduleId", "cachedModule", "__webpack_modules__", "CONSTRUCTOR_ONLY_OPTIONS", "_addonManager", "AddonManager", "_publicOptions", "_checkReadonlyOptions", "_checkProposedApi", "parser", "ParserApi", "unicode", "UnicodeApi", "mouseTrackingMode", "applicationCursorKeysMode", "applicationKeypadMode", "originMode", "reverseWraparoundMode", "sendFocusMode", "columns", "_verifyIntegers", "attachCustomKeyEventHandler", "registerCharacterJoiner", "deregisterCharacterJoiner", "registerMarker", "_verifyPositiveIntegers", "scrollPages", "scrollToLine", "addon", "loadAddon", "strings", "Infinity", "exports", "module", "hex", "SparkMD5", "start", "toArray", "dispatchEvent", "csrfToken", "delegate", "error", "HTMLElement", "FrameLoadingStyle", "location", "cspNonce", "FetchMethod", "delegate", "error", "FormSubmissionState", "FormEnctype", "cookie", "TimingMetric", "VisitState", "SystemStatusCode", "session", "visit", "PageStage", "element", "document", "createConsumer", "m", "application", "error", "matches", "delegate", "fetch", "delegate", "matches", "match", "oldValue", "error", "constructor", "extend", "application", "element", "error", "CustomEvent", "confirm", "href", "start"]
}
